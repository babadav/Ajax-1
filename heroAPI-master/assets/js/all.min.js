var HeroApi=function(){function e(e){function t(e){e.preventDefault();var t=e.currentTarget.children[1].children;$(".hero-info-div").toggleClass("active"),$(r).toggleClass("active"),$(this).toggleClass("active"),$(t).toggleClass("show")}console.log(e);for(var a=0;a<e.data.results.length;a++){var s=$("<div>"),i=$("<div>"),n=$("<div>"),r=$("<h1>"),d=$("<p>"),l=$("<p>"),o=$("<p>"),p=$("<p>"),c=$("<img>");$(s).addClass("hero-div"),$(i).addClass("hero-info-div"),$(c).attr("src",e.data.results[a].thumbnail.path+"."+e.data.results[a].thumbnail.extension),$(s).append(c),$(n).append(s),$(d).html(e.data.results[a].description),$(d).addClass("hero-description"),$(i).append(d),$(n).append(i),$(r).html(e.data.results[a].name),$(i).append(r),$(s).append(i),$(".results-container").append(s),e.data.results[a].events.items[0]&&($(l).html(e.data.results[a].events.items[0].name),$(l).addClass("hero-description"),$(i).append(l)),e.data.results[a].series.items[0]&&($(o).html(e.data.results[a].series.items[0].name),$(o).addClass("hero-description"),$(i).append(o)),e.data.results[a].stories.items[0]&&($(p).html(e.data.results[a].stories.items[0].name),$(p).addClass("hero-description"),$(i).append(p)),$(s).on("click",t)}}function t(){$(".button-1").on("click",function(t){t.preventDefault();for(var a=0;a<1;a++)$.ajax({url:"https://gateway.marvel.com/v1/public/characters?apikey=1462a753c71ee4965b382fa71c3ef8f5&offset=0"}).done(e)})}function a(){t()}var s={};return s.init=a,s}();HeroApi.init();
//# sourceMappingURL=data:application/json;charset=utf8;base64,{"version":3,"sources":["all.min.js"],"names":["HeroApi","populate","hero","expandInfoWindow","e","preventDefault","heroInfo","currentTarget","children","$","toggleClass","name","this","console","log","i","data","results","length","heroDiv","heroInfoDiv","heroDivWrapper","description","heroEvents","heroSeries","heroStories","thumbnail","addClass","attr","path","extension","append","html","events","items","series","stories","on","setupListeners","ajax","url","done","init","shared"],"mappings":"AAAA,GAAIA,SAAW,WAId,QAASC,GAASC,GA4DjB,QAASC,GAAiBC,GACzBA,EAAEC,gBACF,IAAIC,GAAWF,EAAEG,cAAcC,SAAS,GAAGA,QAC3CC,GAAE,kBAAkBC,YAAY,UAChCD,EAAEE,GAAMD,YAAY,UACpBD,EAAEG,MAAMF,YAAY,UACpBD,EAAEH,GAAUI,YAAY,QAjEzBG,QAAQC,IAAIZ,EACZ,KAAK,GAAIa,GAAI,EAAGA,EAAIb,EAAKc,KAAKC,QAAQC,OAAQH,IAAK,CAClD,GAAII,GAAUV,EAAE,SACZW,EAAcX,EAAE,SAChBY,EAAiBZ,EAAE,SACnBE,EAAOF,EAAE,QACTa,EAAcb,EAAE,OAChBc,EAAYd,EAAE,OACde,EAAaf,EAAE,OACfgB,EAAchB,EAAE,OAChBiB,EAAYjB,EAAE,QAKlBA,GAAEU,GAASQ,SAAS,YAGpBlB,EAAEW,GAAaO,SAAS,iBACxBlB,EAAEiB,GAAWE,KAAK,MAAO1B,EAAKc,KAAKC,QAAQF,GAAGW,UAAUG,KAAO,IAAM3B,EAAKc,KAAKC,QAAQF,GAAGW,UAAUI,WACpGrB,EAAEU,GAASY,OAAOL,GAClBjB,EAAEY,GAAgBU,OAAOZ,GAEzBV,EAAEa,GAAaU,KAAK9B,EAAKc,KAAKC,QAAQF,GAAGO,aACzCb,EAAEa,GAAaK,SAAS,oBACxBlB,EAAEW,GAAaW,OAAOT,GACtBb,EAAEY,GAAgBU,OAAOX,GAGzBX,EAAEE,GAAMqB,KAAK9B,EAAKc,KAAKC,QAAQF,GAAGJ,MAClCF,EAAEW,GAAaW,OAAOpB,GACtBF,EAAEU,GAASY,OAAOX,GAClBX,EAAE,sBAAsBsB,OAAOZ,GAE3BjB,EAAKc,KAAKC,QAAQF,GAAGkB,OAAOC,MAAM,KACrCzB,EAAEc,GAAYS,KAAK9B,EAAKc,KAAKC,QAAQF,GAAGkB,OAAOC,MAAM,GAAGvB,MACxDF,EAAEc,GAAYI,SAAS,oBACvBlB,EAAEW,GAAaW,OAAOR,IAKnBrB,EAAKc,KAAKC,QAAQF,GAAGoB,OAAOD,MAAM,KACrCzB,EAAEe,GAAYQ,KAAK9B,EAAKc,KAAKC,QAAQF,GAAGoB,OAAOD,MAAM,GAAGvB,MACxDF,EAAEe,GAAYG,SAAS,oBACvBlB,EAAEW,GAAaW,OAAOP,IAGnBtB,EAAKc,KAAKC,QAAQF,GAAGqB,QAAQF,MAAM,KACtCzB,EAAEgB,GAAaO,KAAK9B,EAAKc,KAAKC,QAAQF,GAAGqB,QAAQF,MAAM,GAAGvB,MAC1DF,EAAEgB,GAAaE,SAAS,oBACxBlB,EAAEW,GAAaW,OAAON,IAKvBhB,EAAEU,GAASkB,GAAG,QAASlC,IAezB,QAASmC,KAIR7B,EAAE,aAAa4B,GAAG,QAAS,SAASjC,GACnCA,EAAEC,gBAEF,KAAK,GAAIU,GAAI,EAAGA,EAAI,EAAGA,IACtBN,EAAE8B,MACDC,IAAKA,qGAELC,KAAKxC,KAgBT,QAASyC,KACRJ,IAvGD,GAAIK,KA2GJ,OAFAA,GAAOD,KAAOA,EAEPC,IAGR3C,SAAQ0C","file":"all.min.js","sourcesContent":["var HeroApi=function(){function e(e){function t(e){e.preventDefault();var t=e.currentTarget.children[1].children;$(\".hero-info-div\").toggleClass(\"active\"),$(r).toggleClass(\"active\"),$(this).toggleClass(\"active\"),$(t).toggleClass(\"show\")}console.log(e);for(var a=0;a<e.data.results.length;a++){var s=$(\"<div>\"),i=$(\"<div>\"),n=$(\"<div>\"),r=$(\"<h1>\"),d=$(\"<p>\"),l=$(\"<p>\"),o=$(\"<p>\"),p=$(\"<p>\"),c=$(\"<img>\");$(s).addClass(\"hero-div\"),$(i).addClass(\"hero-info-div\"),$(c).attr(\"src\",e.data.results[a].thumbnail.path+\".\"+e.data.results[a].thumbnail.extension),$(s).append(c),$(n).append(s),$(d).html(e.data.results[a].description),$(d).addClass(\"hero-description\"),$(i).append(d),$(n).append(i),$(r).html(e.data.results[a].name),$(i).append(r),$(s).append(i),$(\".results-container\").append(s),e.data.results[a].events.items[0]&&($(l).html(e.data.results[a].events.items[0].name),$(l).addClass(\"hero-description\"),$(i).append(l)),e.data.results[a].series.items[0]&&($(o).html(e.data.results[a].series.items[0].name),$(o).addClass(\"hero-description\"),$(i).append(o)),e.data.results[a].stories.items[0]&&($(p).html(e.data.results[a].stories.items[0].name),$(p).addClass(\"hero-description\"),$(i).append(p)),$(s).on(\"click\",t)}}function t(){$(\".button-1\").on(\"click\",function(t){t.preventDefault();for(var a=0;a<1;a++)$.ajax({url:\"https://gateway.marvel.com/v1/public/characters?apikey=1462a753c71ee4965b382fa71c3ef8f5&offset=0\"}).done(e)})}function a(){t()}var s={};return s.init=a,s}();HeroApi.init();\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFsbC5taW4uanMiXSwibmFtZXMiOlsiSGVyb0FwaSIsInBvcHVsYXRlIiwiaGVybyIsImV4cGFuZEluZm9XaW5kb3ciLCJlIiwicHJldmVudERlZmF1bHQiLCJoZXJvSW5mbyIsImN1cnJlbnRUYXJnZXQiLCJjaGlsZHJlbiIsIiQiLCJ0b2dnbGVDbGFzcyIsIm5hbWUiLCJ0aGlzIiwiY29uc29sZSIsImxvZyIsImkiLCJkYXRhIiwicmVzdWx0cyIsImxlbmd0aCIsImhlcm9EaXYiLCJoZXJvSW5mb0RpdiIsImhlcm9EaXZXcmFwcGVyIiwiZGVzY3JpcHRpb24iLCJoZXJvRXZlbnRzIiwiaGVyb1NlcmllcyIsImhlcm9TdG9yaWVzIiwidGh1bWJuYWlsIiwiYWRkQ2xhc3MiLCJhdHRyIiwicGF0aCIsImV4dGVuc2lvbiIsImFwcGVuZCIsImh0bWwiLCJldmVudHMiLCJpdGVtcyIsInNlcmllcyIsInN0b3JpZXMiLCJvbiIsInNldHVwTGlzdGVuZXJzIiwiYWpheCIsInVybCIsImRvbmUiLCJpbml0Iiwic2hhcmVkIl0sIm1hcHBpbmdzIjoiQUFBQSxHQUFJQSxTQUFXLFdBSWQsUUFBU0MsR0FBU0MsR0E0RGpCLFFBQVNDLEdBQWlCQyxHQUN6QkEsRUFBRUMsZ0JBQ0YsSUFBSUMsR0FBV0YsRUFBRUcsY0FBY0MsU0FBUyxHQUFHQSxRQUMzQ0MsR0FBRSxrQkFBa0JDLFlBQVksVUFDaENELEVBQUVFLEdBQU1ELFlBQVksVUFDcEJELEVBQUVHLE1BQU1GLFlBQVksVUFDcEJELEVBQUVILEdBQVVJLFlBQVksUUFqRXpCRyxRQUFRQyxJQUFJWixFQUNaLEtBQUssR0FBSWEsR0FBSSxFQUFHQSxFQUFJYixFQUFLYyxLQUFLQyxRQUFRQyxPQUFRSCxJQUFLLENBQ2xELEdBQUlJLEdBQVVWLEVBQUUsU0FDWlcsRUFBY1gsRUFBRSxTQUNoQlksRUFBaUJaLEVBQUUsU0FDbkJFLEVBQU9GLEVBQUUsUUFDVGEsRUFBY2IsRUFBRSxPQUNoQmMsRUFBWWQsRUFBRSxPQUNkZSxFQUFhZixFQUFFLE9BQ2ZnQixFQUFjaEIsRUFBRSxPQUNoQmlCLEVBQVlqQixFQUFFLFFBS2xCQSxHQUFFVSxHQUFTUSxTQUFTLFlBR3BCbEIsRUFBRVcsR0FBYU8sU0FBUyxpQkFDeEJsQixFQUFFaUIsR0FBV0UsS0FBSyxNQUFPMUIsRUFBS2MsS0FBS0MsUUFBUUYsR0FBR1csVUFBVUcsS0FBTyxJQUFNM0IsRUFBS2MsS0FBS0MsUUFBUUYsR0FBR1csVUFBVUksV0FDcEdyQixFQUFFVSxHQUFTWSxPQUFPTCxHQUNsQmpCLEVBQUVZLEdBQWdCVSxPQUFPWixHQUV6QlYsRUFBRWEsR0FBYVUsS0FBSzlCLEVBQUtjLEtBQUtDLFFBQVFGLEdBQUdPLGFBQ3pDYixFQUFFYSxHQUFhSyxTQUFTLG9CQUN4QmxCLEVBQUVXLEdBQWFXLE9BQU9ULEdBQ3RCYixFQUFFWSxHQUFnQlUsT0FBT1gsR0FHekJYLEVBQUVFLEdBQU1xQixLQUFLOUIsRUFBS2MsS0FBS0MsUUFBUUYsR0FBR0osTUFDbENGLEVBQUVXLEdBQWFXLE9BQU9wQixHQUN0QkYsRUFBRVUsR0FBU1ksT0FBT1gsR0FDbEJYLEVBQUUsc0JBQXNCc0IsT0FBT1osR0FFM0JqQixFQUFLYyxLQUFLQyxRQUFRRixHQUFHa0IsT0FBT0MsTUFBTSxLQUNyQ3pCLEVBQUVjLEdBQVlTLEtBQUs5QixFQUFLYyxLQUFLQyxRQUFRRixHQUFHa0IsT0FBT0MsTUFBTSxHQUFHdkIsTUFDeERGLEVBQUVjLEdBQVlJLFNBQVMsb0JBQ3ZCbEIsRUFBRVcsR0FBYVcsT0FBT1IsSUFLbkJyQixFQUFLYyxLQUFLQyxRQUFRRixHQUFHb0IsT0FBT0QsTUFBTSxLQUNyQ3pCLEVBQUVlLEdBQVlRLEtBQUs5QixFQUFLYyxLQUFLQyxRQUFRRixHQUFHb0IsT0FBT0QsTUFBTSxHQUFHdkIsTUFDeERGLEVBQUVlLEdBQVlHLFNBQVMsb0JBQ3ZCbEIsRUFBRVcsR0FBYVcsT0FBT1AsSUFHbkJ0QixFQUFLYyxLQUFLQyxRQUFRRixHQUFHcUIsUUFBUUYsTUFBTSxLQUN0Q3pCLEVBQUVnQixHQUFhTyxLQUFLOUIsRUFBS2MsS0FBS0MsUUFBUUYsR0FBR3FCLFFBQVFGLE1BQU0sR0FBR3ZCLE1BQzFERixFQUFFZ0IsR0FBYUUsU0FBUyxvQkFDeEJsQixFQUFFVyxHQUFhVyxPQUFPTixJQUt2QmhCLEVBQUVVLEdBQVNrQixHQUFHLFFBQVNsQyxJQWV6QixRQUFTbUMsS0FJUjdCLEVBQUUsYUFBYTRCLEdBQUcsUUFBUyxTQUFTakMsR0FDbkNBLEVBQUVDLGdCQUVGLEtBQUssR0FBSVUsR0FBSSxFQUFHQSxFQUFJLEVBQUdBLElBQ3RCTixFQUFFOEIsTUFDREMsSUFBS0EscUdBRUxDLEtBQUt4QyxLQWdCVCxRQUFTeUMsS0FDUkosSUF2R0QsR0FBSUssS0EyR0osT0FGQUEsR0FBT0QsS0FBT0EsRUFFUEMsSUFHUjNDLFNBQVEwQyIsImZpbGUiOiJhbGwubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIEhlcm9BcGk9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUpe2Z1bmN0aW9uIHQoZSl7ZS5wcmV2ZW50RGVmYXVsdCgpO3ZhciB0PWUuY3VycmVudFRhcmdldC5jaGlsZHJlblsxXS5jaGlsZHJlbjskKFwiLmhlcm8taW5mby1kaXZcIikudG9nZ2xlQ2xhc3MoXCJhY3RpdmVcIiksJChyKS50b2dnbGVDbGFzcyhcImFjdGl2ZVwiKSwkKHRoaXMpLnRvZ2dsZUNsYXNzKFwiYWN0aXZlXCIpLCQodCkudG9nZ2xlQ2xhc3MoXCJzaG93XCIpfWNvbnNvbGUubG9nKGUpO2Zvcih2YXIgYT0wO2E8ZS5kYXRhLnJlc3VsdHMubGVuZ3RoO2ErKyl7dmFyIHM9JChcIjxkaXY+XCIpLGk9JChcIjxkaXY+XCIpLG49JChcIjxkaXY+XCIpLHI9JChcIjxoMT5cIiksZD0kKFwiPHA+XCIpLGw9JChcIjxwPlwiKSxvPSQoXCI8cD5cIikscD0kKFwiPHA+XCIpLGM9JChcIjxpbWc+XCIpOyQocykuYWRkQ2xhc3MoXCJoZXJvLWRpdlwiKSwkKGkpLmFkZENsYXNzKFwiaGVyby1pbmZvLWRpdlwiKSwkKGMpLmF0dHIoXCJzcmNcIixlLmRhdGEucmVzdWx0c1thXS50aHVtYm5haWwucGF0aCtcIi5cIitlLmRhdGEucmVzdWx0c1thXS50aHVtYm5haWwuZXh0ZW5zaW9uKSwkKHMpLmFwcGVuZChjKSwkKG4pLmFwcGVuZChzKSwkKGQpLmh0bWwoZS5kYXRhLnJlc3VsdHNbYV0uZGVzY3JpcHRpb24pLCQoZCkuYWRkQ2xhc3MoXCJoZXJvLWRlc2NyaXB0aW9uXCIpLCQoaSkuYXBwZW5kKGQpLCQobikuYXBwZW5kKGkpLGUuZGF0YS5yZXN1bHRzW2FdLmV2ZW50cy5pdGVtc1swXSYmKCQobCkuaHRtbChlLmRhdGEucmVzdWx0c1thXS5ldmVudHMuaXRlbXNbMF0ubmFtZSksJChsKS5hZGRDbGFzcyhcImhlcm8tZGVzY3JpcHRpb25cIiksJChpKS5hcHBlbmQobCkpLCQocikuaHRtbChlLmRhdGEucmVzdWx0c1thXS5uYW1lKSwkKGkpLmFwcGVuZChyKSwkKHMpLmFwcGVuZChpKSwkKFwiLnJlc3VsdHMtY29udGFpbmVyXCIpLmFwcGVuZChzKSxlLmRhdGEucmVzdWx0c1thXS5zZXJpZXMuaXRlbXNbMF0mJigkKG8pLmh0bWwoZS5kYXRhLnJlc3VsdHNbYV0uc2VyaWVzLml0ZW1zWzBdLm5hbWUpLCQobykuYWRkQ2xhc3MoXCJoZXJvLWRlc2NyaXB0aW9uXCIpLCQoaSkuYXBwZW5kKG8pKSxlLmRhdGEucmVzdWx0c1thXS5zdG9yaWVzLml0ZW1zWzBdJiYoJChwKS5odG1sKGUuZGF0YS5yZXN1bHRzW2FdLnN0b3JpZXMuaXRlbXNbMF0ubmFtZSksJChwKS5hZGRDbGFzcyhcImhlcm8tZGVzY3JpcHRpb25cIiksJChpKS5hcHBlbmQocCkpLCQocykub24oXCJjbGlja1wiLHQpfX1mdW5jdGlvbiB0KCl7JChcIi5idXR0b24tMVwiKS5vbihcImNsaWNrXCIsZnVuY3Rpb24odCl7dC5wcmV2ZW50RGVmYXVsdCgpO2Zvcih2YXIgYT0wO2E8MTthKyspJC5hamF4KHt1cmw6XCJodHRwczovL2dhdGV3YXkubWFydmVsLmNvbS92MS9wdWJsaWMvY2hhcmFjdGVycz9hcGlrZXk9MTQ2MmE3NTNjNzFlZTQ5NjViMzgyZmE3MWMzZWY4ZjUmb2Zmc2V0PTBcIn0pLmRvbmUoZSl9KX1mdW5jdGlvbiBhKCl7dCgpfXZhciBzPXt9O3JldHVybiBzLmluaXQ9YSxzfSgpO0hlcm9BcGkuaW5pdCgpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbUZzYkM1dGFXNHVhbk1pWFN3aWJtRnRaWE1pT2xzaVNHVnliMEZ3YVNJc0luQnZjSFZzWVhSbElpd2lhR1Z5YnlJc0ltVjRjR0Z1WkVsdVptOVhhVzVrYjNjaUxDSmxJaXdpY0hKbGRtVnVkRVJsWm1GMWJIUWlMQ0pvWlhKdlNXNW1ieUlzSW1OMWNuSmxiblJVWVhKblpYUWlMQ0pqYUdsc1pISmxiaUlzSWlRaUxDSjBiMmRuYkdWRGJHRnpjeUlzSW01aGJXVWlMQ0owYUdseklpd2lZMjl1YzI5c1pTSXNJbXh2WnlJc0lta2lMQ0prWVhSaElpd2ljbVZ6ZFd4MGN5SXNJbXhsYm1kMGFDSXNJbWhsY205RWFYWWlMQ0pvWlhKdlNXNW1iMFJwZGlJc0ltaGxjbTlFYVhaWGNtRndjR1Z5SWl3aVpHVnpZM0pwY0hScGIyNGlMQ0pvWlhKdlJYWmxiblJ6SWl3aWFHVnliMU5sY21sbGN5SXNJbWhsY205VGRHOXlhV1Z6SWl3aWRHaDFiV0p1WVdsc0lpd2lZV1JrUTJ4aGMzTWlMQ0poZEhSeUlpd2ljR0YwYUNJc0ltVjRkR1Z1YzJsdmJpSXNJbUZ3Y0dWdVpDSXNJbWgwYld3aUxDSmxkbVZ1ZEhNaUxDSnBkR1Z0Y3lJc0luTmxjbWxsY3lJc0luTjBiM0pwWlhNaUxDSnZiaUlzSW5ObGRIVndUR2x6ZEdWdVpYSnpJaXdpWVdwaGVDSXNJblZ5YkNJc0ltUnZibVVpTENKcGJtbDBJaXdpYzJoaGNtVmtJbDBzSW0xaGNIQnBibWR6SWpvaVFVRkJRU3hIUVVGSlFTeFRRVUZYTEZkQlNXUXNVVUZCVTBNc1IwRkJVME1zUjBGNVJHcENMRkZCUVZORExFZEJRV2xDUXl4SFFVTjZRa0VzUlVGQlJVTXNaMEpCUTBZc1NVRkJTVU1zUjBGQlYwWXNSVUZCUlVjc1kwRkJZME1zVTBGQlV5eEhRVUZIUVN4UlFVTXpRME1zUjBGQlJTeHJRa0ZCYTBKRExGbEJRVmtzVlVGRGFFTkVMRVZCUVVWRkxFZEJRVTFFTEZsQlFWa3NWVUZEY0VKRUxFVkJRVVZITEUxQlFVMUdMRmxCUVZrc1ZVRkRjRUpFTEVWQlFVVklMRWRCUVZWSkxGbEJRVmtzVVVFNVJIcENSeXhSUVVGUlF5eEpRVUZKV2l4RlFVTmFMRXRCUVVzc1IwRkJTV0VzUjBGQlNTeEZRVUZIUVN4RlFVRkpZaXhGUVVGTFl5eExRVUZMUXl4UlFVRlJReXhQUVVGUlNDeEpRVUZMTEVOQlEyeEVMRWRCUVVsSkxFZEJRVlZXTEVWQlFVVXNVMEZEV2xjc1JVRkJZMWdzUlVGQlJTeFRRVU5vUWxrc1JVRkJhVUphTEVWQlFVVXNVMEZEYmtKRkxFVkJRVTlHTEVWQlFVVXNVVUZEVkdFc1JVRkJZMklzUlVGQlJTeFBRVU5vUW1Nc1JVRkJXV1FzUlVGQlJTeFBRVU5rWlN4RlFVRmhaaXhGUVVGRkxFOUJRMlpuUWl4RlFVRmphRUlzUlVGQlJTeFBRVU5vUW1sQ0xFVkJRVmxxUWl4RlFVRkZMRkZCUzJ4Q1FTeEhRVUZGVlN4SFFVRlRVU3hUUVVGVExGbEJSM0JDYkVJc1JVRkJSVmNzUjBGQllVOHNVMEZCVXl4cFFrRkRlRUpzUWl4RlFVRkZhVUlzUjBGQlYwVXNTMEZCU3l4TlFVRlBNVUlzUlVGQlMyTXNTMEZCUzBNc1VVRkJVVVlzUjBGQlIxY3NWVUZCVlVjc1MwRkJUeXhKUVVGTk0wSXNSVUZCUzJNc1MwRkJTME1zVVVGQlVVWXNSMEZCUjFjc1ZVRkJWVWtzVjBGRGNFZHlRaXhGUVVGRlZTeEhRVUZUV1N4UFFVRlBUQ3hIUVVOc1FtcENMRVZCUVVWWkxFZEJRV2RDVlN4UFFVRlBXaXhIUVVWNlFsWXNSVUZCUldFc1IwRkJZVlVzUzBGQlN6bENMRVZCUVV0akxFdEJRVXRETEZGQlFWRkdMRWRCUVVkUExHRkJRM3BEWWl4RlFVRkZZU3hIUVVGaFN5eFRRVUZUTEc5Q1FVTjRRbXhDTEVWQlFVVlhMRWRCUVdGWExFOUJRVTlVTEVkQlEzUkNZaXhGUVVGRldTeEhRVUZuUWxVc1QwRkJUMWdzUjBGRmNrSnNRaXhGUVVGTFl5eExRVUZMUXl4UlFVRlJSaXhIUVVGSGEwSXNUMEZCVDBNc1RVRkJUU3hMUVVOeVEzcENMRVZCUVVWakxFZEJRVmxUTEV0QlFVczVRaXhGUVVGTFl5eExRVUZMUXl4UlFVRlJSaXhIUVVGSGEwSXNUMEZCVDBNc1RVRkJUU3hIUVVGSGRrSXNUVUZEZUVSR0xFVkJRVVZqTEVkQlFWbEpMRk5CUVZNc2IwSkJRM1pDYkVJc1JVRkJSVmNzUjBGQllWY3NUMEZCVDFJc1NVRkhka0prTEVWQlFVVkZMRWRCUVUxeFFpeExRVUZMT1VJc1JVRkJTMk1zUzBGQlMwTXNVVUZCVVVZc1IwRkJSMG9zVFVGRGJFTkdMRVZCUVVWWExFZEJRV0ZYTEU5QlFVOXdRaXhIUVVOMFFrWXNSVUZCUlZVc1IwRkJVMWtzVDBGQlQxZ3NSMEZEYkVKWUxFVkJRVVVzYzBKQlFYTkNjMElzVDBGQlQxb3NSMEZGTTBKcVFpeEZRVUZMWXl4TFFVRkxReXhSUVVGUlJpeEhRVUZIYjBJc1QwRkJUMFFzVFVGQlRTeExRVU55UTNwQ0xFVkJRVVZsTEVkQlFWbFJMRXRCUVVzNVFpeEZRVUZMWXl4TFFVRkxReXhSUVVGUlJpeEhRVUZIYjBJc1QwRkJUMFFzVFVGQlRTeEhRVUZIZGtJc1RVRkRlRVJHTEVWQlFVVmxMRWRCUVZsSExGTkJRVk1zYjBKQlEzWkNiRUlzUlVGQlJWY3NSMEZCWVZjc1QwRkJUMUFzU1VGSGJrSjBRaXhGUVVGTFl5eExRVUZMUXl4UlFVRlJSaXhIUVVGSGNVSXNVVUZCVVVZc1RVRkJUU3hMUVVOMFEzcENMRVZCUVVWblFpeEhRVUZoVHl4TFFVRkxPVUlzUlVGQlMyTXNTMEZCUzBNc1VVRkJVVVlzUjBGQlIzRkNMRkZCUVZGR0xFMUJRVTBzUjBGQlIzWkNMRTFCUXpGRVJpeEZRVUZGWjBJc1IwRkJZVVVzVTBGQlV5eHZRa0ZEZUVKc1FpeEZRVUZGVnl4SFFVRmhWeXhQUVVGUFRpeEpRVXQyUW1oQ0xFVkJRVVZWTEVkQlFWTnJRaXhIUVVGSExGRkJRVk5zUXl4SlFXVjZRaXhSUVVGVGJVTXNTMEZKVWpkQ0xFVkJRVVVzWVVGQllUUkNMRWRCUVVjc1VVRkJVeXhUUVVGVGFrTXNSMEZEYmtOQkxFVkJRVVZETEdkQ1FVVkdMRXRCUVVzc1IwRkJTVlVzUjBGQlNTeEZRVUZIUVN4RlFVRkpMRVZCUVVkQkxFbEJRM1JDVGl4RlFVRkZPRUlzVFVGRFJFTXNTVUZCUzBFc2NVZEJSVXhETEV0QlFVdDRReXhMUVdkQ1ZDeFJRVUZUZVVNc1MwRkRVa29zU1VGd1IwUXNSMEZCU1Vzc1MwRjNSMG9zVDBGR1FVRXNSMEZCVDBRc1MwRkJUMEVzUlVGRlVFTXNTVUZIVWpORExGTkJRVkV3UXlJc0ltWnBiR1VpT2lKaGJHd3ViV2x1TG1weklpd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sc2lkbUZ5SUVobGNtOUJjR2s5Wm5WdVkzUnBiMjRvS1h0bWRXNWpkR2x2YmlCbEtHVXBlMloxYm1OMGFXOXVJSFFvWlNsN1pTNXdjbVYyWlc1MFJHVm1ZWFZzZENncE8zWmhjaUIwUFdVdVkzVnljbVZ1ZEZSaGNtZGxkQzVqYUdsc1pISmxibHN4WFM1amFHbHNaSEpsYmpza0tGd2lMbWhsY204dGFXNW1ieTFrYVhaY0lpa3VkRzluWjJ4bFEyeGhjM01vWENKaFkzUnBkbVZjSWlrc0pDaHlLUzUwYjJkbmJHVkRiR0Z6Y3loY0ltRmpkR2wyWlZ3aUtTd2tLSFJvYVhNcExuUnZaMmRzWlVOc1lYTnpLRndpWVdOMGFYWmxYQ0lwTENRb2RDa3VkRzluWjJ4bFEyeGhjM01vWENKemFHOTNYQ0lwZldOdmJuTnZiR1V1Ykc5bktHVXBPMlp2Y2loMllYSWdZVDB3TzJFOFpTNWtZWFJoTG5KbGMzVnNkSE11YkdWdVozUm9PMkVyS3lsN2RtRnlJSE05SkNoY0lqeGthWFkrWENJcExHazlKQ2hjSWp4a2FYWStYQ0lwTEc0OUpDaGNJanhrYVhZK1hDSXBMSEk5SkNoY0lqeG9NVDVjSWlrc1pEMGtLRndpUEhBK1hDSXBMR3c5SkNoY0lqeHdQbHdpS1N4dlBTUW9YQ0k4Y0Q1Y0lpa3NjRDBrS0Z3aVBIQStYQ0lwTEdNOUpDaGNJanhwYldjK1hDSXBPeVFvY3lrdVlXUmtRMnhoYzNNb1hDSm9aWEp2TFdScGRsd2lLU3drS0drcExtRmtaRU5zWVhOektGd2lhR1Z5YnkxcGJtWnZMV1JwZGx3aUtTd2tLR01wTG1GMGRISW9YQ0p6Y21OY0lpeGxMbVJoZEdFdWNtVnpkV3gwYzF0aFhTNTBhSFZ0WW01aGFXd3VjR0YwYUN0Y0lpNWNJaXRsTG1SaGRHRXVjbVZ6ZFd4MGMxdGhYUzUwYUhWdFltNWhhV3d1WlhoMFpXNXphVzl1S1N3a0tITXBMbUZ3Y0dWdVpDaGpLU3drS0c0cExtRndjR1Z1WkNoektTd2tLR1FwTG1oMGJXd29aUzVrWVhSaExuSmxjM1ZzZEhOYllWMHVaR1Z6WTNKcGNIUnBiMjRwTENRb1pDa3VZV1JrUTJ4aGMzTW9YQ0pvWlhKdkxXUmxjMk55YVhCMGFXOXVYQ0lwTENRb2FTa3VZWEJ3Wlc1a0tHUXBMQ1FvYmlrdVlYQndaVzVrS0drcExHVXVaR0YwWVM1eVpYTjFiSFJ6VzJGZExtVjJaVzUwY3k1cGRHVnRjMXN3WFNZbUtDUW9iQ2t1YUhSdGJDaGxMbVJoZEdFdWNtVnpkV3gwYzF0aFhTNWxkbVZ1ZEhNdWFYUmxiWE5iTUYwdWJtRnRaU2tzSkNoc0tTNWhaR1JEYkdGemN5aGNJbWhsY204dFpHVnpZM0pwY0hScGIyNWNJaWtzSkNocEtTNWhjSEJsYm1Rb2JDa3BMR1V1WkdGMFlTNXlaWE4xYkhSelcyRmRMbk5sY21sbGN5NXBkR1Z0YzFzd1hTWW1LQ1FvYnlrdWFIUnRiQ2hsTG1SaGRHRXVjbVZ6ZFd4MGMxdGhYUzV6WlhKcFpYTXVhWFJsYlhOYk1GMHVibUZ0WlNrc0pDaHZLUzVoWkdSRGJHRnpjeWhjSW1obGNtOHRaR1Z6WTNKcGNIUnBiMjVjSWlrc0pDaHBLUzVoY0hCbGJtUW9ieWtwTEdVdVpHRjBZUzV5WlhOMWJIUnpXMkZkTG5OMGIzSnBaWE11YVhSbGJYTmJNRjBtSmlna0tIQXBMbWgwYld3b1pTNWtZWFJoTG5KbGMzVnNkSE5iWVYwdWMzUnZjbWxsY3k1cGRHVnRjMXN3WFM1dVlXMWxLU3drS0hBcExtRmtaRU5zWVhOektGd2lhR1Z5Ynkxa1pYTmpjbWx3ZEdsdmJsd2lLU3drS0drcExtRndjR1Z1WkNod0tTa3NKQ2h5S1M1b2RHMXNLR1V1WkdGMFlTNXlaWE4xYkhSelcyRmRMbTVoYldVcExDUW9hU2t1WVhCd1pXNWtLSElwTENRb2N5a3VZWEJ3Wlc1a0tHa3BMQ1FvWENJdWNtVnpkV3gwY3kxamIyNTBZV2x1WlhKY0lpa3VZWEJ3Wlc1a0tITXBMQ1FvY3lrdWIyNG9YQ0pqYkdsamExd2lMSFFwZlgxbWRXNWpkR2x2YmlCMEtDbDdKQ2hjSWk1aWRYUjBiMjR0TVZ3aUtTNXZiaWhjSW1Oc2FXTnJYQ0lzWm5WdVkzUnBiMjRvZENsN2RDNXdjbVYyWlc1MFJHVm1ZWFZzZENncE8yWnZjaWgyWVhJZ1lUMHdPMkU4TVR0aEt5c3BKQzVoYW1GNEtIdDFjbXc2WENKb2RIUndjem92TDJkaGRHVjNZWGt1YldGeWRtVnNMbU52YlM5Mk1TOXdkV0pzYVdNdlkyaGhjbUZqZEdWeWN6OWhjR2xyWlhrOU1UUTJNbUUzTlROak56RmxaVFE1TmpWaU16Z3labUUzTVdNelpXWTRaalVtYjJabWMyVjBQVEJjSW4wcExtUnZibVVvWlNsOUtYMW1kVzVqZEdsdmJpQmhLQ2w3ZENncGZYWmhjaUJ6UFh0OU8zSmxkSFZ5YmlCekxtbHVhWFE5WVN4emZTZ3BPMGhsY205QmNHa3VhVzVwZENncE8xeHVMeThqSUhOdmRYSmpaVTFoY0hCcGJtZFZVa3c5WkdGMFlUcGhjSEJzYVdOaGRHbHZiaTlxYzI5dU8yTm9ZWEp6WlhROWRYUm1PRHRpWVhObE5qUXNaWGxLTWxwWVNucGhWemwxU1dwdmVreERTbnBpTTFaNVdUSldla2xxY0dKSmJVWnpZa00xZEdGWE5IVmhiazFwV0ZOM2FXSnRSblJhV0UxcFQyeHphVk5IVm5saU1FWjNZVk5KYzBsdVFuWmpTRlp6V1ZoU2JFbHBkMmxoUjFaNVlubEpjMGx0VmpSalIwWjFXa1ZzZFZwdE9WaGhWelZyWWpOamFVeERTbXhKYVhkcFkwaEtiR1J0Vm5Wa1JWSnNXbTFHTVdKSVVXbE1RMHB2V2xoS2RsTlhOVzFpZVVselNXMU9NV051U214aWJsSlZXVmhLYmxwWVVXbE1RMHBxWVVkc2MxcElTbXhpYVVselNXbFJhVXhEU2pCaU1tUnVZa2RXUkdKSFJucGplVWx6U1cwMWFHSlhWV2xNUTBvd1lVZHNla2xwZDJsWk1qbDFZekk1YzFwVFNYTkpiWGgyV25sSmMwbHRhMmxNUTBwcldWaFNhRWxwZDJsamJWWjZaRmQ0TUdONVNYTkpiWGhzWW0xa01HRkRTWE5KYldoc1kyMDVSV0ZZV1dsTVEwcHZXbGhLZGxOWE5XMWlNRkp3WkdsSmMwbHRhR3hqYlRsRllWaGFXR050Um5kalIxWjVTV2wzYVZwSFZucFpNMHB3WTBoU2NHSXlOR2xNUTBwdldsaEtkbEpZV214aWJsSjZTV2wzYVdGSFZubGlNVTVzWTIxc2JHTjVTWE5KYldoc1kyMDVWR1JIT1hsaFYxWjZTV2wzYVdSSGFERmlWMHAxV1Zkc2MwbHBkMmxaVjFKclVUSjRhR016VFdsTVEwcG9aRWhTZVVscGQybGpSMFl3WVVOSmMwbHRWalJrUjFaMVl6SnNkbUpwU1hOSmJVWjNZMGRXZFZwRFNYTkpiV2d3WWxkM2FVeERTbXhrYlZaMVpFaE5hVXhEU25Ca1IxWjBZM2xKYzBsdVRteGpiV3hzWTNsSmMwbHVUakJpTTBwd1dsaE5hVXhEU25aaWFVbHpTVzVPYkdSSVZuZFVSMng2WkVkV2RWcFlTbnBKYVhkcFdWZHdhR1ZEU1hOSmJsWjVZa05KYzBsdFVuWmliVlZwVEVOS2NHSnRiREJKYVhkcFl6Sm9hR050Vm10SmJEQnpTVzB4YUdOSVFuQmliV1I2U1dwdmFWRlZSa0pSVTNoSVVWVkdTbEZUZUZSUlZVWllURVprUWxOWFVYTlZWVVpDVlRCTmMxSXdSa0pWTUUxelVqQkdNVkpIY0VOTVJrWkNVVlpPUkV4RlpFSlJWMnhEVVhsNFNGRlZUalpSYTBWelVsVkdRbEpWVFhOYU1FcENVVEJaYzFOVlJrSlRWVTF6VWpCR1FsWXdXWE5TVlVaQ1VsVmpjMWt3UmtKWk1FMXpWVEJHUWxWNWVFaFJWVVpJVVZONFVsRlZUWHBSTUUxelVqQkdRbEpUZUhKUmEwWkNZVEJLUkV4R2JFSlJWbXR6VmxWR1JHRkZUa1ZNUlZaQ1VWVldSa3hGWkVKUlZURkZURVpzUWxGV2EzTldWVVpFWTBWS1JVeEZWa0pSVlZaSVRFVXhRbEZWTVVkTVJteENVVlpyYzFaVlJrUmpSVXBGVEVWV1FsRlZWa2xNUldSQ1VWWldTa3hHYkVKUlZtdHpWVlZGTVZKSWNFTlNlWGhTVVZWR1VsRjVlRXBSVlVaS1YybDRSbEZWVG1GTVJYUkNVVlZ6YzFJd1JrSlRWMFZ6VWpCR1FsTlRlRVpSVlVaSVVWTjRSbEZWUmtwWmFYaEdVVlZHVEZsNWVFeFJWVVpNVVhsNFVsRlZSbEpSZVhoUVVWVkdVbE5EZUVwUlZVWk1URVZPUWxFeWVFVk1SV1JDVVZWc1NreEZaRUpSVmxaWFRFVldRbEZWVlhOVk1FWkVWMnhqYzFKVlJrSlpNV2R6VWxWR1FsSlRlRlJSVlU1dlVXeHJjMUpWUmtKaFZVcGhURVZXUWxGVlZYTlZNRVpFWW10S1JreEZWa0pSVlRsSFRFVldRbEZWVlhOVlZVWkVWa2RGYzFKVlJrSlpNa2x6VWxWR1FsSlRlRkJSVlU1dlVXMU5jMUpWUmtKWFYxRnpVbFZHUWxKVGVGQlJWVTVyV2xONFJsRlZSbWhhYVhoR1VWVkdSa3hGT1VKUk1scHVVV2w0UmxGVlJtcGhSVWx6VWxWR1FsSlRlRkJSVlU1dlVXMXNRMHhGVmtKUlZteHhVV2w0UmxGVlJrWk1Sa1pDVXpKNFExRlRlRWhSVlVaR1ZsTjRTRkZWUmxSVlUzaFVVVlZHVkV4R2JFSlNNMEpEWWtWSmMxSlZSa0pTVm1OelVqQkdRbGxWT0hOVk1FWkNWWGw0Y0ZGclJrUmxSVXB6VVdsNFJsRlZSa1poVlVselVqQkdRbFl3VlhOVE1FWkNVM2w0VGxGVlJsQk5WVWx6VWxWR1FsTXlUWE5UTUVaQ1V6Qk5jMVZWUmtKVlZWbHpVakJHUWxJeFkzTldWVVpDVmxWamMxTXdSa0pVZVhoS1VWVkdUazB3U1hOU1ZVWkNVekpOYzFNd1JrSlRNRTF6VlZWR1FsVlZXWE5TTUVaQ1VqRmpjMVpWUmtKV1ZXdHpWakJHUkdORlpIbFJhWGhHVVZWR1JsWlRlRWhSVlVaVVYxTjRVRkZWUmxCVVEzaElVVlZPYzFGdGNFTk1SVlpDVVZWV1dreEZaRUpSVjJSRFZsTjRVRkZWUmxCWGFYaElVVlZXTmxGc1dYTlNWVVpDVWxkRmMxSXdSa0paVmxWelV6QkdRbE42YkVOTVJWWkNVVlYwYWt4RmRFSlJWWFJFVEVaR1FsRldSa2RNUldSQ1VWVmtVRXhIUmtKUk0zQkVXV2w0UmxGVlJrWlpVM2hJVVZWR2FGTjVlRlJSVlVaVVRFYzVRMUZWVGpSUmJYaERURVZXUWxGVlZsaE1SV1JDVVZkR1dFeEZPVUpSVlRsVlRFVmtRbEV6VWtOWmFYaEdVVlZHUmxkVGVFaFJWVVp1VVd4VmMxUXdSa0pVTVdkelVqQkdSbU5yU25OUmFYaEdVVlZHVEZsNWVFeFJWVVpNVVhsNFVsRlZSbEpTYVhoSVVWVkdTR0V3U1hOVU1FWkNWREJOYzFSVlJrSlVVM2hNVVZWT2VWRXpjRU5NUlZaQ1VWVldha3hGWkVKUlZteFVURVYwUWxGVmN6VlJhWGhHVVZWR1RGbDVlRXhSVlVaTVVYbDRVbEZWUmxKU2FYaElVVlZHU0dFd1NYTlVNRVpDVkRCTmMxUlZSa0pVVTNoSVVWVkdTR1JyU1hOVVZVWkVaVVZTUjB4RlZrSlJWVlpxVEVWa1FsRldiRXBNUms1Q1VWWk5jMkl3U2tKUk0xcERZa1ZKYzFKVlJrSlNWbU56VWpCR1FsbFdZM05VTUVaQ1ZERkpjMU5WUmtoaWEwcDVVV2w0UmxGVlJreFplWGhNVVZWR1RGRjVlRkpSVlVaU1VtbDRTRkZWUmtoaU1FbHpWREJHUWxRd1VYTlVWVVpDVkZONFRGRlZUbmxSTTNCRFRFVldRbEZWVm14TVJXUkNVVlpzVWt4RmRFSlJWWE0xVVdsNFJsRlZSa3haZVhoTVVWVkdURkY1ZUZKUlZVWlNVbWw0U0ZGVlJraGlNRWx6VkRCR1FsUXdVWE5VVlVaQ1ZGTjRTRkZWUmtoa2EwbHpWRlZHUkdWRlVrZE1SVlpDVVZWV2JFeEZaRUpSVm14SVRFWk9RbEZXVFhOaU1FcENVVE5hUTJKRlNYTlNWVVpDVWxaamMxSXdSa0paVm1OelZEQkdRbFF4UVhOVFZVWklZbXRLTUZGcGVFWlJWVVpNV1hsNFRGRlZSa3hSZVhoU1VWVkdVbEpwZUVoUlZVWklZMVZKYzFWVlJrSlZWVmx6VkZWR1FsUlRlRXhSVlU0d1VUTndRMHhGVmtKUlZWWnVVV2w0U0ZGVlJtaFVlWGhNVVZWR1RFOVZTWE5TVlVaQ1V6Sk5jMU13UmtKVE1FMXpWVlZHUWxWVldYTlNNRVpDVWpOR1EweEdSa0pSVmtaSFRFVXhRbEZWTUhOU01FWkNVak5hUTB4Rk1VSlJla1pGVW1sNFJsRlZSa1phTUVselVqQkdRbGxWVlhOVk1FWkNWWGw0ZGxGclJrUmxSVXB6VVdsNFJsRlZSa1pXZVhoSVVWVkdhRlo1ZUZCUlZVWlFWR2w0U2xGVlpESlJiV2hEVEVWV1FsRlZWa1pNUldSQ1VWVXhlRkZwZUV4UlZVWk1UMVZKYzFKVlJrSlRNazF6VXpCR1FsTXdUWE5WVlVaQ1ZWVlpjMUl3UmtKU01HOXpWRlZHUkdKRlRrZE1SVlpDVVZWV1dFeEZaRUpSVjBaWVRFVTVRbEZWT1hkUmFYaElVVlZPTUZGcldYTlNWVVpDVWxaVmMxSXdSa0pWTVd0elZEQkdRbFF4WjNOU01FWkVZa1ZLV1V4RlZrSlJWVlZ6WXpCS1FsRllUa05qTUVselZEQkdRbFF4YjNOU01FWkdUREJLVjB4RlZrSlJWVlpXVEVWa1FsRldUbkpSYVhoSVVWVkdTRXhHUmtKUlZrNXpVWGw0U2xGWFZqWlJhWGhTVVZWR1ZHSlZUWE5UTUVaS1ZXcGtRMHhGVmtKUlZWVnpXVlZHUWxsVVVrTk1SV1JDVVZWamMxVlZSa0pWZVhoVVVWVkdWR0ZyVFhOU01FWkVZbXRPUWt4RlZrSlJWVlpFVEVka1ExRlZWa2RNUlhSQ1VWVnpjMUl3UmtKVFZsVnpVakJHUWxOVGVFWlJWVVpJVVZONFJsRlZSa3BNUlZaQ1VWVmtRa3hGYkVKUk0xSkRWR2w0UmxGVlJrWlBSVWx6VkZWR1JGSkZUWE5UVlVaQ1V6QkZjMk5WWkVKU1ZYaEVURVYwUWxGVmREUlJlWGhNVVZka1ExWkRlRkpSVlVaVVpWVk5jMU13UmtSVmEyOXpVMVZHYzFJd1VYTlNNRVpDVTFWemMxTXdSbnBTTUc5elZEQkdSMUZWUlhOU01FWkNWREJSYzFNd1JrSlVNRVZ6VWxWR1JsVkZUWE5UVlVaSVZXcE9SRXhHVGtKUlZrVjNVWGxKYzBsdFduQmlSMVZwVDJsS2FHSkhkM1ZpVjJ4MVRHMXdla2xwZDJsak1qa3hZMjFPYkdNd1RuWmlibEpzWW01UmFVOXNjMmxrYlVaNVNVVm9iR050T1VKalIyczVXbTVXZFZrelVuQmlNalJ2UzFoMGJXUlhOV3BrUjJ4MlltbENiRXRIVlhCbE1sb3hZbTFPTUdGWE9YVkpTRkZ2V2xOc04xcFROWGRqYlZZeVdsYzFNRkpIVm0xWldGWnpaRU5uY0U4eldtaGphVUl3VUZkVmRWa3pWbmxqYlZaMVpFWlNhR050Wkd4a1F6VnFZVWRzYzFwSVNteGliSE40V0ZNMWFtRkhiSE5hU0Vwc1ltcHphMHRHZDJsTWJXaHNZMjA0ZEdGWE5XMWllVEZyWVZoYVkwbHBhM1ZrUnpsdVdqSjRiRkV5ZUdoak0wMXZXRU5LYUZrelVuQmtiVlpqU1dscmMwcERhREJoUjJ4NlMxTTFNR0l5Wkc1aVIxWkVZa2RHZW1ONWFHTkpiVVpxWkVkc01scFdkMmxMVTNkclMwaFJjRXh1VW5aYU1tUnpXbFZPYzFsWVRucExSbmRwWXpKb2RtUXhkMmxMV0RGcVlqSTFlbUl5ZUd4TWJYaDJXbmxvYkV0VWRHMWlNMGx2WkcxR2VVbEhSVGxOUkhSb1VFZFZkVnBIUmpCWlV6VjVXbGhPTVdKSVVucE1iWGhzWW0xa01HRkVkR2hMZVhOd1pUTmFhR05wUW5wUVUxRnZXRU5KT0ZwSGJESlFiSGRwUzFONGRWQlRVVzlZUTBrNFdrZHNNbEJzZDJsTFUzaHdVRk5SYjFoRFNUaGFSMnd5VUd4M2FVdFRlSGxRVTFGdldFTkpPR0ZFUlN0WVEwbHdURWRST1VwRGFHTkphbmgzVUd4M2FVdFRlSE5RVTFGdldFTkpPR05FTldOSmFXdHpZbm93YTB0R2QybFFTRUVyV0VOSmNFeElRVGxLUTJoalNXcDRkMUJzZDJsTFUzaHFVRk5SYjFoRFNUaGhWekZ1VUd4M2FVdFVjMnRMU0Uxd1RHMUdhMXBGVG5OWldFNTZTMFozYVdGSFZubGllVEZyWVZoYVkwbHBhM05LUTJoMVMxTTFhRnBIVWtSaVIwWjZZM2xvWTBsdGFHeGpiVGgwWVZjMWJXSjVNV3RoV0ZwalNXbHJjMHBEYUdwTFV6Vm9aRWhTZVV0R2QybGpNMHBxV0VOSmMxcFROV3RaV0ZKb1RHNUtiR016Vm5Oa1NFNWlXVll3ZFdSSGFERmlWMHAxV1Zkc2MweHVRbWhrUjJkeVdFTkpkVmhEU1hKYVV6VnJXVmhTYUV4dVNteGpNMVp6WkVoT1lsbFdNSFZrUjJneFlsZEtkVmxYYkhOTWJWWTBaRWRXZFdNeWJIWmlhV3R6U2tOb2VrdFROV2hqU0VKc1ltMVJiMWw1YTNOS1EyaHdTMU0xYUdOSVFteGliVkZ2WTNscmMwcERhR3RMVXpWdlpFY3hjMHRIVlhWYVIwWXdXVk0xZVZwWVRqRmlTRko2VnpKR1pFeHRVbXhqTWs1NVlWaENNR0ZYT1hWTFUzZHJTMGRSY0V4dFJtdGFSVTV6V1ZoT2VrdEdkMmxoUjFaNVlua3hhMXBZVG1wamJXeDNaRWRzZG1Kc2QybExVM2RyUzBjMGNFeHRSbmRqUjFaMVdrTm9hMHRUZDJ0TFIydHdURzFHZDJOSFZuVmFRMmgxUzFONGJFeHRVbWhrUjBWMVkyMVdlbVJYZURCak1YUm9XRk0xYkdSdFZuVmtTRTExWVZoU2JHSllUbUpOUmpCdFNtbG5hMHRIZDNCTWJXZ3dZbGQzYjFwVE5XdFpXRkpvVEc1S2JHTXpWbk5rU0U1aVdWWXdkVnBZV214aWJsSjZURzFzTUZwWE1YcFhla0prVEcwMWFHSlhWWEJNUTFGdllrTnJkVmxYVW10Uk1uaG9Zek5OYjFoRFNtOWFXRXAyVEZkU2JHTXlUbmxoV0VJd1lWYzVkVmhEU1hCTVExRnZZbWxyZFZsWVFuZGFWelZyUzBkM2NFdFRlR3hNYlZKb1pFZEZkV050Vm5wa1YzZ3dZekYwYUZoVE5YcGFXRXB3V2xoTmRXRllVbXhpV0U1aVRVWXdiVXBwWjJ0TFJ6aHdURzFvTUdKWGQyOWFVelZyV1ZoU2FFeHVTbXhqTTFaelpFaE9ZbGxXTUhWak1sWjVZVmRXZWt4dGJEQmFWekY2VjNwQ1pFeHROV2hpVjFWd1RFTlJiMko1YTNWWlYxSnJVVEo0YUdNelRXOVlRMHB2V2xoS2RreFhVbXhqTWs1NVlWaENNR0ZYT1hWWVEwbHdURU5SYjJKcGEzVlpXRUozV2xjMWEwdEhPSEJMVTNoc1RHMVNhR1JIUlhWamJWWjZaRmQ0TUdNeGRHaFlVelY2WkVjNWVXRlhWbnBNYld3d1dsY3hlbGQ2UW1SS2FWbHZTa05vZDB0VE5XOWtSekZ6UzBkVmRWcEhSakJaVXpWNVdsaE9NV0pJVW5wWE1rWmtURzVPTUdJelNuQmFXRTExWVZoU2JHSllUbUpOUmpCMVltMUdkRnBUYTNOS1EyaDNTMU0xYUZwSFVrUmlSMFo2WTNsb1kwbHRhR3hqYlRoMFdrZFdlbGt6U25CalNGSndZakkxWTBscGEzTktRMmgxUzFNMWFHTklRbXhpYlZGdlkwTnJjRXhEVVc5amFXdDFZVWhTZEdKRGFHeE1iVkpvWkVkRmRXTnRWbnBrVjNnd1l6RjBhRmhUTlhWWlZ6RnNTMU4zYTB0SE5IQk1iVVozWTBkV2RWcERhSGxMVTNkclMwaE5jRXh0Um5kalIxWjFXa05vZFV0VGQydExSbmRwVEc1S2JHTXpWbk5rU0UxMFdUSTVkV1JIUm5CaWJWWjVXRU5KY0V4dFJuZGpSMVoxV2tOb2VrdFRkMnRMU0Uxd1RHMDVkVXRHZDJsWk1uaHdXVEowWTBscGVEQkxXREU1V201V2RWa3pVbkJpTWpSblpFTm5jR1Y1VVc5WVEwbDFXVzVXTUdSSE9YVk1WRVpqU1dscmRXSXlORzlZUTBwcVlrZHNhbUV4ZDJsTVIxb3hZbTFPTUdGWE9YVkxTRkZ3WlROUmRXTklTbXhrYlZaMVpFVlNiRnB0UmpGaVNGRnZTMVIwYldJelNXOWtiVVo1U1VkRk9VMUVkR2hRUkVVM1dWTnpja3RUVVhWWlYzQm9aVU5vTjJSWVNuTlBiSGRwWVVoU01HTklUVFpNZVRsdVdWaFNiR1F5UmpWTWJURm9ZMjVhYkdKRE5XcGlNakIyWkdwRmRtTklWbWxpUjJ4cVRESk9iMWxZU21oWk0xSnNZMjVOTDFsWVFuQmhNbFkxVUZSRk1FNXFTbWhPZWxWNldYcGplRnBYVlRCUFZGa3hXV3BOTkUxdFdtaE9la1pxVFRKV2JVOUhXVEZLYlRsdFdtNU9iR1JFTUhkWVEwbzVTMU0xYTJJeU5XeExSMVZ3WmxOc09WcHVWblZaTTFKd1lqSTBaMWxUWjNCbE0xRnZTMWd4TWxsWVNXZGplakUzWmxSMGVWcFlVakZqYlRSblkzazFjR0p0YkRCUVYwVnpZek13YjB0VWRFbGFXRXAyVVZoQ2NFeHRiSFZoV0ZGdlMxUjBZMkpwT0haSmVVSjZZak5XZVZreVZrNVpXRUozWVZjMWJsWldTazFRVjFKb1pFZEZObGxZUW5kaVIyeHFXVmhTY0dJeU5IWmhiazUyWW1wMGFtRkhSbmxqTWxZd1VGaFdNRnBxWnpkWmJVWjZXbFJaTUV4SFZqVlRha3BoVjBWd05sbFdZelZrVld4eFlqTndUVkV3Y0RaWmFrNVhaVlpyZVZadWNFcGhia0pwVTFjeFIyTXlTa1JPV0ZKb1ZucFNNVmxYTlU1aFZtaFVaREpzYVdKVldqQlhiR2hPWVZVNWMyTXliRlJTTVZvMVdXcENSMlF5UmxSVFdFNUtZbXRLTWxrd2FGZGpNV3haVlcxNFNtRllaSEJaVldSWFpWZEtOVk5ZVGtwaVZsa3dXVEJrUjJSV2NFWmlTRlpoWWxSc1dWbFdZekZoTWtsNldUSnNUVkV3Y0hOVFYyd3pZVmRPU1ZOdGVHdGlWbG94V2tWV1UySkdjSFJTYWtacFUwWkdjRlJGVGt0aU1YQlpVMjVhVkZaNlZuUlpibXhLWXpCc2RGUnFSbXBpYTNCeldXMDFVMVpXYkZsVGJUVmhWMFpHY0ZSRlRrdGhiVVpJWWtoT1lWTkZjSE5aYld4S1l6QnNjRlZYYkUxUk1HOTNXV3BLYTJKdFNraFdhMUpwVWpCYU5sa3piRXBqTUd4MVZXMDVhRmRGTVhCVVJVNUxZVzFKZVU1WWNHbE5ibWh6VTFkc00yRlhTa2hQVnpWS1lWaGtjRmxXVGtwak1HeDBWVzFvYTFJd1ZuQlVSVTVMWlZad1dWUnFSbWxUUmtvMlUxZHNNMkZYU2toV2JsWmhUVEZLZGxOWGJETmhWMFpJVm01c2FVMUdTbmRhUjJ4S1l6QnNkR0ZIZUdwaVZHeExXVzB4WVdSc1NraGlSRXBLWVZoa2NGbFZaRmRsVjBsM1ZXNUNhMkpIVWpWWFZtaERaREZ3V1ZOWGJFMVJNSEF4VjFaamVHSkZiSEJrTW14aFVqRmFObGRVVGt0alIwNUpWVzVDYVUxcVVuQlVSVTVMWWpGd1dWTnVXbE5YUm5CeldXMDFVMlZyYkhCa01teG9VakZhTlZscVJrOWlSMDUwWWtkNGFtVlZiSHBUVnpGdllrZE9kRTlXVW10U2VtdzFXVlprVjJWcmJIQmtNbXhyVWpKbmVGbHNaRXRrVm14WVlraE9TbUZZWkhCWFZtUlRZVEZGZVdWSGFHcE5NREZ3VkVWT1MyRkhVa2xWYm14S1lWaGtjRmt3WkVkTlIwWkVVMWhPU21KV1dUQmFSV1JYWkZkTmVXSklXbWxoVld4NlUxY3hSMlF5VGtoV2JsWmhVVEJzZWxOWE1XOU5SMHBZWkRKc1RWRXdjSE5hUnpGWFpGZFNTVlJYYkUxUk1IQjNXa1ZrVjJSSFRqVlRXRTVLWW1zMWMxa3lNWE5pUjA0MVUxaE9TbUpyTkhkWmFrNUxZMFp3V1ZSWGJFMVJNSEF5V1cxc1NtTXdiSFZVYlhoclUwWmFNMVpGWkhObGJWSklWbTVXWVZkRmNEWlRWMnd6WVZac1dHTkhhR3hSTUd4NlUxYzFWMlZYU2tSVFdFNUtZbFpLTWxsdE1WWmhWWGhFVTI1Q2FXSlhkM2RUVjJ3ellWZE5lV0ZIYUdwaVZscHlVMWQzZDJNd2JIUk5WMmhxVTBWS2QxbHRNV3RsYTJ4eFlqSnNVbFpWV2tOVlZrNDBVMFpHVmxKcmNGSlZNMmhWVlZaV1IxZEZlRWRhUlVwVVZqRkdlbFpXVmtkUmJGVjNWRmhPVTAxRldrTldWRUpPWXpGSmQxSnFSbE5TTTBKRVZFVmFSMUZzUmxkVWExSk5VbGRTUTFWV1pITlJNVVkxWlVWb1VsWlZOREpWVjNSR1l6RktWbEpyU2xOV1ZURjZWMnBDUzFGc1JYZFhXRTVVVmxWYVExVXhWazVqTVVsM1VtdEtWMDFHYkhwVmJGWkhVV3hLVmxrelRscE5SVnBEVjFSQ1RtTXhWWGRTYTBwV1pWaG9TVlZXVmtkVFJrWlVaVVpLVWxaVk1UWlZWRUpPWXpGSmQxSnJTbE5WTTJoNVZWZDBSMUZ0UlhkVGExSk5VbTE0UTFWV1duSmpNVnBXVW10U2FGSlZOVVpVUlZaWFVXeEdWbFpyV2sxU1ZFWkRWVlpWZUZKVmVFZGlSVXBTVm0xMGVsWnNWa2RTUjA1R1UydFdUVkpXV2tOVlZsWlhVMVY0UmxwRlNsSldiRnBMVkVWYWMxRnNSbGRoTTA1V1ZsVldObFZyYUhkUk1VcFVaVVpLVWxaVldsTlZXR3cwVTJ4R1ZsSnJjRmhSTTJoSFZWWldUMWxWZUVaa1JVcFNWbGhPZWxWcVFrZFJiRTVYWVROT1UwMUZXa05WTVU0MFVteEdWbEpyYUZKVk0yaEhWVlpXUjFOc1pIQmxSVnBTVmxWYVRWZFdUalJVUmtaV1VtdDRVbVZZYUZOVlZsWkhWV3hHTldWR1FsSldWVnBUVlRCT05GTnNSbFpTYTNoTlVsVTFRMVZVU2pSU1ZYaEdXa1ZLVWxaWGVFdFVSVlpyVVd4R1YxWnNWazFTVmxwRFZWWldWbU14VlhkU2ExSllZa1pXZWxWc1ZrZFJiR3Q0VjFoT1UxWlZXa05WYkU0MFZrWkdWbFJ0T1ZKaVIwNTZWV3hXUjFGdFJsWlRiR3hOVWxaYVExVldWbFpqTVZWM1VtdFNhV0V3Y0dGVVJWWlhVV3hHVms5WFJrMVNWbHBEVlZaV1ZtTXhWbFpTYTFKWFVqQldlbFZzVmtkUmJHdDVVMWhPVTFaVldrTlZiRTQwVlVaR1ZsUnRPVkppVlRGNlZXeFdSMUZzWkZoVldFNVRWbFZhUTFWc1RqUlZSa1pXVkcxMFlWVXphRWRWVmxaSFlVWndjR1ZGV2xKV1ZWcEhWRVZWTlZGc1JYbFhiVFZTWVZob1IxVldWa2RoYlVaR1UxaE9VMVpWV2tOVmJFNDBWVVpHVmxSdE9WSmlWM2hFVkVWV1YxRnNSbGRpU0VaU1lWaG9SMVZXVmtkU2EzaEhVbXRLVkUxdWFFUlZWazQwVTBaR1ZsSnJXbFpsV0doSlZWWldSMVpHVmpWbFJsSlNWbFZhVlZSRlduTlJiRWw2VVd0T2FWSlZiSHBWYkZaSFVXeEtWMVpZVGxOTlJWcERWMVphUm1NeFZYZFNhMHBXWlZob2QxVlhkRWRTUjFaR1UyNU9VbUZZYUVkVlZsWkhVbTFHVmxOWVRsTk5SVnBEVm1wQ1ZtTXhUWGRTYTBwVVpWaG9UMVZXVmtkVlJURldVMWhPVTFaVldrTlZla3BHWXpGTmQxSnJTbFJOUlRGNlZsWldSMUZzVmxaWFdFNVRUVVZhUTFWcVJuSmpNVnBXVW10S1YxWlhUbnBWZWtKSFVXeFNOV1ZGY0ZKV1ZWcFBWRlJDU21NeFNsWlNhMHBVVFd0V2VsVjZRa2RSYkUxM1ZGaE9WbFpWV2tOV1ZsWmFZekZKZDFKclNsTk5WM1I2Vm14V1IxRnNXbFpoTTA1WFRVVmFSVmt3Vm10bFZrWndaVVZhVWxaVldrZFdXR3cwVTBaR1ZsSnNVbHBWTTJoUlZWWldSMVZHVWtSbFJXaFNWbFUxZWxWWE1YZFJNSGhHVm10S1VsWldXbGxVUlZaclVXeEdXRnBGVGxkbFdHaFJWVlpXUjFWR2JIQmxSV2hTVmxaWk1sVlhlRkpqTVVwV1VtdEtVMVl3Vm5wVmFrSkhVV3hzVjFaWVRsUk5SVnBEVlROd2MxRXdlRVpXYTBwU1ZsaFNiMVJGVmpCUmJFWldaRVZTVFZKcldrTlZWbHBIVWpCNFJscEZTbEpXVjFKVFZFVmtSMUZzUlhwalJWSmFZVmhvUjFWV1ZrZFNiR3hVWlVWb1VsWlZXbTlWTTJ3MFZrWkdWbEpzVWsxU2VteEVWVlpXVDA1R1JuUmxSVTVOVWxaYVExVldWbGRXYTNoR1drVktVbFl3V21GVVJWVTFVV3hHVms5V1ZrMVNWMUpEVlZST1UxRXhiSEJsUlZwU1ZsVmFSMVp1YkRSVFJrWldVbTAxVW1KSFRucFdSRUpIVVd4UmVHSXpUbE5OUlZwSFdUSjBTMk5XUm5CbFJWcFNWbFZhVFZkV1RqUlVSa1pXVW10NFVtVllhRk5WVmxaSFZXeEtjR1ZGYUZKV1ZWcEpXV3hXU21NeFVYZFNhMHBWVFVVeGVsWkdWa2RSYkZKVVpVVjRVbFpWTlRWVlZFNTNVVEI0UmxaclNsSldWbHB4VkVWV2ExRnNSbGRpUmxKTlVsaFNRMVZXVm5wT1ZrWndaVVZhVWxaVldrMVhWazQwVkVaR1ZsSnJlRkpsV0doVFZWWldSMVZzU25CbFJXaFNWbFZhU1Zsc1ZrcGpNVkYzVW10S1ZVMUZNWHBXUmxaSFVXeFNWR1ZGYUZKV1ZWcEpWMWRzTkZSc1JsWlVhbEpUVW0wNWVsVnNWa2RSYkVwWVZGaE9VMDFGV2tOV01WWnlZekZWZDFKclNsWmxXR2d5VlZkMFIxSkhVbkpUYms1U1lWaG9SMVZXVmtkU2JGcFVaVVZvVWxaVldtOVdNVTQwVlVaR1ZsSnNRbFpoV0doTFZWWldhMlJXUm5WVGEwNU5VbFphUTFWV1ZqQmhSWGhHWkVWS1VsWllVa1ZVUlZwSFVXeEdWMUpyWkUxU1YxSkRWVlpXYTJWR1JuQmxSa0pTVmxWYVVWVnJUalJVYkVaV1VtczFUVkpZVWtOVlZFNUxVa2RXY2xOWVRsTldWVnBEVld4a1ZtTXhTWGRTYTBwWVZtdFdlbFY2UWtkUmJFNDJZa1ZPVFZKV1drTlZWbFl3WVVWNFJtUkZTbEpXV0ZKRlZFVmFSMUZzUmxkU2EyUk5VbGRTUTFWV1ZtdGxSa1p3WlVaQ1VsWlZXbEZWYTA0MFZHeEdWbEpyTlUxU1YxSkRWVlpXYTJGVmVFWk5WVXBTVFRKb1JsWXliRFJTYkVaV1VtdGFZVlV6YUVsVlZsWkhWMnhLTldWR1VsSldWVnBWVkVWak5WRXhSbFpVYWtwU1lsaG9SRlJGVmxkUmJFWldWbXhhVFZKWFVrTlZWbVJIVjJ0NFJrOVZTbEpXVkd4U1ZFVldjMUZzU1hsT1ZVNXJVbFZzZWxWc1ZrZFJiRTE1VWxoT1ZFMUZXa05WZWtKT1l6RldWbEpyU2xaV1ZteDZWV3BDUjFGc1NYcFVhMDVOVW10YVExVldXa2RTTUhoR1RWVktVbFpVUW5wVmVrSkhVa2RTUmxScVdsSmhXR2hIVlZaV1IxSnNiM2RUV0U1VFRVVmFRMWRXVlRSak1VMTNVbXRLVkdWdGVFUlVSVlpYVVd4R1ZtUkhhRTFTV0ZKRFZWWldNRkpGZUVkU2EwcFNWbXRhU0ZSRlZtdFJiRVpXV2tod1VtRllhRk5WVmxaSFZXeEtjR1ZGTlZKV1ZWcFBWRVZXYTFGc1JsWmFSMnhOVWxSR1ExVlljRWRTVm1Sd1pVVmFVbFpWV2tkWGFrSktZekZKZDFKclNscFdWbFo2VmxSQ1IxRnNWalZsU0ZwU1lUQmFSVnBWVmt0ak1VWndaVVZhVWxaVldrZFdiRTQwVTBaR1ZsSnRhRmhWTTJoUlZWWldSMVZHVW5CbFJYQlNWbGRSZVZWWE1XOVJNSGhHVm10S1VsWldXbUZVUlZaclVXeEdWazFXYUUxU1dGSkRWVlpXZWs1V1JuQmxSVnBTVmxWYVRWZFdUalJVUmtaV1VtdDRVbVZZYUZOVlZsWkhWV3hLY0dWRmFGSldWVnBKVmtoc05GUnNSbFpVYms1U1RWYzVlbFZzVmtkUmJFcFhWbGhPVTAxRldrTlhWbHB5WXpGUmQxSnJTbFZOVm14NlZXcENSMUpIVWtaVGJVWk5VbFphUTFWV1ZsZFdSWGhHV2tWS1VsWnJOVzlVUlZVMVVXeEdWazlYUmsxU1YxSkRWVlJLTkZFeFduQmxSVnBTVmxWYVIxUkZhRTlSTVVaV1VtNXdVbUpyTlVSVVJWVTFVV3hHVms5WGJFMVNWMUpEVld4Tk5WRXhXa1JsUlZwU1ZsVmFSMVpZYkRSVFJrWldVbXhTYVZaVmJIcFZha0pIVVd4S05XVkdTbEpXVlZwVldXdFdUbU14VGxaU2JYQnNZVEJzZWxaV1ZrZFJiRlY1VFZWU1RWSllVa05WTVZwS1RURkdjR1ZGV2xKV1ZWcEhWRVZrUjFGc1JsaFNWRUpTWVZob1NWVldWa2RUUlhoSFVtdEtVbFpyTVhwV1ZFSkhVV3hWZVdORlVrMVNWMUpEVlZSSk1WSkdSbFJsUlZwU1ZsVmFSMVZZYkRSaWJFWnlVbXRhVTJGWWFFMVZWbFpIVkVWNFJscEZTbEpXVjNoVlZFVldhMUZzUmxaaE0wNVRWbFZhUTFWcVFrWmpNVXBXVW10S1ZGVXphRWRWVmxaSFUwWkdWR1ZGY0ZKV1ZUUjNWVmQwTTJNeFNsWlNhMHBUVmtkb1JGUkZWWGhSYkVWM1ZXdFNUVkpYZUVOVlZsWXdVV3Q0U1ZKcmFGSldWbHBPVlZoc05GUkdSbFpTYTNoc1VsVXhlbFY2UWtkaWJFWnpWVmhPVmxaVldrTldWRTV6VWtWNFJtUkZTbEpOVlhCTVZFVldjMUZ0Um5KYVJWWk5VbGRTUTFWV1ZuTlVSWGhHWkVWS2FsWlhVa3hVUlZVMVVXeEtjbEpyU2sxU1YxSkRWVlpWTlZKVmVFWmtSVXBTVmxSc1ExUkZWbGRSYkVwWFVXdFNUVkpYZUVOVmFrWktaV3hHTldWR1VsSldWVnBUVkZWV1RtRlZlRVJUYlRGb1ZqTm9jMU5YY0haaFZteFlaVWhPVFdKVVJuZFpiV3N4WTFkT05WTllUa3BpYXpVeVdrWm9TMkZzY0ZsVWExSnBUV3BWZDFkc1l6Rk5SV3h4WTBkS1NtSnNjRzlaTW14RFUxWndXVk51V2xKWFJVcDNWVVprWVUxWFNuUlVha0pvVm5wc01WTXdUbk5PTVhCMVZtNVdXazB4U25kWmFra3dXakZ3VkdGSGVFeFhTRkowV2taak1XRnRVa2hpU0ZwcFlWVkpkMU13WkZaalIxVjVWbGhXYWxORmNITmFSekZYWkZkU1JsVnRlR0ZpVlZsNFdXdG9VbUl3ZEZWa1JFcGFWMFZzYmxwRlVYaGlSWGgwVkdwR2FtSnJjSE5aYlRWVFZsWnNXVk50TldGWFJrWXhWMVJLYjJOSFNraFZibXhoVm5wV2FWUldXWGRrVm10NVlVaENhVkl4U2pWWGJHTXdUakJ3UkdGSFRrcGhWRloyVjJ4b1MyUnJlRmhpU0ZaaFlsUm9NRmRyWkhOTmJHaEVVMWhDVFdKc1NqSlhha3ByWXpGd1ZsUnVUbHBYUlRVMlV6QmFNMkZXYkZoVWFrSm9WMFp3YzFkRlRrcGpSWGhFVlZjNWExSXlhSGRaTTJ4eVpGZFNTRTlYTldGTmJtaHpWVlJLTkdGSFRYcFVWemxaVVRCd2IxZFVUbE5qUjFKMFZtMU9TbUZYZEhwVGEwNXZUVVYwVkU1VVFtbE5iVkoxV1d0a1YxSkhTa2hTYm5CcVpWZG9hbE5YTlU5aU1rbDZXa2RPU21GWGR6VlhWRWsxWkZkTmVVOVlUbUZWZWxaNldXcEthbUl4Y0ZSaGVtUmhZbFJzTlZNd2FHRmhSMDV3VVcxb1VWWkZSVE5YVmxJMFlrVjRkRlZ0YUd0U01GWXhXVEl4VjJWdFVsaGxSRUpxWlZSV2VsZHNZekZpYlZKSVducGtXbFV6VG5sVE1XZ3dUV3hzV1ZOWFpHcGxha0p5VXpCYU0yRldRa2hWYmtKcllXcFdhbE5YYkhKak1rNXhUVWQwVEZKdVpIQlZSV1JUWTBkU2NVNVhUa3BoVjNSNldWWlJkMkV3ZEVka01teFJVakprTkZWSGVETmhWWFJVWlVoV1VWVXhSblpYUlU1S1QwZE9SVTVYVGtwaFYzUjZWMnRSZDJFd2RFZGtNbXhSVTBWRmNsZEZUa3BqUlhoSVpIcHNTMUV5YUdwVFYzQTBaREZDYzJReWJFeFZNMmd5VlVaT1VtSXhhRVJUVkdocVVrUldhbE5YYkhKak1rNUZUVWQwVEZKdVpIQlZSV1J6WkVad05rNVhUa3BoVjNNelUydE9iMlZyZEZST1YyaGhVakZLUlZsclpFZGxiVTQxWVVkT1NtSlhhSE5aTWpBMFpFWndTR0pFU2xsUk1HeDNWRVZPVW1JeVRuQmhNMVphVmpGS2NsVlVTalJoUjAxNlZGYzVXVkV3Y0haWGJHaExaR3Q0V0dKSVZtRmlWR2d3VjJ0a2MwMXNhRVJUV0VKTlVURkdkbGt3VG5Ka1ZteFpWV3BDYW1GWGFHcFRWelZQWlZacmVHUXliRTFTTVZZeFYydGtSMDFHYkZST1dHeGhWMFUwZUZscmFGTmxiR041VW0xU1RXSnNTblphUm1ONFlWZEtkRkp1UW1sUmVsWXpWMVpvVTJJd2MzaGtNbXhOWWtoa2NGTjZTbFprVm5CSVVtcENXbFY2VmpWWGJHaFBUVmRLU1ZWdWNGaE5hMXByVkVjMVUySXlVbGhOVjJ4cFlsVmFkMWxyVFRGaVIxWkpWVzE0YVdKck5YZFpha2t3WTBWNFJGVlhPV3BsVjNReFYxWm9RMlF4Y0ZoT1YzUk1VMFZHZDFSRlRsSmlNa3B3WVROV2FGTkdTakJaYTA1dllrVjRkRlZ0YUd0U01GWXhXVEl4VjJWdFVsaGxSRUpxVFZoU2IxZEdUVEZoTVhCWlZHMXdhbUpYZUROYVJXUnpaRzFLY0dFelRrdFJNbWd4VXpGTk1XRkdjRWhWYTFKcFVqQmFObGt6Ykc5Wk1HeDBZVWQ0YW1KVWFEQlhhMlJYWld4cmVsTnVRbXBUUmtwM1dXcEpNVmt3YkhCaE0wNUxVVEpvTlZNeFRURmhSMDVKVVcxNGFXSldSblpaYld4eVl6RndWRTVYZEZwWFJrcHZWRWMxUzJKSFRYcFdiazVyVTBVMWFWZFdXWGRrVm5CWlYyMTRhV0pzU2paVVJ6RnpUVVp3V0UxWWNGaGxhMHByVTIxc1dtSXdjRVJoUjNSTVZYcFdkbHBGWTNoak1IUklWbGhXWVZJd1dYZFhWazB4WlZad1dWUnFSbWxUUmtvMlZucEtSMXBGZUhSV2FrcGhWbnBWZDFremF6RmpSMUpJVm01U2FrMVlUak5YUmsweFpGWnNXRTFYZUV4Vk0yUnlVekJrVW1ORmVIUlNiWFJoVWxVMWVsZFdhRTlsYTNSSFpESnNhRkl4V2pWWmJtdDRZVEZ3V1ZSdGNHcGlWM2d6V2tWa2MyUnRTbk5rTW14TVZUTmtjbE13YUVwalJYaDBVbTVrYWxJeFdqRlhhMDV2WVRCMFZHRXpUbUZWZWxaeVYxWm9VMkZGZUhWVGJYaHFUVEZhZWxwRmFFOVpiR3hYVFVoV2FrMXNXalZaVm1SWFpXdDRkR0pFUW1GV2VrWTJWak53UTFwRmNIQlhWemxMVVRKb2VsTXhUVEZpTWxKSVRWaE9URkl4VmpGWGEyUkhUVVpzVkU1WWJHRlhSVFI0V1d0b1UyVnNZM2xTYlZKTlltczFjMWt5TVhOaVIwNDFUbGhDYTFJeFdqQlpla1o2WkRGb1ZFNVlWbHBXZWtaelV6Rk9NMkV3ZEVoa00wSk5ZbFZhY2xkclZrOWpNV3haVkc1d1RGSnVaSEJaVldSWFpWZEtOVTFYZEdGWFJUVnhXVEl4YzJReVVraGlTRnBwWWtoa2NGTXhUak5oTUhSSlUxaENUV0pWV2pOWk1HUlhaRlp3UkdGSVRreFZNblI2VjJ4Tk1XRXhiRmxWYldoTlltdHdjMWw2VGxkak1sSkpWRzFLV2xacVFqRlplazVUWkcxT2RHSkhlR3BsVkZaM1drVmtWMlJIVFhoak0yUlpWVEZzZEZNd1RsSmlNa28xWVROV2FGTkdTakJaYTA1dllrVjRkRlZ0YUd0U01GWXhXVEl4VjJWdFVsaGxSRUpxVFZoU2IxZEdUVEZsYlZKSVQxaHNhRll4V2paVVJ6RnpUVVp3V0UxWWNGaGxhMHByVkVjd01XRkhTbGhXV0VKTlVURkdkbGx1YkhKa1ZteFlWVzEwVWsxdWFHOVplazVPWWpGb1JGTnRPV0ZYUlhBeVZFWmtVMkpIVFhsVWJteG9WMFZKZDFsV1l6VmtWbWhFVTFoQ1RWRXhSblpaTW14eVpGWnNXVkZ1WkdGV2VsWnlVekJqTkdORmRGUmtNblJNVWpKMGQxUkhNVzlOUjBwWVpESTVZVlY2Vm5KWFZtaFRZVVY0ZFZOdGVHcE5NVnA2V2tWb1QxbHNiRmROU0ZacFlsVmFNRmRzVG5Kak1IQkVZVWhzVEZWNlZtOVpNR2hEWWtkS2RGVlhPV2hWTW5SNlUydE9iMlZyZEZST1YyaHFVMFZLYzFsdE1WSmlNazV3WVROT1MxRXlhR3BUVjJzeFpWWndXVlJxUm1sVFJrbzJWRVprVDJSdFNuVlZiV2hvVm5wV2Mxa3llRE5oVlhSVVRsZG9hbE5GU25OWmJURlNZakpPTldFelRrdFJNbWcyVXpGTk1XUnRTbkJoUjA1S1lsVTFlbGxXWkU5amJHaEVVMWhPYTFFeWR6VmFiR1JoVFZkS2RGUnFRbWhXZW13eFUxVm9VbUl3ZEZsak1uUk1VbTVrY0ZSSE1VdE5WMUpKVlc1YWFXRlVRalJYUlU1S1kwVjRkRTlZVmt4U2JtUndWMVJLTkdOR2EzbGtSMDVLWVZob2RGcEdZekZoYlZKSVlraGFhV0ZYWjNkVE1XZ3dUVVY0ZFZGdWJHRlhSbkJ6V1cwMVUxSldjRmhYYldoclZqTm5kMU13VG5KT01YQjBUMWhzVEZOR2NHOVpNbXhEWVVaQ1ZWRlVaRnBXU0dRMFZIcEtSbU5yZERWaE1uUk5ZbFZhZUZkV2FHNWlNbFY2Vm01c2FWSklRbXBUVnpGdlRVZFNTVkZ1Y0ZCaFZHZ3lWMnBLUjAxR2NGbGFSMmhzVlhwV01GZFdhRXROYkhCWVpETldXazFxYkRCVVJFNWFaVVYzZWxGcVJscGlXR2gzVjFock5XRnRSa2hTYm14YVZqQTBkMWRzYUV0bGJFRjVVbTVrYUZZelVuTmFWbEYzWlVVMVJWZFliRnBXUjAxNFZGUktUazB3TVZoV2JYaFBVa2R6ZVZSc1pFcGxhemxGVTIweFdsWkhUalJYV0hCUFlrWndjV0ZITVU5Vk1YQXlWMjB4WVdWc2NGbFZWR3hPVW01a2NGcHNUbkprVm5CSVQxaFdZVlV5YUhOVE1XZDNZMGRhV0ZkcVJtbGlWVFIzV1Zaak5XUlZiRWhTVnpsTVYwaFJkMU13VG5OUFYxSjBVbTVzU2xORk1EVmFWRTEzVGpKT2RGWnFRbXRYUlhBeFUxVm9UbVJYUmxoT1dFSnJVa1JHYjFSRmFFOVBWWFJFWVhwa1ZGSXhXalZaYWtKSFpESkdWRTVZUW1saVYzZDNVekJPY2s0eGFFaE9TRnBOWlZVeGJsbDZTVFZOVjA1MFZHMTRWVll3V2pOWk1HUnpaRlp2ZUZac1RsVlNSRVp5VjFab1UyRkZPWFJTYm1ScVVqTm9kMWRVU2tkTlIwWllUMWhXVFUxdVFqWlpha2t3VGpGcmVXRkhhR3BpYXpWeldrVlJlRTFYVWtoWFZGSlFUV3R3YjFsNlNsWk5helZFWlVkNGJGWlhPVFZXTW5odlV6SldkRkpzYUZCWFJscExXVmN3TlU1c1VrWlVhM1JzWWxWc05sWnROWE5YYXpGelYycGFWRll6UWpOWFYzUnpaRVpLZFZSdGJGSmxiRmwzVjFaYWFrMUhVbGhTYmxaVlZqSjRXbFpVVG10alJteDBUVlZrYTFKdVFscFdSbVJ6VlVkS1NWUnVRbFpOUjFKWVdsWmtTbVF4U25WYVIyaFdUVWQ0TmxVeFl6RlJNbEowVkd0c1YySnJOV0ZXTUZwTFl6Rk9XR0pFVG1oV01GcEpWbTAxYzJGWFZsWmlTSEJVVm5wR1dGUnJaRTlUUmtwMVZtMUdVMVl6WjNoV01qQjNUbFprU0ZKc2FFOVdNMUp3VkZSS1QyTkdVa1pVYTNScFVsZDRkMXBFU25OaGJFNUdZMGhPWVZKNlJsaGFSbVJUVW14V2RHVkhSbWxXVm13MFYxZDBiMVZ0UmxabFJWSlVZbFJzYUZZd1ZuZE5iRlY0V1hwR2FWWXdiekZWTVdoUFUyMUtWazVJYUZwTmFsWk1XV3RrUzJSV1ZuTldiSEJZVWxoQ01WWXllRzlWYlVaV1pVVlNWR0pZUW05VmFrbzBaV3hrY21GRmRHbFNNSEIzVlRGb1QxTnRSbGRTYmtKVlVsVTFURlJWWkVwbFZuQklUbGRzVTAxV2NFWlhWM1JyVWpKV2RGUnFWbFJYUlRWTFdXMTRTMlJzYkZkaFJUVm9WbGhvUlZVeU1YZGhWVEZ4Vm1wYVdtRnJiekJaYTFaelkwZFJlV0pIYkZObGJYZ3hWVEZrYzAweVJsaFNiRkpVVjBVMVMxbHNXa3RpTVhCR1drVmFhRlpZYUVWVk1qVnpXVlprUms1SWFGcGhNbWhVV2xkMGMyTkhVWGxpUjJ4VFRWWnZlRll5Y0U5Vk1rbDNZa2hDYTAxdGVHOVZha1poVGxac2NWRnNUbXBTTVVwM1ZURm9UMU50U2xoaFNFNWFUV3BCTVZVeU1VdGtSbVIxVjJ4T1UwMXVaRFZWTVdSelRUSkdXRk51VWxOaWJFcG9WbFJDYzJWc1RsaE5WazVwVWpBeE5WWkhOWE5oUm1SR1UxaGtXbFp0VFRGYVJsWnpZMGRSZVdKSGFGTk5WbTh4VjFkd1ExWXdNWE5qUm1oUFZrVktjVnBXVm5ObGJFNVlUVmM1YVZJd05UQlVNVnBUV1Zaa1JtTklaRmhpUjJoUFdWWldORkpHVG5SUFYwWllVbGhCZVZac1VrOVZNbEowVkc1U2FWSXphSEZhVmxaelpXeE9XRTVXVG1sTmJFcFpWRlprYzJGWFNsWlhibVJhWVRBMVMxbDZRbk5rUmtwMFpFZEdVMVpVVmpaV01WcHZWREpXY21KSVFtdE5iWGhoVmpCYVNtUXhhM2xpUlhCcVRVZDRNVlZYTVc5aE1VbDVXa2hDVlZKVk5VeFphMlJYVTFaV2RHVkhiR2xoZWxZelYxZHdTazFIUmxabFJWSlVZbGRvY1ZVd1ZrdGpNV3gwVFZaS2FGWllhRVZWTWpBMVlURktObEp1Y0ZSV01uZDZXVlphZDFkV1pIUmxSMnhwWWtWdk1sVXhaSE5OTWtaWVVteHNWbUpZYUhCV01GVjRZMFpTUmxScmRHeGlTRUphVlRJMVExbFdaRVpOV0VKVlVsVTFURnBYTVZOVFJUbFpZa2RvVjAxV2J6SlZNV1J6VFRKR1dGTlliRTlTTW5oT1ZWUkNkMDVzWkhOaFJrNU9WakExUjFwVmFFTmhhekI0VTI1T1dtSlVSbGhhVm1SUFRsWk9XVlJyY0dsV1ZuQTBWakZhYjJKdFJsWmxSVkpVWVd0YWNWbHNhR3RqUmxKR1ZHdDBhRTFyYkRWVWJHUTBVMjFHV1ZwSVFscFdiVTE0V1RCa1UxSkdUbGxVYTNCcFlYcFdNbFl4V205VE1rcEhZMFZTVkdKV1NrNVZWRUozVFVaa1YyRkZUbXROYTFwWlZHeGpNV0Z0VmxaaGVrcFVWak5TU0ZWWGVFZFdiRXBaVkd4T1RsSldjRVJXVkVaWFVtMU5lRlpZWkZOaE1IQllXbFpvYjFkV1ZsZFdiazVvVFVob1NGVnRkRXRWYkZweVRsVldWVkpXV25KVlYzaEhWakZTY2xWck1WTldNVXBFVjFkd1ExVXlUbGRTYmtKc1VtdHdVMVpzVm1GV1ZsWlpZa1JTVkZKcldsZFZiVFZEVlcxRmQwMVljRlpoYTBwSVZXdGtWMk5zVG5KVGF6RlRWbXh3UkZaV1dsZFdNVXBHWlVWb1lWSlZOVk5XYkZVeFUwWlNSbFp1VGxKaVJWcFhXV3RXVTFSV1NsaFZhMDVXVm14d2NsVnFRalJTYkZweVUyeEtWMVpzY0VwV1JWWnJWREZHYzFKc2FGVmhNVXBPVlcxek1WRXhWbGRYYXpWcVRWVnNNMVZ0ZEV0Vk1ERkdWbTV3VjFac1draFZhMVYzWkRGU2NsVnJNVk5XTVVwRVZsWmFWMVp0VFhsU1dHUlVZVEJ3VTFacVRsTlNSbFpaWWtSU1dHSkZXbGRWYlhoM1ZGWktjMWRyVGxaV1JYQjJWV3RhUzFKSFZrWlhiRXBYVmxad1NGWlhlRTlPUmxKelVteGFVMkY2VmxSVlZFNXZXVlpXVjFaclpGaGhNMmhJVm0xMFMxVnJNSGRUYTFKV1lUQTBNRlZ0ZUVkV2JFcHlWMnhTVWsweWFFcFdWbHBYVWpGYWMxUnNVbXhTYmtKVFZteFdZVmxXVWtaWGEyUlNZbFphUjFaWGNHRlZiVVY0Vm01d1YxWnNXa2hWVjNoWFZteFNXVlJzVWxkV1ZuQkVWbFJHWVdKdFRYaFRiRnBUWVRGS1dWbFdhRzlVVmxaWFZtdGtWVkpZYUVkWGExWkxWV3hhV0dWSFJsVlNWbHB5VlZkNFIxWnRSWHBVYkU1WFZsWndSRlpYY0VOU2JVMTRVMnhhVTJFd2NGVldiVEExWld4V2MxWnJaRkppUlRFMVZXeG9UMVpGTVVaWGEwNVdaV3RLVDFsNlJsZFdiRXB5VTJ4YVYxWlVSalpXYTFKRFVqRkdjMVpzV21GTk1EVlZWbXhXWVZFeFZYcGlSRkpUVW10YVYxWkhOVTlWTVVWNllVVnNWbFpzV2toVk1uaFBWa2RXUm1GR1NsZFdWbkJZVm0xMFQwNUdTbk5TYkZwVFlURndUbFZ0Y3pGUk1WWlZVbTVrVjJFemFFZFdiWFJMVld4WmQwNVdhRlZTVmxwWVZWZDRSMVpzV2xsVWJGcE9VbFp3UmxkV1ZsZFRNV1JHWlVWYVYyRXdjRk5XYkZKelYyeFNSbFpzWkZKaVJWcFhWbXhvVDFac1dsWlhhMVpYWVRGd2VWbDZSa3RXYkVweVUyeHdUbFo2YkRaV1YzaFhVakZHYzFOc1VteFNhMHBUVm14Vk1XUnNWbGhOVlZwcVRWVndWMVZ0ZEV0WFJsbDNZa2h3Vm1KR1draFZWM2hMVmtkV1IxRnNTbGRXVkZaNVZqRm9jMDVHU25OU2JGcFRZbGRvYUZWVVRtOVNNVlpYVm10a1UyRXphRWRVTVZaTFZXc3hjMk5JVGxWU1ZscFlWVmQ0UjFkR1VuUk5WVEZUVm14d1JGWldXbGRXYlUxNFZWaGtVMkV4U205VmJGWjNaRlpXV0dKRVVsTmlSVnBYVlcxNGQyRkdTbFppU0hCV1lrWmFTRlZYZUV0V1IxWkhVMnhLVjFkR1NqWldWbVF3VW0xTmVGTllaRk5oTUhCVVZtMXplR1ZzVm5GUmEyUlNZa1pXTkZWc2FFOVdhekZHVjJ0T1YxZEhkekJXTW5oSFZteHdTVnBHU21sWFJVcEZWa1ZXVjFZeFJuTlNiRnBYWWtad1RsVnNaRk5STVZaWFdrVmtWbEpZYUVoV1IzUkxWV3hhY2sxWWNGcFdiRnBNVlZkNFJtVnRSa1pVYldob1RVZDRObFpYZUZkU01VWnpVMnhvWVZKVk5VNVZiR1JUVVRGV1YxZHRkRk5oTTJoSFdrVldTMVZzV2xsVWJuQlhVbXhhU0ZWWGVGSmxiVTVHVkdzeFUxWnNjRVJXVmxwWFRVZEdSbVZGV210U1ZYQlRWbXhvVTFKV1VrWlhhMlJTWWtWYVdGVnRkR3RVVmtwWVZXdE9WbFpzV25KV01GWTBVakZhY2xOc1NsZGlSbkJLVmtWV1YwMUdSbk5TYkZwUVUwVTFWVlpzVm1GUk1WcEhWV3RrVWsxSWFFZFdiWFJMVld4YVdWVnRPVlZTVmxsM1ZWZDRSMVp0VWtaVmF6RlRZVEZ3UkZaV1dtRlNNVWwzWlVWYVlWSlZjRk5XYkdSVFYxWlNSbGRzWkZKaVJWcFlWbTEwZDFSV1NuUlZhMDVXVmtVMVJGVXdaRTlTYkU1WlZHeE9WMVpXY0VSV1YzaGhWRzFOZUZOWVpGTmhNSEJYVkZaa01HVnNXa1ZSYTJSU1lrWkdNMXBFVGs5Vk1ERkdWMnRrV21FeFdreFpha1pIWTBkV1JsZHNTbGRXVm5CSVZtcEdUMDVHVGtkU2JGcFRZbGRvV0ZaVVRtOVVWbFpYVm10a1ZWSlVVak5WTVdoUFZURmFWbGRyVGxabGEzQkhXWHBHVG1ReFNuSlRiRkpPVWxSR05sWnNXbGRTTVVaelZteGFXRmRGTlZSVVZWWmhVVEZXY1ZGVVVtcE5WM2hYVlcxMFUySkhSWGRPVjJoVlVsWmFXRlZYZUVkV2JGcHpZMFV4VTFZeFNrUldWbHByVWpGU1JtVkZaRlZoTUhCVFZtMXplR1ZzYkhGUmEzUlNZa1ZXTmxsVlZrOWhSMFYzWWtod1ZtSkdXa2hWVjNoTFZqRmFXVlJzVGs1U1ZuQkVWakZhWVdGdFRYaFZXR1JUWVRCd1ZsUldXa2RsYkZaeFVXdGtVMkpWY0VkVk1qVlhWVzFHV1dGRlpGWldiRnBJVmtWYWMxWkhWa1psUmtwWFZsWndUbFpXYUhOT1JsWnpVbXhhVTJKRmNGUlpWbWh2VTFaV1YxWnJaRlJTTUZZelZURm9UMVpWTVVaWGEwNVhVa1ZLVDFsNlJsTldiRXB5VTJ4V1ZrMHlhRTVXVmxwWFZESldWMUpZY0doU1ZUVk9WV3hhWVZFeFZsZFdiR1JvVWxob1IxZHJWa3RWYkZwMFpVWldWVkpXV1hkVlYzaEhWbTFPTmxSc1NtaFhSMmhJVmxaYVYxSXhVa2RpUmxKc1VsaG9VMVpzVm1GVVZsWlpZa1JTVm1KRldsZFZiWGhMVlRKR1dXRkZiRlpXYkZwSVZUQmtSbVF4VGxsVWJGWk9VbFp3UkZaclVrTlViVTE0Vld4YVUyRXdjRlpXVkU1dlUxWldWMVpyWkZSU2JYaDNXbFZWTVZWc1dsWk9SRUpXWVRGd2RWbDZSa3RXYkVweVUyeE9WMDFHV2paV1YzQkRVakZHYzFwR1dtaE5NRFZYVkZWV1lWRXhXbGxpUkZKcllrVmFlVlZ0ZEZOaE1rVjNZMGhvVmxZeWR6QlZiWGhIVm14S2NsZHNaRlpOTW1oS1ZsWmFWMUl5UmtkWGFsWnNVbXRLVTFac1ZtRlZWbHBZWWtSU1ZHSkZXbGRYYTJoWFZXMUtjbE5yVWxWU1ZscFlWVmQ0UjFadFVraGhSVEZUVjBaS1JGWldXbGROUmtwR1pVVmtVMkV3Y0ZOV2JYUmhVMFpTUmxadGRGSmlSVnBYVjJ0b1lWVnRSbGxoUmtaV1ZteGFTRlpWV2t0U1IxWkdUbFpLVjFaV2NGQldSVlpYVFVaR2MxSlljRlJoTVVwelZXeFdjMlZzVm5OV2EyUlNZa1Z3V1ZaR2FFOVZNREZHVjJ0T1YwMVdjRWRaZWtaT1pERktjbE5zVW14aVZrcEZWa1ZXVjFZeFJuTlNiRnByVWpKb1RsVnNhRk5STVZaWFZtcENVMUpZYUVoVmJYUkxWV3hhY2xkcmFGVlNWbHB5VlZkNFIxWnNjRWxYYkVwb1YwZG9VbFpXV2xkU01WWkhVMnRTYkZKVVZsTldiRlpoVkRGU1JsWnRkRkppUlZwWFYydGtjMVJXU2xWU2EwNVdWa1UxZGxWc1dtdFNSMVpHVjJ4S1YxWldjRWhXTVdoelRrWk9SMUpzV2xOaVNFSlVXbFpvYjFaV1ZsZFdhMlJYVWxob1NWUXhWazlWYkZwV1RraHNWbFo2UmpOVlZFSTBVbXhhY2xOc1NsZFdiSEJZVmtWV1YyRXhSbk5TYkdoVFlrZG9UbFZzVW5OUk1WWlhWbFJXVmxaWWFFZFphMVpMVlRBeGNWWnJVbHBOYmxKTFdYcEdTMVpzU25KVGJGSk9ZVEZhTmxaWWNFTlNNVVp6VkZoa1ZWZEZOVmRXYkZaaFVURmFWMVpzY0dwTlZXd3pWVzEwUzFVd01IZFhhMUpWVWxad1NGVlhlRWRXTVVweVdrVXhVMVpGV2tSV1ZscFdaREpOZUZSWVpGTmhNVXB5Vld4Vk1FMUdWbGhpUkZKVFlrVmFWMVZ0ZEdGWlZsVjZZVVZzVmxac1draFpWVnBUVGxkV1JtVkdTbGRXVm5CT1ZrZHdRMU50VFhoVGJGcFRZVEJ3VlZSWGRGZGxiRlkyVVd0a1VtSkZNVE5XUm1oUFZteGFWbGRyVGxkV2JGcGhXWHBHU21ReFNuSlRiRTVPVFVad1JWWkZWbUZTTVVaelVteGtVMkV5VWs1VmJGSkhVVEZXVjFaWVpHcE5WV3d6VlcxMFMxVXdNWEppU0hCWFVteGFTRlZyVlhoV2JGWnpZa1V4VTFac2NFUldWbHBYVmpKS1JtVkZXbUZTVlhCVFZtcENZVkl4VWtaWGF6bFNZa1ZhV0ZaR2FFOWhWVEZHWTBWT1ZsWkZOWFpWVkVwSFkyeE9XVlJzVGxkV1ZuQkVWbGQ0WVZadFRYaFRXR1JUWVRCd1lWWnRNVTlsYkZwRlVXdGtVbUpHUmpOVWEyaFBWa1phVmxkcmJHRlNNMUpNV1d4V05GSnNXbkpUYkVwWFZteHdXbFpGVmxkaE1VWnpVbXhhVGxadGFFNVZiR2hUVVRGV1YxWnVjRTVOVlZwM1dsVldZVlZzV2xaWGF6RllWbXMwTUZaRldrZFdiRXB5WlVaS2JGZEhhRlJXVmxwWFVqRldjMU51UW14U1YyaFRWbXhXWVZOV1drZFVhbEpWWWtWYVYxWkhOVTlWYXpGWVdraHdWbUpHV2toVlYzaExWakZhV1ZSc1RrNVNWbkJFVmpGYVlXRnRUWGhWV0dSVFlUQndWbFJXV25ObGJGWnhVV3RrVTFJeFNrZFZNbmh6VkZaS1YxZHJUbFpXYkZwWVZtdFdORkpzY0VaVGJFcFhZWHBXYUZaRlZsWk9Wa1p6VW14YVVGWnRlRTVWYkdSVFVURldWVk5xVWxKTlZuQjNXbFZXWVZWc1dsWlhhMlJWVWxkb1VGVlVSa2RXYkVwMVkwWkthV0V4Y0VWV1JWWldUbFpHYzFKc1dsQldNRnBPVld4a1UxRXhWbk5VVkZaU1RWWndSVnBWVm1GVmJGcFdWMnRrVjFkSGR6QlZNRnBIVm14S2MxVnRhRTVTVjNnMlZsZHdRMUl4Um5OVGFsWnNVbXR3VTFac1ZtRldWbXhZWkVVMWFrMVZOVmRWYlRGM1lrZEZkMkpJY0ZkV2JGcElWVmQ0Vm1WWFVrWlZhekZUVjBaS1JGWlVSbUZUYXpGWFVtNUNiRkpXY0ZOV2JGWmhVakZTUmxwRlpGSmlSVnBaVld4b2MxVnRSbGxoUld4V1ZteGFTRlV3VmpSU01VcHlVMnhLVjJGNlJqWldiRkpEVWpGR2MxWlliR2hTVmtwT1ZXeGtVMUV4VmxWVFZFWlRVbXRhVlZwVlZtRlZiRnBXVjJ0a1ZsZEhkekJaYlhoSFkyeEtjbGRzVG1oWFIyaE9WbFphVjFJeFVrWmxSVnBoVWxWd1UxWnNaRFJXVmxKR1ZtMTBVbUpGV2xkWlZFNVBWVEZhVmxkclRsWmhhMHBIV1hwR1MxWnNTbkpUYkZKV1RUSm9TRlpXV2xkU01VNUhVbXhTYkZKWVFsTldiRlV3WkRGV1dHUkVUbXBOVlhCWFZXMTBTMVV4V2tkalJWSlZVbFpXTkZWWGVFWmtNVlp5VldzeFUxWXphRVJXVmxwWFRVWkdjbVZGYkZOaE1taFRWbXhhWVZSc1ZsbGlSRkpWVW10YVYxVnRkRFJoTWtWM1RWaHdWbVZyU2toWmJYaEhZekZXV1ZSc1dsZFdWbkJFVm14U1QyRXhTa1psUlZwclVsVndVMVJXVm5kVVJsSkdWbTVPVW1GNmJGZFdNblJYVkZaS1dGVnJUbFpXYkZwNlZrVldORkp0VWtaVGJXaE9VakZLVFZaRlZsWk9Wa1p6VTI1S1UyRXdjRTVWYkdSVFVURldWMVpVVmxOV1dHaEhXa1ZXUzFWc1dsVmlSVTVWVWxaYVdGVlhlRXRXTVVaeVZXc3hVMVl6YUVSV1YzQkhVMjFXUjFKcVZteFNiRXBUVm14V1lWVXhjRmRXYXpWb1ZsaG9SVlV5TUhoaFJsbDZZVWhPVkZZelFqSlpWbHB6VjBkV1NWUnJNV2xXUlZvelYxY3hjazFYVGxoVWFsWlVWMFUxUzFsdGN6Rk5iSEJIWVVWMGFHSklRbHBXUjNSVFlWVXhjVlpZWkZoaVIwMTRWRlZXYzJOWFRraFRhM0JwWWtoQ2RsZFVTbk5STVU1WFkwWnNWR0pzY0ZOV01GWkxaREZXUjFwSFJrNVdNSEF3Vmtkd1EyRkdXalppUkVaVVRVVTFlbFJxUm5ka1ZscDFWbXh3VGsxVmNETlhWM0JLVFVadmVHTkdVbWhTTTJoTlZqQm9VMlJHY0VkWmVrWm9ZbFpLU1ZscmFHRmhWMFpXVTFoa1ZFMUhVbGRaTUdSV1pWWmFXVlp0Y0ZSU1dFSjZWMnRqZUZZeVVsaFZhMXBXWWxob2FGbHNWbHBsUm14eVlVWkthVTFJVWxaYVJWSkxWMnhrUm1KSE5XRlNWa1kwV1d0V05HUkdVbkZTYlhCcFlUTkNlbGRYTURGVk1WcFhZa1pzVkdKVVZtaFdNRnBIVFZaa1ZWTnRPV3BTTUhCSlZsYzFjMWxXV2paV2JXeFZWbXhzTTFwR1duSmxWMFpKVVcxc1UwMVZiekZXTW5ocVRVVTBkMk5GVW1oU01EVkxXVlpTVjJSc1pITmhSWFJyWVROb1dWbHJhRmRaVjBwVllVUkNXR0V5VW5wVVYzaHZVa1pPV1ZGck1XbFdiRmw0VmpGU1QxWXlWbGhVYmxKWFlteGFjbFZ0ZUV0aU1XdDVUVmQwYVZJeFNrVlViR1IzWVVaSmVXVkljRmhoTW1oTVdXdGtTMk15VFhwaFJteFdaV3hhZUZkV1ZtdGpNazE0WTBWc1ZHSllhSEJaVm1oclkyeE5kMWRxVG1oV1dHZ3dXVlZrTkdGdFNsVmhSRUphVm0xTmVGbHNaRXRPVlRGWVpFZG9XRkp1UW5GVk1XUnpZMjFTV0ZWcmFGQldlbFpvVkZjMWIyTXhWbFZUYWxKb1VqQXhObFpHWXpWWFZrVjNZMGM1V0ZaRk5WUlpNR1JUWkVaYWRGUnJjR2hXTTFJMlZUSjBUMkl3TVVoU2EyaHBVMGhDVFZaWWNGWmtNV3h4VTIxMGFXSlZjRWxXYlhSVFlWWkpkMWRxV2xwTk1uaDJWMVJDYzJSR1NuUmpSM1JUVFc1a05WWXllR0ZOTWtaV1pFWlNhMDF1VWsxVk1GcEhaREZTU0U1V1RtdGlSemsxVjJ0b1QxbFdXbFpPV0hCWVZtMW9VRnBYZERCU01sRjVZa2R3VG1KWFozbFhhMUpIVFRKR1ZtUkdiRTVXTTBKd1ZGZHdWMDVzYkhGVGFsSnBVbGhvTUZwVmFHRlpWMVpZWVVoT1ZFMVdTWGRaYkdSS1pXeE9XRTlYZEdsV1ZtOHhWVEZXYTFKck9WWk5WVlpyVWpKb1VsVnFSbGROVm1SeVdrVmtUbEp0ZUZWVWJHaHpXVlprUms1SWFGcGhNbWhVV2xkME5HUkhWa2hsUjJ4cFZqRkdNMWRXVmxOTlIwWkdaRVJXYWswd1NuTlVWRVozWWpGcmVXSkZUbXhpUlVwVlZsWmpOVmRXUlhkaGVsSllZVEpTZWxSWGVFTmpNbEY1WWtWNFZrMHlaekZXVlZwUFZXMUplR0ZGVWxSV1IyaG9WV3BLTTJWV1ZraGxSRTVvVmxoU1ZWcFZhRU5WVmxWNFVtNWFXRkpWTlV0VU1HUkhVbFpLVkdSR2JGSk5SM2d6VmtWV2FrMUZPVlpqUlZKb1VqQTFTMWxYTlc5Tk1WWklaVVJPYUZaWVVsVmFWV1F3VlZaVmVGSnVXbGhTVlRWTFZEQmtUMUpWTlZoVWEzQm9Wak5TTmxkWGRGSmtNa1YzWkVWa2EwMXRlRkpWTUZaR1kyeGtSbFJyY0dwU1dHaEpWREJTYzFNeFJYbGhSM0JVVmpOQk1GcEVSa05qTWxGNVlrVjRWazB5WjNwV1ZWcFBWVzFKZUdGRlVsUldSMmh2Vm01d1IyUldWa2hsUkU1b1ZsaFNWbGw2U2pCVVJrNUdUVmhrVlZKNlJraFpWRVozVW14U2RWUnNjRmhTVkZVeVZYcENZVTB5UmxoU2EyaFhZbTE0Y0ZwV1VrZGpiR3hYWVVkR1drMUhlSGRaVkU1UFV6RkZlV0ZFVmxSTlZUQjRXVlZhZDFOR1ZuSlZiV3hUVFVadk1sZFVUbk5pTVd0M1lraFNhRkl6YUhGWmJGSnZUVVpzVjFsNlJtbFdNRzh4VkZaa01HRkdaRWRqUjNCVVZqSjRlVmw2UW5kU1IwWkpXa1Y0Vm1Wc1duWlhhMVp2VlRKV1ZtUkZaR3ROYlhoeFZGUkNkMk5XWkVaVWEzQnFUVmhDVlZSc1pEQlhiR1JIVTIwNVZWSjZWa3haYTJST1pXeGFkVlJ0ZEZSU1ZGWndWakZhV21ReVVsaFZhMmhvVWtWYWNGWnFRbmROVm1SWFdraE9hazFJYURGVlZ6RnZZVEZKZVZwSWJGaFNWVFZMV2taYWIxSkdUbGxUYlVaV1pXeGFlVll4V205Vk1rWkdaVWhXVkdKWWFIRlVWRVpoWld4d1JtRkZPVnBpUjNoWVZGVm9WMkV4U1hsYU0yaGFZa2RTVEZwR1duTlhSMHBKVkdzeGFWWnNhM2RYYTFaclZqSlNXRlJZYkdsVFJuQndXVlprTUdWc1RuSlViVGxzWVROU1ZWUnNaRzloYkU1R1UyNU9XbUpVUmxOWmFrcFBVa2RGZWxScmRGSk5iV2Q0VlhwR1RrMVhTWGxWYTJoT1YwVTFUVlZxUmxkTlZtUnlXa1ZrVGxKdGVGVlViR2h6V1Zaa1JrNUlhRnBoTW1oVVdsZDRhbVZXU25SVmF6RnBWbXR3ZWxkWWNFdFVNbFpZVW14c1VtRnJTbTlXYm5CelRWWk5lRlJxVG1oTlNGSkpWR3RvUTFSWFNsWlhia3BZWVRGYVVGbDZSbk5YVmxKMVkwVjRVMkp0VW5kWFZsWnJWakpXV0ZOcVZrNVdNMUpvVmpCVk1XTldhM2xOV0U1clRXeEtTVmxyYUdGaFYwcEpXa2hDVkUxVk5IcFpWRUl3VTFaT1dWRnJNV2xXVm05NlYxUkNhMVl5VWxkalJWSm9VMFphVFZaVVRtOWpNVkpJVFZaT2FGSXhTa2xWYkdoWFlXMUtWMWRxV21GU2JWRXdWRlZrVG1WSFVraGhSbXhXWld4YWVsZHJZM2hXTWxKWVZXdHNWVmRHV205V01GcExZekZzYzJGRk9WcGhla1pJVkZWamVGTXlSbGhhU0VwVVRVZFNVMWt3VmpSa1IwWkZVVzFzVjAweVVqSldNbmhPVFZkRmVHSkdiRlppVjJoT1dXMTBkMk14YkRaVWJHUnFUV3hLU2xaSE1VdFhiRnB4VVdwR1dHSkhhR2haYTJSTFpGWldkV05GTVdsV00yUXpWako0YW1WSFZuTmFSRnBTWWxaS1RsbHNVbGRpTVd4eldrWmFhbEpZYUVWV1ZtTTFXVlpGZVdSRVJsaFdiVkpVV1ZSR1JtVlhWa2hoUjNCT1RVUkdNbFl3Vms5VE1rbDRZMFpzVkdKc2NFNVdha1pMWXpGc05sTnJPV3hXTUZwYVZWZHdRMkZHV2paaVJFWllVbFUxUzFrd1ZqUlNSbFpZVDFkd2FGWXpVWGhXTVZwdlVUSlJlR05HYUU5V00xSk5WV3BHUjJReFRYaFVhbEpwVWxob01GWlhNVzloTVVsM1ZtcEdXazFxUmxoYVZ6RlRWMGRXUlZGdGNFNVhSa3AyVmpCYVRrMVhWbk5qUm14VVltdEthRll3VlhoTlZteFhZVVpPYVZJd2NGcFdSekZMVkd4S2NWRnVVbFJpVjNoMVdWUkNNRk5IVVhwUmF6RnBWakprTTFkWGVHdE5Na2w0WTBaU1QxWXpVbUZXTUZwTFlqRlNTRTVWZEdsU01ERTJWbTAxVDJFeFRrWk9WMnhZVm14c00xcEdaRTVsVmxwMVlrZG9WMDFXYnpKV1JXTjRZekF4UjJOR2FFNVhTRUpaV2xkMFMyRXhVa2hOUkVab1VqQndXVlpzYUVOVVZrVjRVbTVhV21Fd05YbGFSbHB6VjBaV2RHUkdTazVpYldoMlYxaHdUMVJ0U1hoaFJWSlVZbFJzYUZZd1ZuZE5iRkpIV2taT2FWSXdNVFZXUnpWellVWmtSbE5ZWkZwV2JVMHhXa1phYjFKR1RsbFJhekZTVFZWYU1sZFVTbk5qYlZKWFlrWnNVbUp0VW1oV2JuQlhZMnhOZDFwRVRtcFNXRkpWV2xWa05GUlhTbGRUYlRsaFVsZFNSMXBHWkU5a1JscDFZMGQwVjAweVpETlhXSEJIVFVkR1IyRkdVazlYU0VKeVZXNXdjMDVXYkZkYVJtUnNZVE5vTUZsclVrTlpWbG8yVW1wYVYwMHpRa1JYYTFaM1kwWmtXRTlWZEZKTmJXZDVWWHBHVGsxWFNYbFZhMmhPVjBVMVRWVnFSbGROVm1SeVdrVmtUbEp0ZUZWVWJHaHpXVlprUms1SWFGcGhNbWhVV2xkNGFtVldTblJWYXpGcFlYcFNNMWRYY0U5VE1rNUhZMFpzVlZkR1dtOVdNRnBMWXpGc2MyRkZPVnBoZWtaSVZGVm9WMkZYU2xaWGFrSllZa1UxZVZsNlFuZFNSMFpKVjJ0NFZtVnNXblpXTW5SclZURktTRk5yYUZOaWJrSnhXbFprYjJGc1RsaE5WemxwVWpBMU1GUXdhRk5aVmtsNFYycGFXRlpGTlV4Wk1HUlBVMVpXZFZGdGJFNWhiRnB4VlRGa2MyTnRUWGRqUlZKb1UwZDRUVlpZY0ZkaU1XdDNZVVZPYVZJd2NEQldWbU0xWVZkV1dHUklaRlZTVlRWVFdXcEtSMVpIUlhwV2JXaFVVbXR2ZDFkWGRFOWlNa3BHWlVoU1ZtSlhhSEpWYWtKWFRWWnJlVTFXWkd4aVZrcFpXbFZTUTJGck1WbFZiVGxZVW1zd2VGcEdXbk5YUlRGWVpVVjRWazB5VW5sVmVrSnZVMjFPUm1WSVVsTmliVkp4VldwR1lVMVdaSEpVYlRscVVsaFNWVnBFU2pCVVJrNUdUVmhrVlZKNlJraGFSRXBQVTBaYWRWWnRSbEpOYldjeFZYcEdUMDB5Ulhka1JXUnJUVzE0VGxsdGRIZGpNV3cyVkd4a2FrMXNTa3BXUm1oVFYyc3hjV0pFUm1GU1YxSklXVEJrUzJSR1duVmlSbXhTVFVkNE0xWkZZM2hTTWxGNVZHdG9WMkpzV21oVlZFcHZUbXhOZUZScVRtaE5TRkpLVmtab1ExUlhTbFZpUkVaVVRVWnZlbGxXV25KbFYxWkpVV3h3VG1Kc1NuRlZNV1J6VGtVeFJtUkdiRTVXUjNob1dXMTRZVTFXWkZWVWJFNXFVakJzTlZSclpHdGhNVVY1V2toa1lWZEhlRk5aYWtadlVrWk9XVlpzY0dsaVJtd3pWMnRXYWs1WFVsWmxSbFpUWWxVMVMxbFdaREJOVm14eFUxUkNhVTFYYUVWVk1qRjNZVlpKZVdWSVJscFdSVmw2V1ZaV05GTkdaSEZTYld4cFZsUlNNMWRXV21wT1YxSldaRVZzVmxkRlNuTlVWRVpIVFZacmQyRkZkR2xTTVVvd1ZtMDFWMkV4U2xkVGJrNVlZbFJHU0ZSV1pFdFRWbFpZVDFWNFYxTkdTakJYVjNCUFUyMUplVlZ1VWxOaWJYaExWV3BDVms1V1VsWlZha0pvVW10S1JsVnNVbXRYYkZWNlZHNXNWRTFWTlZOYVJscHpWMGRPU0dGSGVGSk5iV042VjJ0YWIxTXlUWGRQV0U1clRXMTRiMVV3V2twa01XdDNZVVUxVDJFelp6RlVNV014VjJ4a1IxTnVUbUZTUlhCSVZHeFdOR1JGTVZoaFIzQnBZa2hDZWxkWGRFNU5WMFowVTFoc1RsTkdjSEpaVjNSWFRXeHJkMkZHWkdoV01IQkpXV3RrZDFSVk1YSk9XRnBZVm0xb1RGbFZXbkpsYkZaMFpVZHdhV0Y2UWpKV01WcHZVVEpPU0ZKWWJGZGhiRnBTVm10V1ZtUXhVblJqUlhSb1VsUlZNbFpzYUhkWGJWWjBWR3BTV0dKSFVsZFVWVlUxVmxaa1ZWSnNjR2hoZWtGM1ZrWmplRmxYUmtaT1ZGcFRZbGhDVDFSWGVHRmtSbEYzV2tad1RsWllRakJVTVdONFdWZEtjazVZVG1GU1ZrWXpXa1JHYjFKR1RuRmlSWGhXWld4YWVWZFhjRXBOVjBwR1pFVm9WMWRGU25SV1ZFb3pUbFprZEU1V1pHdFdiWFEyVmxjMVEyRlZNWEZWYlRWWVZtczFkVmt3WkZabGJGWllUMVY0V0ZKRlZqVldNVnB2VTJ4dmVWUnFXazVXUjFKMFZtdG9VMDVXWkhOaFJrNU9WakExTUZSclpHdGhiVlpWVm01a1dtSlVSbnBVVlZwRFYwWktXVlJ0Y0U1bGEwb3lWWHBHVTAxR1RsZGpSbXhVWW14d1UxWXdWa3RrTVZKSVRWaE9hMVl3V2xwV1ZtTTFWRVphU1ZWdGNGcGlWM013V2tkMGMwNVdSblZqUjJ4T1RWWnZNVll4VWt0V01WSnpZa1pzVW1KdFVtOVdibkJYWkZaYWMxZHJkRlZXYTBwWlZsY3hiMkV4U1hkV1ZFcFlWbTFvUkZwRVNrdFRSMHBJWTBad1dGSnJjRE5YVjNCS1RVZFNkRkp1VmxWaWJIQndXVmMxVTJOV2JGWmFSV1JzVmpBeE5WWnRjRU5WVm1SSFYxaGtXR0pZUW5WVWFrWnpaRVpLZFdOSFJsZFNiWFF6VmtWV2ExWXdOVmRVYmtaVVlsVmFXVlZzYUVKTmJHUlhWMjF3VDFZeFNsZFphMmhIWVZVd2VsRnJOVlpXUlVvelZHMTRjMk5XVW5OYVIzaFhZbGhSTVZadE1ERmtNVTUwVW01V1VtSlhlRlZXYm5CSFUwWnNObE5yZEZOU1ZGWmFWbGN4YjFZeVZuTlRXR2hZVm0xTmVGWkhNVWRXTWtaSFZXMTBUbUpZYUhkWFYzaFhXVlV4UjFwSVRtaFNWRlp2Vm14U2MyVnNiRFpUYms1WFVtdHNORll5Y0ZkWGJVWnlVMnRvWVZKRmNFaFdhMXBQVjFaU2NtTkhiR2hOUnprMVZqRlNRMkl4V1hsVVdHaHBVbTE0VjFsc2FHOVRNV3hYWVVkMGFsSnRlRmRYYTFwcllrWlpkMko2UmxaTlYyaFFWVEl4UzFZeFpGVlJiSEJPVWpGS1NWZHJXbUZrTVVwMFUydHNWMkpWV25CV2EyUTBWMnhrVjFkdGNFNVdNRlkxVlRGb2QxZHJNWFJsUlRWV1ZrVktNMWw2Ums5WFIwcEZWRzFvVjAxRVZrdFdWRWw0VGtkRmVWTnNaRmhoYTFwb1ZXeGFZVlpHYkhKWGJtUnJVbXR3ZUZWdE1YTldSa3B5VjI1a1YxSldXbEJWZWtwS1pVZE9SMkpHVW1saVNFSldWbTAxZDFZeVVrZGlTRlpwVWxoQ2NWUlZaRFJOUmxwSVkwVmthR0pWY0hsWk1HaFBWMjFLVlZac1VsZGlSbkI2VmpGYVQyUkZOVmhTYkdoVFlURndNMVpyVmxkVU1VMTVVbTVTVTJFeWFIQlZNRlV4WVVaVmQxWnVaR3BOVjNnd1dXdFdkMkZyTVVobFNHUlhWbTFTZWxaR1drWmtNa2w2V2tad2FHRXpRbmxYVnpCNFV6Rk9SMWR1U2xaaVYzaFVWRlZhZGsxc1pGVlViazVVWWxVeE0xbHJhRmRXYlVwVllrYzVWMDFHVmpSWk1GcFRVbXhTY21SSGFHbFdWM2N4VmtkNGIyUXlSbFpOV0Zab1UwVTFWVlpxU2pObGJHeFhXa1YwVkZKVWJGbFViRlozWVVaa1NGVnVaRmhXYkhCUVZUSXhUbVF5U2tsVmJGcHBWakpvZVZaWGNFTldNazVIVld0YVZXRXpVbk5XYlRWRFYyeGFTR05GWkdoV2F6VklWVEp3WVZaR1dYbGtNM0JhVm0xU1RGVXdXbUZrVmxwMFVtczFUbFpZUVhsV1ZFWnJZekF3ZVZKc2FGTmhNbWhZV1cweE5HTkdVbFpYYTNSclRWaENTVmxyVm5kaGF6RklaVVJDV2xaWFVUQlpWekZMVmxkS1JtUkdjR2xXUlZwdlYydGtORk14VGtoVGExWlVZVE5DYjFZd1pGTmtNV1JZVFVob1UwMXNTa2haTUZwVFZrWmtSazVWZEZwaVJuQk1XWHBHYzA1c1RuSlBWM2hYVFVad1lWWldaSGRSTWtaSFYycGFhVkpGV2xWV2Frb3paV3hzVjFwRlpGUlNiSEF4V1d0a2MxUnNTbk5pUkZaWFRXNW9jVlJXVlhoVFJsSnhWbXhTV0ZKVVZreFhWM2hyWWpKTmVHRXpiRTVTUmxwWVZXMDFRMWRzVlhsT1ZVNWFWbTFTUjFSV2FFTldWa3BXVGxWNFdtRnJXak5XTVZwUFpGWmtjMWRyTlU1V1Z6azFWakZTU21WSFRYbFRhMmhWWVd4YVZWWXdWVEZUTVd4MFpVVjBhMkpJUWtoWFZFNXZZVVpaZDJORVFsWmlWRlpFV1ZaYVJtUXlTa2xqUmxKWFpXdGFTVmRXVWtka01VcHpWVzVXVldKSVFsbFZiRkpXVFd4VmVGcElUazVOYTFwWVdXdGFjMVp0Um5KVGJrWmFWbXhhZWxwWGVFOVhSVFZXVkcxb1UwMVZjRXBXTW5CTFl6RlNWMUpZWkdwVFJUVm9WbXhrYjFaR2JISmFSWFJyVm14S01WVlhNWE5VYlVaelUyNWtWMUpXV2xCVmVrcEhVMFpTY21KR1NtbFhSMmgzVjFkNFlWSXlUa2RWYTFwVllUTlNjRlJYZUV0VFZsSlhZVVU1VkdKVldscFhhMmhEVjBkS1NHRkhhRnBoTWxKTVdrWmFWMlJYVGtaalIyaFlVakZLTTFZeFdtRmlNVlY1VTJ0b1ZHSkhlRlpXYWtvMFZHeFdWVkZ1WkU5aVIxSjZXVlZXTUdGc1NuVlJiSEJYVW0xU2VsWkdXa1prTWs1RlYyMUdVMVl3TUhoWGJGcHJVakZrUjFkdVZtcFNXRUp2VmpCa1UyUXhaRmhqUlhCT1VqQmFWMXBWVmxOV1IwcDFVVzFvVjAxR2NFdGFWVnB5WkRGYWNWVnRjRk5OUkVVeVZteGplRTVIUmxoVGJHUllZV3hhWVZSVVNqUlRNV3cyVVc1T2ExSnJjREZWYlhoM1YwWkplVlZ1WkZkU1ZscFFWWHBCZUZkR1VuVlZiWFJPWWxob1QxWldVa05rTWs1ellraEdWRlpGV25CVmJHUTBaREZ3UlZOdVRtaFNiRzh5Vm0wMWExbFdTbFpPVlhSYVpXdEtlbHBHV2xOa1JUbFhZMFpvVTFkRlNqWldha293VkRGTmVHTkZXbXhTVmtwVldXMTRTMWxXV1hkV2EzUk9UVmQ0V0ZkWWNFZGhWMHBXVGtSR1ZrMVdTbWhWTWpGR1pERmtjbFJzV2xkaVJuQklWMWh3UjFOdFVYaFRia3BVWWtaS1dGWnNXbUZPYkZwelZXdE9VMDFWV25wV01uQlhZa1pLZEdGR1RsZGlSMUV3V1RKNFUxSnNaSEphUmtwcFVsWndXVlpyWkRCVk1WSlhVMnhvVm1Fd05WZFdiWGgzVlVaV2NsWnFVbE5pU0VKSFZUSXhjMVJzU25KalJGSlhWbTFTZWxScldsZGpNVXB6VjJ4T2FWSnJjRlJYYkZwdllqRk9WMVpzWkZkaE1sSnhWVzEwWVdWV1drZGhSVGxXVFVSR1IxWXlkRmRaVmxsNlZXdDRWbFl6VVRCVmJYaGhZMnhPYzFOc1pGZGlTRUpIVm10V1YyRXlSWGhTV0doVFlrWndWbGxVU2xOVWJGWnpXa1JTVWsxV1dsaFdiVFZQVlRGS1dXRkZaRmhoTVZwTVZsZDRZV1JHVm5KaFJsWlRWbXh3V1ZaV1pEUlNNVnB6VjI1S2FGSlVSbFJVVlZKWFVrWmFWMWR0ZEZWTlZYQkhXbFZXYTFaWFJYZGpSazVYWWxoT05GcFhlRmRqVmtaeVdrWkthVkpYZDNwV1YzaHZWREZhYzFkc1dsaGhNVnBXVm10V1MxVkdWbkpXYWxKVFlraENSMVV5ZUV0V01WcHpWMnBhV0Zac1NrUlZla1pIWXpGS2MyRkhkRk5XVkZaWFZsWlNUMkl4U1hoV2JHUlhZVEpTVkZsclZuWk5WbkJXV2toa1ZtSkdjRmRXTWpWSFZteGtTR1I2UWxkaE1YQklWbTE0UzJNeFZuSk5WazVYVFZWd1JWWnNXbUZXTWtWNFVtNUtiRkpYVWxaWlZFSjNWVEZTV0UxWE9WTmlSbHBhV1d0U1UxVXlTa1pYYkdSV1lsaFNhRlpHV2twbGJGWnlWV3hhVjJKR2NFbFhWRW8wVWpKT2MxVnNiRlZpUjJoWVZteGFkMUpHV25GU2F6bFBVbXh3ZWxWdGVHRldWMHBWWWtaT1ZWWldjRWhhVjNoWFl6RmFjbHBHU21sU1dFSllWbTE0YjFReFdsZFhiRnBZWVRBMVdGVnRlR0ZWTVd3MlVtMTBWMkpGY0hsVk1uaHZWbXN3ZVdGR2FGZFdiSEJZVmtSS1VtVkdTblZUYkZwWVVsUldWVlp0ZUZkWlZrVjRWbTVPVjJKVVZuRlVWbFp6VFRGV2RHUkZkRmROVm5CWldrVm9kMVl3TVZkWGEyaFdWak5vY2xaclpGZFNNVTV6VTJ4b1ZGSlZjRWhXTW5oclRVWk5lRk51U214U1YxSlVXVlJDZDFVeFduUmtSMFpUVm14S1IxWnROVTlWYlVwR1YyeGtXbUV4Y0hwV1JscExWakZrY2xSc1dsZFNWbTk1VjFod1IxUnRVWGhUYmtwVVlrWktjMVl3Wkc5VGJGcFhWMnhrVTAxVk5YcFhhMXBUWWtaS1dHRkdUbGRpUmxwb1ZYcEdVMUpzV25OYVJrcHBVbFp3V0ZZeWRGZFRNVkpYVTJ4a1dHRXdOVmRXYlhoaFpXeGtWMVpxVWxOaVJuQjVWVEo0UzFZeFpFZFRibHBYVWxaYVdGUlZXa2RqTVVwelYyMTBVMVpyY0U5V1Z6RXdXVlpGZUZac1pGaGhNbEpVVld4b2IxSXhVWGhXYTNSV1lrWndlVll5ZEhkV1ZrcFhWMjV3VmxZemFFaFdiVEZPWld4U2MxTnJOVk5XYmtKSFZqRmtNRll4Vm5SVVdHaFVWMGRTVkZsVVFuZFdWbHB6V2tSQ2JHSkdXbmhWVjNSclZXMUtSMk5HYUZkV2JXaFFWbFJHWVZac1pISlViRnBwVWxSUmQxWnRkR0ZTTVZwelZXNVNVMkpIVWxkVVZFcHZVMFphVjFkc1pGTk5hMXA2VmpJMVEySkdTbGRqUms1WFlrWmFhRlZxUmxOU2JHUnlUMVpLYVZKV1dURlhWbFpYVkRGWmVWWnNiR2hTVjFKWFZtMTRZVk5HV2xaWGJYUlRVakZhUjFZeWVFdFdNVnBYWTBWb1YxSldXbWhWYWtaSFl6RktXV0ZHV21sVFJVcFBWbGQ0WVZsV1JYaFdiR1JoVWxSc1lWWnNhRzlTTVZwMFpFVjBWbUpHY0ZoV2JUVjNWakZLUmxOcmFGWmhNbEpJVlcxNFQyUkhSa1pOVms1WFlraENSVlpzV21GWlYwMTVVbXhhYkZKV2NGaFpWRUozVlRGYWMxZHNaR3hpUm5CR1ZWZDBhMVV4U25WUmEyeFhVbTFvVUZaVVJtRldiR1J5Vkd4b1YySldTbFJYV0hCSFV6RmFjMU51U2xSaVJUVlhWRlJLYjFWc1dsZFhiR1JWVFd0d1dGa3dXbE5pUmtwWFkwWk9WMkpHV21oWk1WcHJaRWRLUlZWc1RtbFNWbkJZVmxjeE1GbFdVbGRUYkZacFVsVTFWMVpyVm5ka2JGWlZVbTVhYTAxVk5WcFdSM2hQVmpGYVYyTkZVbGRoYTFweVdXcEdSbVF5VmtaWGJHUm9UVWhDVkZadGVHRldNbFp6VjJ4a1YyRXlVbFpWYWtKM1VqRlZlV1JGZEZWV2EzQlpWbGQwVDFac1duTlhiR2hYWVRGWk1GVnRlSGRTYkU1elUyeGthR1ZzV2xWV2ExWlhXVlpSZUZKdVRsTmlSMUpXVmpCVk1WZFdXbk5XYlVaVVZtMTBNMVp0ZERCaGJGcHlWMjVrWVZaV1dtaFdWM2hoVm14a2NscEdaR2xTVkZGM1ZsUkNZVkl4V25OVGJsSm9VbXhhYzFZd1pHOVdiRnBYVjJ4a1UwMVdjRWRhVlZadllWWktWazVXVGxkaVJsVjNWRlZhVjFkRk1WbGFSa3BPVTBkb1NGWnRNVEJUTVZaelYyeGtXR0pzV2xkV2Frb3pUVVpWZDFkclpGZGlSWEI2V1ZWYVQxWnJNSGxoUlRWWFZteHdXRlZxUmxOU2JWWkdWMnMxVjFaWVFsUldiWGhUWTJzeGMxWnNhR2xTUmtwVVdXdFdZVll4Vm5Sa1JGSllZa1pXTmxsVlZYaFdiRnB6VjJ0b1YxSldjRWhVYkdSWFVqRk9jMU5zWkZkV2JrSlZWbXhqZUdNd05VZFVhMlJUWWtad1ZGbFVTbTlYUm5CWFlVYzVWMDFXV2xoV2JYUnJWakpLUm1KNlJtRldWbGt3VmxkNFlWWnNaSE5TYkZaVFZteHdObFpXWkRSU01WcHlUVlZzYUZKcmNHOVdNR1J2VTBaYVYxZHNaRk5OVmtwSVdXdGFVMkpHU2xsaFJrNVhZa1phYUZaR1dsZFhWMHBGVld4YWFWSldjRmhXVnpFMFV6RlZlVkpzYkdoU1YzaFhWbTE0WVZOR1ZYZFhiVVpQVmpGYVNGWXllRXRXTVZwWFkwWm9WMVpGV2xCVWExcHJVakZLYzFkc1ZtbGlWa3BWVmtaU1ExTXhTa2RWYTFwWFlrZFNVMWxyVm1GV01WcDBaVVpPVlZacmNGbFdWM1JQVm14YWMyTkdRbGROYmxFd1ZXMXpOVlpzVG5OVGJHUlhVak5vVUZaclZsZFdNa1Y0VW01T1ZHSkhhSE5WYkZVeFlqRldjMVp1VG14aVJscDZWbTEwYTFWdFNrWmpSbWhhVmtVMVVGWlVRWGhTYkdSeVZHeG9WMkpJUWxoWFdIQkhWRzFSZUZOdVNsUmlSa3B6V1d4YVMxSldXa1pXYkdSWFRWVmFlbFZ0ZUdGaE1VbDVZVVUxVm1KSGFGUlZWRVpYVmpGYWNWRnNUbE5YUjJoSlZsY3hNRk14Vm5OWGJrcFlZVEpvVmxWc1dtRmpiRlpZWlVWa1YySklRa2hWVjNONFZUQXhSMk5GVWxkV2JFcFFXa1JHUzFJeGNFbFJiWGhUVm01Q1ZGWnRlRmRaVmtsNFYxaG9WV0ZzU2xWVmJYUmhWakZXZEUxWE9WZFNNVnBhV1ZWYVYxWnNXbk5YYTJoWFlURlpNRlV3VlRWV2JGSnpVMnhrVjFaR1JqTldiRnBxWlVkUmVGSllaR3hTVm5CWVdWUkNkMVV4V25OWGJVWlhUVlpLUjFadE1UQlZiVXBHVjJ4c1ZtSllhSFpXUmxwTFZsZEtSbFJzV2xkaVJsVjRWbTE0VjA1R1NuTmpSVnBVWWtVMVdGUlVTbTlTVm1SWVRWUkNWR0pWTVRSVk1uaGhWVEpGZDJOR1ZsVldNMUpZV2xkNFYwNXNSbkphUmtwcFVsUkZlbFpyV205VU1WcHpWMnhhV0dFd05WaFdiWGhoV1Zac05sSnJjR3ROVlhCNVZUSjRUMVJ0U25OVGExWlhVbFphVjFSc1drZGpNVXB6VjJ4Q1YxWnJjRTlXVjNoVFVqRkZlRlpzWkZkWFIxSnhWRlpWZUUweFZuUmtSazVvWWxWV00xUnJVa05XYkZsNVpIcENWbUpZYUVoV2JYaExZMnhrYzJOR1drNU5iV2hMVm14YVlWWXhTWGhhU0U1WFlXeGFjMVZzYUc5Vk1WcHpWbTFHVlZac1NuaFZWM1IzWVdzeFZtTkdaRlppV0ZKTVZtdFZlR05zV25WalJscHNZVEJ3U1ZaV1pEUlViVkY0Vld4c1ZXSkdjRmhXYkZwM1VrWmFjMWRzWkZoaVZURTBWVEZvYTFVeVJYZGpSbEpWVm5wV1ZGVnJXbE5TYkZwVlZteEthVkpXY0ZoV1JFWlhWVEZTVjFOc1ZsTmhNRFZYVm0xNFYwMHhiRFpTYTNCclRWVndlVlV5ZUU5VWJVVjVaVVJhVjJFeGNGaFZha1pMVTBaYWNsZHNXbWxTTTJoUFZsZDRZVmxXUlhoV2JHUlhZa2RTYjFWc2FHOVNNV1J5Vm10MFZtSkdjREJhVlZZd1ZsWktWMk5HUWxaV00yaElWbXBHVTFkV1VuUmlSVFZUVjBWS1JWWnNXbE5VTVd4WFVsaHNVMkpyY0ZWV01GVXhWa1phYzFadFJsSk5WbHA2VmpKNFlXRnJNVlppUkU1V1lsaFNURll5ZUdGa1JsSjFZMFprVTFKVmNFbFdWbVEwVlcxV1IxUnNiRlZpUmtwWVZteGFkMU5zWkZoTlZFSlVUV3hHTkZWdE5VTmlSa3BYWTBaT1YySkdXbWhXUmxwclZqRlNjVlZzVmxOaE1YQllWbGN4TUU1R1ZuUldiR3hvVW1zMVYxWnRlR0ZUUmxwWVpVVjBhbEl4V2tkWlZWcExWakZhVjJORmNGaFdNMEpFVlRJeFRtVkdWbGxhUms1b1RVaENWMVpHVm1GU01sWnpWMnRrVjJFeVVsTlphMXBMVmxad1ZsWnFVbFppUm5CWFZHeFNWMVpzV2taT1dGcFdWa1ZKTUZWdGVHRmpiRTV6VTJ4a1YySklRalJXYTFaWFZqSkZlRkp1VGxOaVIxSndWVzEwZDFSc1ZuTmhSazVTVFZaYVdGWnROWGRVYXpGV1YyNWtZVlpXV21oV1YzaGhWbXhrY2sxV2FGZGhlbEYzVm10V1lWSXhXbk5UYmtwc1VtdHdjMVl3Wkc5V1JscFhWMnhrVTAxV1ducFZNalZEWWtaS1dHRkdUbGRpUmxwb1ZURmFjMk5XUm5KalIzQk9WbXRaZWxaWE1UQlRNVnBXVFZWa1UySnVRbGhWYlhoaFUwWldXR1ZHVGxkU01WcEhXVlZhUzFZeFdsZGpSWEJYVFZkU2VsUnJXbE5qTVVwelYyeFdhR0pGY0ZWV1Z6QjRZVEpXYzFadVRsZGhNbEpUV1d0V2QxZFdXa2RoUlRsV1RVUkdSMVl5ZEU5V01ERlhWMjVHV21WcldsZGFSRVpMWTJ4T2MxZHRlRmhTTW1RMVZteGFhMDFHU1hoVGEyaFdZbXR3VlZsdGRHRlZNV3hYWVVjNVUwMVdXbGhXYlhSclZUSktSMk5HVm1GV1ZscDJWbGQ0WVZac1pIUlBWbVJwWWxoamQxWnNWbUZTTVZwelUyNU9VbUpHY0ZOVVZFcHZWRVphVjFkc1pHaE5iRXBZVlcwMVYxWkhSWGRPVlRWV1lrWndhRlZVUmxkV01WcHhVVzFvVTFkSGFFaFhhMVpYVXpGV2MxZHNiRlpoTVZwV1ZXeGFkMU5HVmxobFJXUlhUVlZ3ZVZkclZYaFZNVmw0VTJ0U1YxWnNjRmhaVkVwWFVqRktkVkZ0ZUZOaE0wSlVWbTE0VjFsV1ZYaFdibEpwVWtaS1ZsbHJWbUZXTVZaMFkzcEdWVlpyY0ZwV1YzUlBWbXhhUms1V1VsWmhNbEpZVlcxNFQxZFdVbk5VYkdSWFZtNUNSVlpzWkRSaE1WcDBWRmhvVkZkSFVsUlpWRUozV1ZaYWMxVnRPV3hpUmxreVZWZDBhMVZ0U2taT1JFcFlZVEZhVUZaR1drdFdNV1J5Vkd4YVYySkdiRE5YVmxaWFRrWktkRlZyV2xSaVJYQllWakJhUzFKc1drWldiVVpUVFZWYWVsVnRlR3RWTWtWNVZXczFWbUpIVWxSVlZFWlhWakZhZEdSSGVGTmhNWEF6VjJ4V1lWTXhWbk5YYkZwWVlrVTFWMWxzWkROTlJscElaVVZrVjJKRmNIbFViRlY0VlRGWmVGTnJVbGRXYkhCWVdWUktSMVp0VmtaWGF6VlhWbGhDVkZkc1pEQlpWa3B6VjFoa1ZXRnNTbFJaYTFaaFZqRldkR1JIUmxwV2JGWTJXVlZXYzFac1duTlhhMmhhVmxad1RGWnJaRmRTTVZaelUyeGtWMVp1UWxkV2ExWlhZV3MxVjFKWWFGTmlSbkJXV1ZkNFMxVXhiSE5oUlU1VFVteEtSMVp0ZUd0VmJVcEdWMnhrVjJKWWFHaFdSbHBMVjBaV2NsUnNXbGRpVmtwSlZtcENWMDVHU25KUFZscFVZa1Z3V0ZaclpEUlZWbHBHVm14a2FrMVZXbnBWTVdoM1YwZEZkMDVYYUZwV2JXaDJWV3BHVjFZeFduSmFSazVwVW0wNGVGZHNWbGRpTVZaelYyeGFXR0Y2YkZoWmJURXpUVVphUmxkclpGZGlSWEI1V2xWVk5WUnNTbGhsUkZwWFZqTm9XRlZxUmtkak1WSlpZa1pPV0ZKVVZsWldSbFpYV1ZaRmVGWnFXbEpoZWxaeFZGWmFZVll4Vm5Sa1JYUlhZa1p3V0ZscmFIZFdiVVp5VTJ0b1ZsWXphRXRhUkVGNFUxWlNjMVpzWkZkV2JrSkhWakZrTUZZeFVYaGFSbHBzVWxad1dGbFVRbmRWTVZwelYyMUdWMDFXU2tkV2JURXdWVzFLUmxkc2JGWmlXR2gyVmtaYVMxWlhTa1pVYkZwWFlrWlZlRlp0Y0VOT1JrcHpZMFZhVkdKRmNFOVVWbFozVWxaYWNWRnJPVTlTYTNCNlZXMTRZVlV5UlhoalJtUmhWbTFvZGxVeFdsZFdNVnB5V2taa1UySldTbFpYYkZaaFVURldjMWRzV2xoaVJWcFlWRlZWTUUxR1ZYZFhhMlJYWWtaS01WWkhlRXRoVmtwMFpVUmFWMVl6YUZoVmFrWkhZekZPYzFWdGVGUlRSVXBVVjFaU1ExbFdSWGhpUkZwU1lUTlNjMVZ0ZEdGa01YQldWMnRPVm1KR2NGZFdNbmhIVmpBeGRHUjZRbFpOUm5CSVZtMTRZVmRXWkhOVGJXeFRZVEZ2TWxac1pEUldNVWw0VW01T1ZHSkhVbFpXTUZVeFZrWlNWbFp0UmxKTlZuQldWVEp3UTFWck1VbGhSV1JZWVRGYVRGWlhlR0ZYUmxKMVkwWmtWMkpHY0VsV1ZtUTBWbTFXV0ZScldsWmhla1pVVm1wT2IxSkdXWGxsUnpsclRWVldNMXBWVm10Vk1rVjNZMFpPVjJKWVRYaGFWbHBYVjFkS1JWVnNWbE5oTVhCWVYxZDBZVlF4VVhoWGJGcHBVMGhDVjFscldtRlRSbFpZWlVWMFYxSXhXa2xaVlZwTFZqRmFWMk5JV2xkU2JWRjNWVEl4VG1WR1RsbGFSazVvVFVoQ1ZWZHNXbTlpTVZWNFZteGtWMkV5VWxoVmJHaHZVMFphU0dSRmRGWmlSbkI1Vkd4b1lWWnNaRWhrZWtKV1RVWndTRlp0ZUZOa1ZscHpVMnMxVTFac2J6SldiR1EwVmpGSmVGSnVUbFJpUm5CV1ZqQlZNV0ZHVWxaV2JtUlNUVlphZWxadGVIZGhhekZXVFZST1ZtSllVa3hXYTJSWFYxZEdSbUpHV2xkaVJuQkpWbFJLTkZZd05WaFdhMXBvVW10d1dGWnNXbmRVUmxwR1ZteGtWMDFWV25wVmJYaGhXVlpLVm1ORk5WWmlSbkJvVlZSR1YxWXhXblZUYlhCT1ZsaENXRlpYTVRCVE1WVjNUVlZhVjJKdVFsZFVWbHBoVTBaV2NscEdUbE5pUlRWNVZGWlZlRlV4V25OalJWSlhWbXh3V0ZadGMzaGpNVXAxVVcxNFUxWkdXbFJXYlhoV1RWWktjMVpzYkdsU1JrcFZXV3RXWVZZeFZuUmtSRkpXWWtaV05sbFZVbE5XYlVaeVUydG9WbUpZYUZSVmJYaFRWMVpTYzFWck5WTldia0pGVm14b2QxUXhiRmRUYTFwc1VsWndjbFZzVm5kaFJsSldWbTVrVjJKR1NrZFdNblJyVlcxS1JsZHNhRmRTTTBKUVZsY3hWMWRYUmtaTlZscFhZa1p3VVZac1VrZFVNazVJVm10YWFsSnJjRmRhVnpFMFUxWmFXR1JGT1U5U2F6VklWVzE0WVZVeVJYcFJiRlpoVm0xb2RsWkdXbGRXTVd0NllVWlNVMkY2VmpOWGJGWmhVVEZXYzFkc1pHcFNWVFZYVm0xek1FMUdWWGRYYTJSWFlrVndlbFZYZUU5VmF6QjVZVVUxVjFac2NGaFZha1pYVWpGS2MxVnRlRk5XYmtKVVZtMTRZVmxXVm5OV2JHeHBVa1pLVlZsclZtRldNV1J5VjJzNVZXSkdjRmRVVm1oM1ZqRmFSbE5yYUZaV00yaFlWakZrUzFKc1ZuSmpSMmhZVWpGS00xWnFTWGRsUjAxNVZGaG9hbEpzU2xWV2ExcDNVekZzYzFadFJteGlSM2g1VmtaU1IyRXhTWGRYYkd4VllUSm9XRmxWWkV0amF6RlpVV3hXVTFaVVZrMVhiR040VTIxV2MxZHVWbWxTYmtKUFdXdGFkazFzV2xkVmEzQlBWakZLV1ZaWGRHOVdNa3B6VjI1S1ZsWkZTbmxVVjNoYVpXMUtSbVJGTldsU00yaGhWbFJHYTJFeFdrZFRXR2hZWVd4YVlWbFhkRXRUUm5CRlUydGtWMVpVUmxsVVZtUXdWakpXYzFkdWFGaGhNVnB5V1hwS1UyUkdUblZSYlVaT1RVVndlbFpHWkRSa2JWWkhZa2hTVGxaVWJFOVZha0poVjFaUmVHRkdaRlJpUld3MFZtMDFZVmRIU2taT1dIQlZZV3RhTTFwR1dtRmtWbHB6WTBVMVRsWllRWHBXTVdSM1Uyc3hSMkl6YkZaaE1VcHZWV3BPYjFSV1dYZGhSazVxVFZaS1NWUnNWazlpUmxwMVVXeHdWMDFxUlRCWlZtUkxZekZPY2xkc2FHbFNNVXB2VjFaV2ExVXhaRWhXYTFaU1lUTm9VMVJYTlU1bGJHUnlXVE5vVTAxc1dsZFphMVp6Vm14YVNHVkhhRmRYU0VKWVdURmFkMUl5Umtaa1IzaFhZbXRLV2xaSGVGTlJNVmw0VTFoa1dHRnNXbGxaVjNSM1YwWlNWbFpxVW10U2JFb3dWREZrYjFZd01IbGhTR3hZVmtWc05GWnFTbE5XTVhCRlYyeE9hVlpyY0U5WFYzaFdUVmRTYzJKR1pHRlNSa3B2VkZkek1VMUdXblJPVm1SV1VqRmFXRlZ0TldGWFJrcFdUbFYwWVZKdFVraFZNRnBoWkZkS1NHSkhlRmRTVm05NlZqRmpkMlZHYkZoVmJrcHNVbTFvVjFsdGRFdGpiR3h5WVVkMGFsSnJNVFJXUmxKSFZHeEpkMkpFVmxoaE1rMTRXVlphU21WR1pISldiSEJvVFd4S1NWZHNZM2hVTURWWVVtdG9WV0V6UW5CV2JGcDNaVVprY2xadGRHcE5SRVo2V1RCYWEyRXdNWFJsUlRGWFZrVTFjbGt5ZUU1a01rWkhWRzFzVG1FeGNHRldhMXB2VVRGU1dGTnVUbFJoYTNCWldWZDBkMk5zYkRaU2JtUlhZa1pLTVZaSGVIZFhSa3BWVmxSS1ZtVnJTbWhVVkVwSFZqSktSMkZHVm1oaE1IQjJWbXBDWVdReVRYaGFSVnBWWVROQ2NWVnNhRzlTVmxwWFdYcFdhRTFWVmpWYVJWSkhXVlpLV0ZSVVJscGlXR2d5V2xaa1YxTkhWa2RUYXpWcFlsZG9NbFl4YUhkVU1WSjBVMWhvYUZKV1NsVlpiVFZEWWpGV2RXTklTbXhpUjFKSFZrZDBkMkZzU1hoalJteFhVbnBXYUZsV1pFdGphelZWVTJ4d2FFMXNTbGhYYTFwclV6Rk9SazlXYUU5V1dHaFVWRlphWVUweFdrbGpSWFJhVmpGS01GWkhOVU5oUmtwR1kwZEdWMDFHV25wWmJYaHJWakZXV1ZwSGRFNVNSMmN4VmxkNFUySXhiRmRXYWxwWFltdHdXVlp0TVc5V1JteFdWbXBTYTFack5UQmFWV1IzVkdzeFYyTkVXbGhoTVZwMlZrY3hVMWRHVG5KaFJtUnBZa1p3YjFaR1VrZFRNbEp6VldwYVZHRXhjSEZaVkU1U1RWWnNjbFZ0ZEdoTmEzQlhWakp3VjFaR1dsaGhSVGxWVFZaYU0xVnJaRWRUUmxKeVkwZG9hV0pYYURWV01WcGhZakZrY21NemFHaFNWa3BWVmpCV1MxUnNWWGRXYmtwUFZtczFlVlpITURWWGF6RklaVWhvWVZaWFVYZFpWVnByVWpKRmVsTnNhRk5XVkZaTVYxUkNWMDVHVGtoU2FscHBVbGhTVTFSWE1XOWpWbFY0V2toa1QxSXdiRE5VVmxwWFZERlpkMDVWZEZwV2JWRjNXbGQ0YzJSSFNYcGFSMmhPVTBaS1NWZHJVa3RqTVZaWFZHdGFVMWRGY0ZsVmJGVXhVekZyZDFacVVsUlNiRnBXV1d0V01GVnJNWFJoU0VaV1RWZFNNMVJyWkZKbFJrWjFWRzEwVG1KWWFFNVdiRkpQWWpKV2MxWnJaRlZpUlhCd1ZGWmtiMUpXVlhoVmJUbG9Za1Z3UmxadE1YZFdSbGw1WlVoc1dtVnJjRXhVYlhONFUwZFNSbVZHVG1saVZrb3pWbXhXVjJJeFJuSmpNMmhvVWxaS1ZWWXdWa3RVYkZWM1ZtdGFUMVpyTlhsV1J6QTFWMnN4U0dWSWFHRldWMmhFV1ZaYVdtVldVbGxUYkdoVFZsUldURmRVUWxaT1ZUVlhWbXhvVUZZelFuTldhazVTWlVaWmVGZHRkRlpOYTFZMFZXeG9jMkpHU1hsaFNFWlZWa1ZHTkZwSGVHdFNiRkp5WkVkc1RsZEZTbUZXVkVreFdWWlNWMWRZYUZSaWJWSm9WV3BPYm1Wc2JGZFdha0pYVWpGR05WcEZWalJXUmtwWVpVUk9WMUpYVGpSVmFrcEdaVWRPUmxkc1ZtbGhlbFpvVm1wQ1ZrMVZOWE5VV0dSWVlXczFiMVpxUW1GVFZscDBUbGhPYUZZeFdsWlZiVFZyVjIxS1ZWSnRhR0ZTTTFFd1ZqQmFWMlJXUm5Sa1IyeFVVakZLTTFaWWNFZFVNREI1VWxoa2ExSlhlRk5XTUZaTFZHeHNjMVpzY0d0TldFSkhXVlZXZDJGVk1WaGhSVlpXVFdwV00xbFhNVXRXYXpWWVkwWlNWMDF1WTNkWFYzUlhUa2RTUjFadVVtaFNNMUpVVkZWYVdtVkdaRlZUV0doWFRXeGFNRlpYZUc5aVJrcEdVMjVHVlZadGFGUlpha1pyVWpGU1ZWSnJOVk5OUm5CTFZtMHdNVlV4WkhSVGJGWlhZbFJzWVZadE1WSmxiSEJIV2tVNVZGSnJjSGhWVnpGdlZXc3dlRk51UmxaTlYxSjVWRlphY21ReVNrbFJiWFJUVFRKb1QxZFhlR0ZUTWtsNFkwVmFZVkpXY0hKV2FrRXhUVVphZEU1WVpHaE5WbXcyVjJwT2ExZHRWbkpYV0dSYVZsWndkbFpyVlRGV1ZrWjBZVVpTVTJKSE9UTldha1pxWkRBeFdGSnJhRk5pUjJoeVZGUkdZV0ZHV1hkYVJ6VnJUVmRTZWxkWWNFZGlSMHBXVjJ4c1ZVMVhhRmhXUlZwV1pXeHdTVk5zVWs1U01taFFWMVJDVjA1SFVrZFRibFpoVWpOQ1ZGUldXblpsUmxsNVpFVTVhVTFzUmpOYVJWcFRZVEF4ZFZWck1WWmlia0pVV2tSR1UxTkZNVmhQVlRWVFRVaENXbGRyVWtwT1ZteFhWbXBhVjJKcmNGbFdiVEZ2Vmtac1ZsWnFVbXRXYXpVd1dsVmtkMVJyTVZkalJGcFlZVEZhZGxaRVJuTmpNa3BIV2tVMVZGSnNjRzlXVjNCSFdWVTFjMXBHVmxWaE0xSnhWV3BCTVZOc1dsaE9WVTVvVmxSR2VGWlhOV3RXVmtwV1RsWk9XbUZyY0V4Wk1HUkdaV3hhYzJOR1pFNVdXRUkxVm14YVUxTXdOVWhTYTJoVlYwaENWbFp1Y0hOWGJGWlZVVzVrYTJKSFVucFpWVll3WVRKRmVtRkdiRmRXZWtVd1dWZHplR05yTlZWV2JIQlhZbGRvUlZaR1ZtdFNNV1JHVDFac1YySkhlRk5VVldRMFRURmFSbFpyT1ZaaVZXdzFWa2MxUTJGRk1IaFhiVVpYVFVaYVRGUlVSbXRqTVd3MlVtMW9UbE5HU2twV1IzUnZVVEZTVjFOWWFGZGhhMXBaV1ZSS1UxTkdVbFpYYms1WFVsUldXbGxyWkVkWFJrcFZWV3BTV0ZZelVuWldWRXBYWXpGcmVtSkdUbWxXYTNCUFYxZDRZVmR0VmxkYVNFNWFaV3RhVDFWcVFUQk5WbEp6WVVWT2FFMVZiRFJXTW5CRFYyMVdjbGRxV21GU1JWcDJWbXRhYTFkRk1WWmxSa3BPVmxadmVWWnFTakJVTWs1MFZXeG9VMkV5ZUZkWmJYaExZMFpXVlZOdE9XcE5Wa3BKVkZaYVQyRkdTWGhUYTJ4V1lrZG9XRmxYTVV0V01XUnhWMjFHVTJKV1JYZFdSbFpyVkcxV1NGVnJhR2hTYlhoWFdsZDRZV1ZzWkhKWk0yaFhUV3hLV1ZaWGRITldWbVJIVjIwNVYwMUdjRXhaZWtaell6SkdSazlXY0dobGExcEpWa1pXYjFZeVJsaFRiRnBZWVd0S1dWbHJWVEZsVm13MlVXNWtVMUl3V2tsYVJWWTBWbTFXYzFkdVdsZE5ibEp5VmxSR1MxTkdUbkpoUms1cFltdEtlRmRzV210aU1rWnpWR3hvVGxaNmJIQlZha0V4VFVaUmQyRkdUbHBXYTJ3MFZqSndZVmRHV2taT1ZYaGFUVWRTVUZVeFdsZGtWa1owWWtVMWFHSkdjSGhXVkVacll6Sk9kRlJZWkdwU1ZrcHZWVEJrTkZSV1dsbGpSbVJwVFZkME0xbFZWazloVmtsM1kwUkNWMVp0VFRGWFZscEdaVmRTU1ZwR1ZsTldNVXBZVjJ0YVlXUXhUa2RUYmtaU1lraENWMXBYZUZwTlZsbDVaVWM1VlUxRVJsbFZNblJ6Vm0xS2RWRnNiRlZXTTFKb1dWUkdVMU5GTlZaUFYyeFRUVVJWZDFkWGRHdE9SMFowVm14V1YySnRVbWhWYkdSVFYwWndSbHBGTld4U01ERTJWMnRhYzFack1WaGxSRUpXWld0S1VGWlhNVXBsVms1eVZXMW9UazFXY0haV1ZFSmhVekF4UjJKSVNsVmlWR3h3Vld4b2IwMUdXbGhOVnpsb1RWVnNNMVp0Y0VkWGF6RnhVbXhvWVZaNlJsUldNR1JYVWxaR2RHTkZOVmhTYTNBeVZtcENZVlJyTVZoV2JrNXFVbTE0VlZsdGRFdGhSbGwzVmxob1RsWnRlRmhaVlZwUFlWWkpkMk5HY0ZkU2VrWk1Wa2Q0UzJOV1JuRlNiSEJwVmtWYVNWZHJWbUZrTVZwSVVsaHdWV0V6VWxOVVZ6RnZUbXhXTmxKck5VNVdNRnBJV1RCV2IxWnRSWGhUYmtKV1lXdEthRlJ0ZUhKbGJVcElUMVp3VGxJelozZFhWbFpyVGtkR2RGTnNWbWhTUlVwWldWUktVMWRHY0ZobFNFcHNZa1UxTVZWWE1YZFdSa3B5WTBST1dGWXpRa3RVVmxweVpESktTVkZ0YUU1TlJGWk5WbFpTUzJJd05WZFVXR2hWVmtWYWIxVnFRVEZUYkZaWVRWUlNhRll3Y0ZoVmJUVmhWMjFGZDA1WWJGcE5SbGt3VlRCYVlWZFdXblJTYkU1T1VtMTNlbFpxUm1GVWF6RllWbXhrYWxKdGVGWlpWM1JoWTBaVmQxZHJkRTlpUm04eVZUSjBhMWxXU2xsaFJFWlhVak5DUkZsV1ZYZGtNazVKV2tab2FWSXlhRkJYYTFwclVqRmtWMVp1VW14U01uaFpWV3hTVjJOR1drZFdiSEJyVFd0d1Yxa3dhRU5aVlRGMVZXc3hWbUp1UW5aYVJFWlRVMFV4V0U5Vk5WTk5TRUphVjJ0U1NrNVdiRmRXYWxwWFltdHdXVlp0TVc5V1JteFdWbXBTYTFack5UQmFWV1IzVkdzeFYyTkVXbGhoTVZwMlZrUkdjMk15U2tkYVJUVlVVbXh3ZUZaR1VrZFRNREZ6WVROc1RsZEZOWEJWYWtFd1RWWlNjMkZGVG1oTlZXdzBWakp3UTFkdFZuSlhhbHBoVWtWYWRsWnJWVEZYVmxwelkwWmtiR0V4Y0RaV1dIQkhWREF3ZVZKWVpHdFNWMmhSVlRCV1MxUnNiSE5XYlVacVlrZFNlVlp0Y3pWaGF6RllaVVp3VjFKNlZqTldSVnBMWkZad1NWRnNjRmRXTVVwWlYyeGFhMU13TlZaTlZtaHJVakJhV1ZWc1VsZGxSbVJWVTFob2FrMXNSalZXVjNSdllWWk9SMk5JUWxwaE1taHlXVEJhVG1WR1VuRlViV2hPVTBaS1MxWlVSbTlSTVZKWVUyeGFXR0ZyTldGVVZXUlRWMFp3UjFkdVpGTlNNRnBLVmpKME5GWnJNWFZWYWxwV1RXNVNVRmxxU2s5U2JWSkhWV3M1VjJWdGVIbFdWelYzVWpKV2MxUllaR0ZTYkhCeVZtMDFRMU5XVm5SalJVNVlZa1paTWxadGNGZFhSMHBJWVVaQ1ZWWnRVa3hWTVZwWFpGZE9SMkZGTldoTldFSjVWbXRXYW1Rd01WaFNhMmhVWWtkb1dGWXdWa3RVYkZaVlVtdGthMkpIZERWWmEyaExZVEZhZEdWR2NGWldlbFp5VjFaYVlVNXNXblZUYkZKT1VqRktOVmRVUWxkT1JrcEhWbXhvVUZZelFuTldhazVTWlVaWmVGZHRPVkpOYkVZMFdUQmFiMVF4V1hwVmF6RldUVVphZWxwRVJsTlNiRkp6VTIxc1RsWXlhRVpXVkVadlZqSkdkRk5zWkZoaGJIQm9WVzB4VWsxR1VsWmFSVGxQVmxSR1dWa3daSE5VYlVaelZtcE9WMDFXY0hKWmVrcFRWakpPUjJKR1VtbFdWRlpNVjFaYWEwMUZNVmRhUm1Sb1VsVTFjbFJXYUVOWFZsSnpXa1JDVlZKck5VZFVWbWhyVmxaS1ZrNVdUbHBoYTNCUVZHeGtSbVZzV25SaVJUVm9Za1Z2ZVZacVFsZFVNVTE1VW01U1ZHRXlhSEJWYWs1RFlqRlNWMkZIZEdwU2JFcEhXVlZhUzJGc1NYaGpSbkJWVm0xT05GbFVSbUZPYkZwMVVtMUdVMVl4U2paWGEyTjRVekpPUjFKdVJsSmhNMmhUVkZjMWFtVnNWWGxrUlRscFRWZDBNMWxyYUVOVU1WbDVaVWhLVjAxR2NFdGFSRVp6WTFaT1ZWRnRkRk5XUlZwWlYydFNTMk14VWtkV2FscFhZV3R3WVZsc1pEUmtiR1JWVVc1T2ExSnNTakZXUnpGdlZqQXhSVlpxVmxkTlJscFFWVEl4VG1WSFRrbFdiR1JwWWtad2FGWkdVa2RUTWxGNFlraEdWRlpGU25CVVYzaExVbFpzY2xWdGRHaE5WVmt5Vm0xd1QxZHJNWEZTYkdoVlZqTm9NMVl3VlRGV1ZrWnpWR3hPVGxadVFYZFdha1poWWpGWmVWUlliRlpoTVVwb1ZGUkNTMVZXVWxobFNHUk9Za2QwTlZscll6VlViVXBJWlVad1ZrMVhVbkpXTW5oaFVsWkdjVlJzVm14aE0wSklWa1JDVm1WR1dsaFZhMmhvVWxob2MxWXdWVEZOTVZWNVpFVTFUbFl3V2tsVmJUVlRWVEpHYzFOck1WWk5SMmhUV2xWYWNtVlZNVlZVYXpscFVqSm9SbFpVU1hkT1YwVjRWR3RrVkdGck5XRlVWRTVEVFd4d1NHUkVUbXhXYmtKSldWVmtNRlV3TVZkaVJGcFhUVlp3ZGxreU1WTlhSazV6WVVaT2FXSllhSGxYVjNoaFdWZFdjMVZyYUU1V1ZHeHlXV3hXZDFaV1VYaFZhM1JWWWtaWk1sbHJVazlaVmtwMFZXdDRXbVZyY0VoV01GcFRWMVprYzJORk5XbFdNbWd5VmpGU1NtVkdTWGxTYmxKV1lUSm9XRmx0TVRSalZuQllZMGhPYVUxWGRETlhhMmhQWVcxS1NWRnNjRnBYU0VKNlZrZDRZVkl4U2xsaVJsWlhaV3RhU0ZaR1VrSk5WbHBYVlc1U2FsSlViSE5aVkVaM1pXeFplV1ZHVGxaaGVsWlhWR3hvUjFZeVNsaGxSVGxoVm5wR2NsUnNXbXRrUlRGV1YyczFUbEpGV2xwV2ExcHZaREZzVjFkWWFHaGxhMHBaV1d4b1ExWXhiSE5hUlhCc1ZtMVNNRlJXWkhkVWJVcEhZa1JPVjFaV2NGUlZWRVp5WkRKS1NWWnJOVlJTVlhCUFYxZDRZVk13TVhOaVNGSk9WbXh3Y0ZSV2FFTldWbXh5Vlc1T1ZWSnRVa1pWYlRWVFdWWktkRlJZYUZwV2VrWlVWVEJrUzFOV1pIUmlSMmhYVmxoQ01sWlljRU5VTWsxM1RraHNWbUV4U21oVVZFSkxaRVpaZDFkdVpHbE5WM1ExV1d0V1QySkhTa1pUYkhCaFVsWktlbFpWVlhka01rNUpWRzFHVTFZeWFGbFhiRnByVXpKT1IxSnVWbXBTVkVad1ZtcE9ibVZHWkZkWGJUbFdZWHBzV0ZscldsTmlSazVKVVc1U1YxWkZjSEphUkVaVFRteEdkRTlYYkZOTlJGVjNWa1JHVjFNeVJuTlRXR3hyVWtWYVlWWnRNVTVsUm10M1drWk9VMUp0T1RaVlYzaERWR3hrU0ZvemFGZFNWMmg1Vkd0a1IyTnRTa1ppUmxacFlraENlVlpxUWxka01rNVhXa2hPVjFkSGFHOVZha0V4VTJ4V1dFNVZUbWhXTUhCWlZsZDRhMVl4V1hwVldIQlZUVlp3TTFVd1drdGpWa1p6WTBaa1ZGSlZjREpXTVZKRFlqRkZlVlJZYkZOaVIyaFdXV3hrYjJOc1ZuRlRhbEpPWWtkNE1GbFljRmRoYkZsM1RWUldWVTFYYUZoV1ZWVjRZMnMxV1Zkc2FGZGlWMmhOVjJ4a05HUXhaRmRXYkZacFVqTlNXVlZ0ZEhkTlJscEZVV3hPVGxJd1dsaFphMXB6VmxkS1dXRkdRbHBXTTJoSVdsZDRhMk15UmtsVWJGSk9Va1ZhTmxkVVFtRmpNVnBJVTI1V1VtSlViRmhaYlRWRFpXeFNWMWRyT1ZoU01EVktWakl4TkdGRk1IbGhSVnBYVmtWcmVGcEVTa2RXYXpGSllVWm9hR0pHY0ZwV2JYUlhaREZrUjJOR2FHdFRSVFZ4Vm1wQk1WTldWWGxrU0dSb1ZteHdXRmt3VW1GWFJsbDZWV3M1VlZadFVsUlZNRnBMWXpKR1JrOVdVbE5pU0VJeVZqRmplR1Z0VmtoVWEyUmhVbGRTVmxsWGN6RmlNVnB4VVc1a1RsSnNXakJVYkZwUFYyeGFkRlZyWkZWV2JXaEVWbXhWZUdSWFJrVlhiSEJYWWtoQ1VWWlVRbUZaVjFKWVUydG9hVkpVVmxSV2JUQTFUbXhaZUZkdFJsVk5WVFV3Vmtab2EyRldUa2RYYkU1YVlsaG9NMWt4V2xaa01XUjBVbTE0YVZJeFNsbFhWbFpoVkRKR1YxTnNhR3hUUjFKb1ZXdFdkMlZzYkZaWGEzQnNVbTFTZUZadGVIZGhWMHBaWVVWNFdGZElRa1JaZWtwVFVqRmtkVkpzV21sWFJVcFZWa1pXWVdSdFZrZFhXR3hyVW0xU2NWUlhlRXRYUm10M1lVWk9WbEpzY0RCWlZXTTFWakpLZFZGc2FGcE5ibWg2V1RGYVUyUkhUa2hoUm1SWVVqSm9SMVpzVWtwbFJUVkhWRzVTVTJKSGVHaFZNRlpMV1ZaU1ZscEhPVlZTYlhoNVYydGFUMkV4U25OalJFWlhZbFJGZDFaVVJtRmpiVTVKWTBaa1RtRnJTVEJXVjNCQ1pVWmtSMVJ1U21sU2JIQllWRmMxYjFReFdsZFZhMDVyVFd4S2VsZHJhRTloUmtwWlZXNUtXbUV4VlhoV01WcFRZekZyZW1GSGFGZE5WbkJZVjFkMGIyUXhXa2RYYWxwVFlrVktWbFp0TVZOVlJuQkhWMnM1YTFJeFdrbFphMlJ6WVZaS1dWRnNhRmRoYTFwb1dXcEdUbVZXVG5WVWJYQlRZbGhvV0ZadGNFdE9SbEp6Vm14V1VtSnRVbkZXYlRFMFZqRmtjbUZGT1doaGVrWmFWVmQwZDFack1YRlNWRUphVm0xU1NGWnRNVXRUVjA1SFZXeGtUbUp0YUZWV01WcGhWakExUjFOclpGVmlhMXBUV1d4a05GUXhiSE5YYTNST1ZtMVNXVnBGWkRCV01ERldZMFZzVmsxdVVuWldWRXBMWkZaR2RWSnRSbGRpUm5BMlYyeGtORlF4WkVaT1ZtUlZZbGQ0VDFsVVJuZFpWbHB5VjIxMGFrMVdTbGhWYkdocllXeE9SbGR0UmxwV00xSjVXbFZhZDFkRk1WWmpSM2hYVFZad1NsZHNWbGRrTWtaSFdrVm9WbUp0VWxsV2FrNVRZMVpTYzFwRmRHcGlWWEJLVlZjeE1GUnRTbGxoU0ZwWFlrWktSRmw2U2xkak1WSnpZVVUxVjJGNlZuWldWM0JIVXpGT1YxWnVUbUZUUlRWV1ZtMTBWMDB4YTNkVmJHUllVakJ3U1ZsVldrTldWbHAwVld0NFZrMVdjRmhhUm1SUFVtMU9TR0ZHYUZOTlZXOTZWbXBHYTAxSFJYaFhXR3hXWWtkU2NGUlVUa05XTVd4elZXNU9WRTFYZUZoWlZXUXdZV3hLZEdWR1pGaGhNWEJ5V1d0YVdtUXlTa1ZVYkdSWFpXeGFSVmRXVWt0U01WcDBVMnRzYWxKc1NsaGFWM1JoVFd4a1dHUkhkRlZOYkVwSFZERmFZV0ZzU1hsbFNFSlhZbFJXUTFwV1dtRlhSMUpJWkVkd1RsSkZXalZYVjNSdlVUSkZkMDFZVW14VFJVcGhXV3RhWVdGR1VsWlhiWFJxVFZaS2VWa3daSGRVYkVsNldqTmtWMkpIVGpSVWEyUkhZMnN4V1ZOck9WZFNiSEJvVm0wd2VHSXhTa2RWYkZwaFVsZFNXVlZzVW5OWGJGcDBaRWhrYUZKdFVrbFdWelZyVjBaYWMxZHVTbGRoYTNCWVZqQmFUMWRXY0VkYVIyaG9UVEJLZGxadE1ERmtNVnAwVlZob2FFMHpRbkJWYkdoRFkxWlNWbHBFVWs1U2JYaFhWMnRTVTJGSFNsWmpSbHBhWVRGd1dGWXdaRXRUUjBaR1pVWndUbEp1UVhwV2FrWmhWVEZrU0ZOcldrNVdhM0JQVlRCV1NtVldXbkZUYWxKcFRWVXhOVlpYTlU5V01XUkpVV3hrV21KWWFETlpNVnB6WXpGd1JWVnRjRTVXTTFFeVYxZDBWMlF5Um5KTlZXaHNVa1ZhV0ZadWNFSk5WbXhWVW0xR1QySkZjREZWVjNoM1lWWmFSbGRyYkZoV1JVcHlWWHBHUzFJeFVuTmlSbFpvVFRCS2QxWnRlR0ZrTWxaWFYxaHNhMUp0VWxaVVYzTjRUa1pzY2xkdVRsZFdNSEF4VlZkME1GZHNXblJoU0VwYVRVWndjbFpxU2tkU01WSnlUbFpPVGxKR1dYcFdiRkpIWWpGUmVGUnVVbFJpYTNCVldXeFNjMkZHVm5OYVJrNXJWbTE0V0ZadGNGTlZNVXB5VGxSQ1lWWlhVVEJXYTFwTFkyMU9TV05HYUZkbGEwWTBWbXRTUzFReFRrZFViR3hwVWxSc1ZGUlhOVzlVTVZwWFZXdE9hMDFyYkRSWlZFNXJZVVpLVms1WVFsWmhhMG96VkZWYVlWWXhjRWxVYkZaWFlURlplbGRVUW05WlZteFhVMnhvVldGc1NtRmFWM1JMWld4cmQxcEdTbXhXTUhCSlZXMTRiMVV5U25KVGFscFhUVmRPTTFSV1dsWmxWbHAxVTIxc1ZGSlZjSGxXUm1ONFRrZEplRmRZWkZoaE0xSnhWRlprTkdWc2JGWldWRVpvVW14d1dsbFZWbGRXYXpGeFZtcE9XRlpzY0hKVmJURlBVMVp3UjJGSGJGTk5iV2hSVmpGYVlWWXdOVWRUYTJSVllteGFjVlZxVGxOV1JuQllUVlJPVGxadFVsaFdNakV3VmpBeGMxZHViRnBoTW1oRVdWUkJlR1JIVmtsUmJGWlhUVEJLVlZkVVFtRlZNVXB6Vlc1S2ExSXphSEJWTUZaTFdWWmFjMXBJWkZOTmExcDZWVEo0YzJGR1RraFZiVVpoVmpOTmVGWnJXbk5qYkhCR1pFZDBVMkpJUVhoWFYzUnJaREpLUjFkc2FHeFNSbkJYVkZaa1QwNUdWbkZUYXpsWFRXdHdTRmxyWkVkVWJVcFpZVVU1VjFac1NrUmFSekZYVWpKRmVtSkZOVmRTVkZaMlZtMTRiMkl4U2xkV1dHeE9Wa1ZLYjFac1VrZGxSbHAwVGxVNVYxSnNiRFZhUkU1M1YyeGFkRlZyYUZkTlJsVjRWakZhUjJSSFVrZFRhelZUVFRKamVWWnNVa2RoYXpGWFZWaHNWRmRIYUhCVmJURTBWbFpzYzJGSE9XaFNiRnBXVlZjMWEyRkZNVmRUYTJSWFVqTlJkMWxVUmt0a1IxWkhZMFphVjJWc1dubFhWbFpoV1ZVMWMxZHVWbGRpU0VKUFZGYzFiMVJHV2toTlZFSnFUV3MxZWxVeU5VdFdSMHBHWTBab1YySkdjR2hVYlhoaFYwZE9SbFJzVGs1V1ZuQTJWbXRrTkZsV1ZYaGFSVnBQVm0xU1ZsWnNXbUZoUmxaVlVtMUdhMVl3Y0VaV1YzaHZWVEpGZUdOR2FGaFdNMUp5VkZWYVUxWXhUblZUYkdob1RVUldXRlp0TVRSa01WWkhWbTVLVjJGc1NsUlphMmhEVWpGVmVXVkZkRmROYTFreVZtMTBZVll4U2xkWGJHaGFWa1ZhU0ZwRldrOVhWbkJIVjIxc2FFMVlRbFZXTVZwaFlqSkplRlpZYUZkaVIxSllXVlJLVTFkR1ZuUmtSbkJPVm01Q1YxWnRNRFZXYlVwSFkwWmtWMDFxVm5KV2JYaGFaV3hXY2s5V2NHeGhNWEJNVjJ0U1IxTXlUbk5XYmxKc1VqSm9UMVV3Vmt0U1ZscHlWbXhrVjAxV2JEUlZiVFZQVlRKS1IyTkdhRnBXUlZwTVZrZDRWMk5XVG5OVWJFNVRZa1p3V1ZadE1YcE9WbFYzVFZWc2FGSlhVbUZaVkVaaFZFWmFXR1ZIUmxoU01WcEhWbTE0VjFVeFduTmpTR3hYVm0xUk1GVnFSbHBsUjA1R1YyMUdVMVpGV2xWV2JURTBaREZLUjFkc1pGaGlSMUpZVkZaVk1WSXhjRlpXYlRsWFZqQldNMWt3V2s5V01rWnlVbGhvVm1KR2NGUlZiWGhyWTJzNVYxTnRiRk5XYmtKYVZtMTBZV0l4VVhoV1dHUk9WbFp3V1ZsVVFURldNV3hZWkVWMFUwMVhkekpWYlhoclZqSktSbU5JYkZkV00wMTRWa2Q0UzFaV1duSlhiR1JUVm14d1dWZFdVa2RTTWsxNFUyNU9XR0pIVWxsVmJGSlhaR3hhUjFac1pHdE5WVlkwVm0xNGExbFdTa1pUYkU1VlZteGFZVlJXV25kV2JHUjFXa1phYVZKdVFsaFdha2w0VWpGYVYxTnNaR3BTYldoWFZtcE9iMUl4Y0ZkYVJXUlRZa1phZWxaSGVFdFVhekYwWVVWc1YySkdjR2hXYWtaS1pVWk9kVlJzVW1sU2EzQjZWbGQ0VTFZeFZYaFhiazVYWWxWYVZsUldXbUZsVmxwSVkwWk9XRkl3Y0VkV01uaHJWbTFLV1dGRVRsZFNiSEJNV1hwR2EyTnNVbk5YYkdSVFZrWmFSbFpzV2xOU01VMTRVMnRvVjJFeGNGbFphMVozVjBaYWMxZHVaRlJTYkhCV1ZWZHpOVlF4U25KT1ZXaFdZbGhvYUZaVVNrdFNNazVIVm14a1YxSlVWakpXTVZwaFZqRlplRmR1U21GU2JXaHZWRlJLYjFOV1dsaE5WRUpVVFd0d1NGVXllR3RXUmxwR1kwWmtWMkZyTlZSV2FrWnpUbXhLYzFwR1pHbFNXRUkxVmxSS05GbFdXWGhYYkZaVFlXeHdXRlpyVm1GWFJsWnhVbXRrYWsxV1NucFhhMlJIVkdzeFJWWnNWbGRpV0doWVYxWmFTMVl4WkZsaVIyeFRVbXR3VjFaWE1UQlpWbGw0Vm01U2ExSkdTbFpXYlhSM1YxWmFXR1JGT1ZkaVJuQjZWakkxZDFZd01YVlZWRUpXWWxob00xVnRlRTlqTVU1eldrWmtUazFWYTNsV2JYaHJUa1paZUZOWWFGTmlhelZWVmpCa1UxWkdXWGRXVkVaWFVteHdlbFp0TVVkVmF6RlhWbXBTVjAxcVZtaFpWM040Vm0xT1IxcEdXbWxYUmtwTlZtMTBWbVZIVG5OWGJsWnFVbXh3YzFsVVFuZFRWbHBYV2tSU1ZXSldSalJXVjNoelZsZEtSMk5HYUZkaVJuQXpWV3RhWVdNeFpITmFSbFpwVmxSRk1GWnNXbTloTVZWNVVsaGthbEp0VWxoWmEyUlRZMnh3V0dWR1dteFNiSEI1VjJ0YVMyRldTbFZWV0doWVlrWmFXRlpVUmxkak1XUnpWMnM1V0ZORlNsaFhWbEpDVFVVeFIxWllaRmhoTWxKWVdXdFdkMlZXYTNkWGJFNVhZWHBDTlZsVlZuZFdNVnB6WTBab1ZtRnJXbWhaZWtaclkyeFdkR1ZHVGxkaWEwcFZWbTB4TkZZeGJGZFRXR2hXWVRGd1dWbFljSE5WTVd4eVZteGtUMUp0ZEROV01qRkhWbFphY21OR2FGZE5ibEpRVm0xNFlXUkdWbk5SYkdSb1lUQnJkMVpYTVRSWlYwNXpWRzVPVkdKSFVsaFphMXAyVFd4YWRHVkdUbEpOVld3MFZUSjBiMVV5UlhoalJsWmFZVEpTZGxaSGVGZGpNV1IwVW14S1RsWnNjRmxXYlhoVFZqRmtSMWRzYkdoU1YxSllXV3hvVTFSR1dsaGxSMFpYVFZad01Wa3dXbXRXTWtwSFkwVnNWMVl6VW1oWFZscEtaVlpLV1dOR1ZtbFNWRlpaVm0xNFlXUXhTa2RYV0doV1lUSlNjbGxzVlhoT1JsVjVaVWRHVmsxclZqTlpNRnBUVmpGYVJrNVlXbGRXYkhCWVZtcEdZV05yT1ZoaVJUVlhWbTA1TTFac1pEUmlNVkY0Vmxob1dHSkdjRmxaVkVFeFYwWlNWMXBHVGxSTlYzY3lWVzEwTUZZeVNrWmpTR3hXVFc1b1VGWnRjM2RsVjBaSFUyeGtWMkpJUWxsV2ExSkxVbTFXU0ZOclZsZGlXR2hVVm0wMVExWkdXblJsUm1SYVZqQnNORmRyYUV0V1YwWnpVMnhTV21FeFdtaFdha1pYWkVkU1NGSnNWbGRoTTBKWFYxZDBWMVF4V25OWGExcHFVakpvWVZsVVJscE5SbFowWlVkR2FtSkZOWHBWTW5oclZHeEtSMWRZWkZkaE1WcFlWbXBHV21WR1NuVlViRTVwVW01Q1dWWnFRbFpOVmxwelZXeGFWMkpWV2xSV2JURTBWakZhZEdSRVFtaFdNSEJIVmpJMWExbFdXbGRYYldoWFZqTm9hRlp0ZUd0a1JrcHpZMFprVjJKSVFrMVdNV2gzVWpGTmVGZHVUbFJpYTNCVldXdFZNVll4VWxWVGJUbFhVbXh3V0ZZeWVHdFViRWwzVFZSU1ZtSlVWa3hXVkVaclVtczFWMVZzVmxkV2JIQnZWbFpTUjFZeVRYaGFTRXBQVmpOQ1QxWnNaRE5sYkZwWVRWUkNWRTFXY0hsVVZscGhWakpLZFZGc2FGZGhNVnBNVlRCYVYxZEhWa2RhUlRsWFRWWndTVmRVUW1GVE1WbDRWMWhvVkZkSVFsaFdiVEZQVGtad1JWSnJXbXROYkZwSFZqSjRhMkZGTVVsUmJGSlhZbGhvYUZkV1dscGxSbFp5VjJ4a2FWZEdTbFJYVjNSWFdWWmtWMVp1VW14U1ZUVldWbTEwZDJWV1VuTldhemxYWWtad2Vsa3dWVFZYYlZaeVkwVm9WMkpZYUZCWk1uaFBZekZPY2s1Vk5XbFdNbWhIVm1wR1lXRXdNVWRVYmxKVlYwZG9WVmxyV25kV1JteFZVVzVrVjFKc2NIaFZNbmhQVlRGS2MxTnJaRmRpVkVWM1ZsY3hTMUpzWkhOaFJtaG9UVlp3YjFacldtRlRNV1JYVm01S1ZXSkdjRmhaYTFwMlRXeGtXV05GWkZaTlZuQjZWVEkxUzFaSFNrZFhhemxWVmtWS1RGVnNXbUZTYkZweldrWmtUbFpXY0RaV1Z6RTBXVmRGZUZOWWJHaFNWRlpYV1d0a2IxWkdWbFZTYkdSWFRWWndlRlZYZUU5Vk1XUklZVVZzVjFaNlJYZFZla1pYWXpGa2RWTnNhR2hOYldoWFZsZDRZVmxYVG5OV2JHaHNVbGRTV0ZscmFFTlRSbXhXVmxob1ZrMXJjRWhaTUZaVFZqRmFjMk5IYUZkaGExcFFWVzB4VjFKc1pIUmtSazVYVjBWS1ZWWnRNVFJWTWtsNVZtNU9WMWRIYUZoWlZFcFRWVEZzY2xkcmRGZGlSbG93V2tWVk5WWldXbkpqUm1oWFRXNVNVRlp0ZUdGak1XUlpXa1p3VjFac2EzZFdWekI0VlRGS2MxUnVUbFJpUjFKWlZXMTBkMUl4V25KV2JHUmFWbXRzTkZWdE5VOVZNa3BJVld4U1dsWkZjRlJXUjNoWFl6RndSMVJzU2s1V2JIQlpWbTB3ZUUxR1pFZFRiR3hvVWxkb1dGbHNhRk5VUmxwWVpVZEdhazFYVW5sYVJWcFhWVEZhZFZGdWJGZFdiVkV3VlcweFYyTXhTblZUYldoVFRUQktWVlp0ZUd0T1JUVnpWMnhvYkZKdFVsUlVWbFpoWld4VmVXVkhkRmRXYlZKSFZHeGFVMVpXV2xkWGJXaFdWa1ZhYUZac1drdGtWazUwWTBVMVYyRXhiRFpXYkdONFRVWk5lRmRzV2s1V1YzaG9WVEJvUTFZeGJGaGtSWFJVVW14YU1GUldWakJWTWtwR1RsUkNWVTFXY0V4WlZWcHJVMGRHUm1GR1pGZGlTRUpaVmxkd1IxTXlUWGhqUldSV1lsaG9WRlpxU205V1JscDBaVVprV2xZd2JEUldNalZQVmxkR2MxTnNXbFppV0ZKb1ZtcEdWMlJIVWtWVmJGWk9Va1ZhU0ZkWGRHOWtNVnAwVTJ0a1dHRXlhRmRXYWs1dlZERndWMWRyZEZoV2JFcDZWbGR6TVZVeFduVlJhMVpYWWtkb00xVlVSbE5rUmxKWllVWmthVkp1UWxWWFZsSkRaREZaZUZkdVRsaGlhelZ6V1d0YVlXVkdWbGhrUjNSV1lsVndSMWxyVWs5V1ZURklZVVpDVjAxdWFHaFdiWGhyWTJ4YWRGSnNaRTVOVlhCU1ZtcEdZVll3TlVkVGJrNVlZbXR3VlZsclZuZFhSbHAwWlVoa2FGSnNjRWRXYlhocllVVXhWbGR1Y0ZaaVdHaDJWbFJLUm1WdFJrWk9WbHBwVjBVeE5GWldVa2RXTVZsNFdraEtUMVl6UWs5WlZFb3paV3hhVlZOcVFsUk5WbHA1VkZWb2MyRkdTbGRUYlVaWFlXczFWRlY2Um5OT2JFcHlaRVprYVZKWVFqVldWRW8wVkRGWmVWTnJaRmhoYkhCWVZtcE9RMUpHVm5GU2EyUnFUV3R3U0ZkclduZFVhekZGVm14a1YxSnNXbGhYVmxwR1pVWmtjbFpzVG1sU1dFSjRWa1phVjJNd01IaFdibEpyVWpCYWIxWnRkSGRXTVd0M1ZXdGtWMkpHYkRWYVNIQkRWbTFLV1dGRmFGZGlXR2hNV1RJeFYxSXlUa2RYYXpWT1lsZG9VRlp0ZUdGWlZsbDRVMWhvVm1FeVVsUlpWM2hoWXpGV2RHUklaRlpOVm5CNlZtMHhSMVpyTVZkWGFrSmFZVEZLVkZacldrdGpiR1J6V2taYWFWZEdTakpYVmxaV1pVWktkRk5yYkdwU2JWSlVWV3hXZDFOV1dsZGFSRkpXWWxaR05GWlhlSE5XVjBwSFYyeG9WMkpHY0ROVmExcGhZMnhrY2s5Vk9WTmlSWEJKVmxjeE5GbFdXbGhUYmxKc1VtczFWbFpyVm5ka2JGWnlWMnhPVTJKR2NIcFhhMXBMWVZaS1YyTkdhRmRpVkVJMFdXcEdVMVl4VG5OaFJscG9UVVJXV0ZadE1UUmtNbFp6VjI1S1YyRnNTbFJaYkZwTFVqRlZlV1ZGZEZkTlYxSkhWRlpTWVZZeFduUlZibkJWWVRGd1RGbDZSa3RqTVdSelZHMW9UazF0YUc5V2JYaFRWREpKZUZWc1pGZGlSMUpZV1ZSS1UxWnNWblJrUm5CT1ZtNUNWMVl5ZERCV2JVcEhZMFprVjAxdWFGQldiVEZMVjBkU05sRnNXazVTYmtKSlZtMHhORk15VG5SU2EyaG9VbFJXVkZacVRtNU5iRnAwWkVaT1VrMVZiRFJWYlRWUFZteGtTRlZzV2xkTlJsVjRWbTE0WVdNeFduUlNiRXBPVm01Q1NWWnJaSGRWTVZwSFUyNUtXR0pIVWxkWmJHaFRaR3haZVUxVlpGaFdNRnBIVkRGYVlWWXlTa2RqUmtaWFVqTlNhRlY2UmtwbFIwbDZZMFpXYVZKVVZsbFdiWGhoWkRGS1IxZHNhR3hTTTFKVVdXeFZlRTVHVlhoaFIzUldUV3RXTTFrd1duTldNa3BJVlZoa1lWWXphR2hXYkZwSFkyeHdSMU50YkZOaVIzUTBWako0VjJJeGJGZFdibEpUVjBkU1dWbFVSbUZoUmxaeFZHeE9WVkp0ZERSV01uUnJZV3hKZUZkclpGZE5ibWhNVm1wR1lWWXlUa1poUm1ScFYwZG9VVlpIZEdGVU1VbDRVMjVPV0dKRk5YQldha3B2VjFaa2MxZHRPV2xOVmxwWVZtMTRhMVl5UlhsVmJHUldZbGhvYUZwRVJuZFdiRnAxV2taYWFWSnVRbHBXYkdSM1VqRmFjMWRxV2xkaE1VcFhWbXRXU2sxR1ZuUmxSMFpxWWtVMWVsVXllR3RYUmtweVkwUktWMkV4V2xoV2FrRjRVakZLZFZSc1RtbFNia0o1VmxkNFlWTXhVbk5XYmxKclVqQmFVMVJXV21GWFJsbDVaRWQwVmsxRVJrcFpWVlpyVjBkRmVGZHJlRmRXTTJob1ZqQmFWMk5XVG5OWGJHUk9ZbTFPTTFadGVGZFpWa2w0VjI1T1ZHSnJOVk5aYTFVeFZURlNWVk50T1ZaU2JIQllWako0YTFVd01WZFRibXhoVmxaYWFGbFVSa3RXYlU1SFZHeFdWMUpWYjNwV1YzaGhaREZhYzFkdVNtcFNNMEpQVm14b1ExZEdXbGhOVkVKVVRWWldORll4YUd0VWJHUkpVV3hrV2xZelVreFZNRnBYVjBkV1NHUkdaRTVXV0VKaFZtdGtORlV4VW5OVGJHUnFVbFpLV0ZaclZURk5NV3hWVW10YWEwMXNXa2RXTW5ocllVVXhTVkZzVWxkaVdHaDJWbFJLU21WR1ZuSlhiR1JvWVRCd1ZGZFhkRmRaVmxsNFkwVmFWMkpGTlZaV2JYUjNaVlpaZVdSRk9WZGlSbkI2V1RCV2IxWnRSbkpUVkVKV1lsaG9NMVZ0ZUU5ak1VNXpXa1prVGxaWGR6RldiWGhoWVRKTmQwNVZaRmRoTWxKVVdXdGFkMVpHYkhKV2EzUlhVbXhhVmxaSE1EVldWVEZYVjJ4b1YySllVbkpXYkdSR1pXMUdSbHBHYUdoTlZuQk5WbXhrTkZsV1pFZFdibFpTWWtaYVZGWnRlRnBOUmxwWFdrUlNVMkpXV2pCVmJYUmhWakpLU0dGR1RsVldSWEIyVlRCYVlWWXhaSE5hUms1T1ZsaENObGRYZEZOV01rcEhVMnhvYUZKck5WaFphMXBoWVVaa1YxZHNaR3RXTUhCR1ZsZDRhMVV5UlhoalJtaFhWbnBGTUZaVVJsTldNVTV4VjIxc1UxWnJjRmhXYlRFMFdWWldSMVZzYUd4U1YxSnlWV3BCTVZJeFdraGpNMmhXVFZad2Vsa3dWbE5XTVZwelkwWm9WMkZyV21oWk1qRlhVbXhrZEZKc1RsZFhSVXBWVm0weGQxRXhiRmRhUm1SV1lURndXRlpyV21GVk1XeHlWbTFHVjAxV1JqUldNblJyVmxaYWNtTkdiR0ZXVmxwUVZtMHhSMk50UlhwaFJscFhVbGhDVVZkVVNqUlVNV1JYVlc1T1ZXSkhVbGhXYlRWRFVsWmFjMkZJWkZSTlZYQXdWa1pvYjFaV1pFaFZiRkphVmtWS00xWnNXbE5XYkZwWllVZDRhVkp1UWxsV2JURXdZVEZXZEZOclpGaGlSMUpZVkZaa2IxVkdXbFZSV0doVFlrZFNlVlpIZUdGaFIwWTJWbXRzVjFac1NrUlVhMXBLWlVaT2RWTnNVbWxTV0VKWlYxWlNSMlF4VGxkWGExcFhZa1p3YzFWdGRHRmxiRlowWlVkR1ZXSkZOVWRVYkZwWFZsWmFWMWR0YUZaaVJuQXpWVzE0WVdOck9WWlBWazVvVFZoQmVsWXllRmRXTVd4WFZtNU9XR0pHY0ZsWlZFcFRWMVpzY2xaVVFrNVNiRll6VmpKMGExWXlTa1pqUkVKYVZsWndXRmxyV210VFIwWkdUbFprVjJKSVFsbFdWM0JIVlRGS2NrNVZiR0ZTYkVwWlZXeFNWMVpXV25SbFJtUmFWbXRXTkZadGNHRldSMFY0WTBoR1ZWWnNWalJVVkVaWFpFZFNSbVJHWkZOV1JWcElWa1phYjJReFdYaFhiazVZWVRKb1YxWnFUbTlYUmxwMFpVZDBXRlpzU25wV1IzTXhWVEZhZFZGclZsZGlSMUl6VmtSR1NtVkdTbGxhUjNoVFZqRktWVmRXVWtOa01WVjRWMjVTYTFJd1dsVlZiWGhMVWpGYWMyRkhPVlppVlhCSFZqSjRhMVpXV2xoaFJrSlhWa1ZHTkZWdGVHdGpiRkp6VjIxb2FFMHdTazFXTVdoM1VqRlZlRmR1VGxSaWEzQlhXVmh3VjFkR1duUmtTR1JhVm14d1IxWnRlR3RXTURGV1YyNXdWbUpZYUdoV2FrcExWMWRHUms1V1dtbFNNVXBWVmxaU1IxWXhXWGhqUlZwaFVtczFiMVJVU205VFZscHlXa1JDVkUxV1ducFdNalZMVkd4a1NWRnRSbHBXTTFKTVZrVmFWMWRIVmtaWGJYaHBWbFp3U0ZaclkzaGlNa1pHVFZWb2JGSkdjRmhXYWs1dlYwWldjVkpyWkdwTlZUVjZWMnRhYTFkR1NsVldiRlpYVW14YVdGZFdXa1psUm5CSFdrWm9hVmRGU25oV1JscGhVakF3ZUZadVVtdFNXRkpZVm14U1IxSnNXbGhPV0dSWFlYcEdXRll5ZEc5V2F6RklWV3hTV2sxdWFGQmFSVlY0Vm1zeFYxUnNaR2xUUlVwR1ZtMTRZVmxXV1hoWFdHaGhVbFp3YzFWc1duZGhSbFp6Vm01a1ZrMVdjSHBXVjNSclYwWmFjMU5yWkZkaVdFSkVWbGN4UzFKc1pITmFSbkJPVFRCS1VWWnNZM2hTTVdSWVVtdGFZVkpzY0ZoWmExcDNVMVphY2xadFJtcE5WbkJKVm0xMFlXSkdTbkpqUm1oWFlrWndNMVpIZUdGV01rWkpWR3M1VTJKR2NEWldWekUwV1ZaVmVWTnJXbXBTYkVwaFZtMHhiMlJzVlhoWGJHUlhUVlp3ZVZkcldsTlZNa3BHWTBaYVdHSkdXbGRVVmxwWFl6RmtjMWRyT1ZoVFJVcFlWbTEwVjFsWFVsZGlSRnBUWVROU1dGbHJWbmRsVmxWNVpVVTVWMDFyY0VoV01uQmhWakZaZWxGclVsWmhhMXBJV1hwS1MxSXhjRWRqUlRWT1VrWmFXRlpyV2xkV01XeFhVbGhvV0dFeFdsUlphMmhEWTFaU1YxWnVUazVOVmxvd1drVmFUMkZGTVZaalJtUmFUVVp3TTFac1drdFdNV1J6WVVaYVYwMHlhRWxXYlRFMFdWZE5lRlp1U2s1V2F6VllWRlpXZDFKV1duTlhiVVphVm14R05GZHJhRXRpUmtwWFkwWkdWMkpHV2pOV1ZFWmhZekZXZFZSc2FHbFNhM0JJVm0wd2VFMUdWblJUYTFwWFlXeGFhRlpzV21GVlJscHhVMnRrV0ZZd1drZFhhMXBoVmpKS1IyTkZiRmRXZWtWM1ZHdGFUMVl4Vm5WVGJGWnBVbGhDV1ZadGVHRmthekZ6VjJ4a1dtVnJXbFJVVmxaWFRURndWbFp0UmxaU2JIQlhXVEJhVDFZeVNrZFRibkJhVmxad1ZGVnRlR0ZrUjFKSFUyMXNVMWRGU2xkV2ExSkhWakZSZUZkWWFGTlhTRUp2Vld4a1UxWXhXblJsUjBaVVVteGFNRnBWV210VU1WbDRWMnRrV2xaV2NFeFdha1poVmpKT1IxZHNhRmRpUlhCRlZsUkplRlJ0VmtkVWJHeGhVbXMxYjFSVmFFTldWbVJ6VjIwNWFVMVdWalJXYlhoclZqSkZlVlZzYUZaaGEwcG9XbFphWVZJeVJrWlBWbVJUWWtoQ1dGWnFTVEZTTVd4WFYxaHdWbUV6VW1GYVYzUmhWMFphZEdWRmRHcGlSVFY2VmpKek1XRlhTa1pqUldSWFlURmFXRlpxUVhoU01VcDFWR3hXYVZJeFNsWldiWFJYV1ZaVmVHSkdaR2hTZW14VVZGWmFZVmRHV25Sa1IzUldUV3RXTmxsVlZuTldiVXBaVld0NFYxWXphR0ZhUkVaaFkxWmFjMWRzWkU1aWJVNHpWbXhTUTFsV1NYaFhiazVVWW10d2IxVnNVa2RXUm14VlVtNWtVMUpzY0ZoV01qRkhWbGRLVmsxVVVsZGlSMmh5VmxSS1JtUXlUa2RhUmxaWFpXdGFNbFpYZUdGVk1VcHpWMjVTYTFKcmNIQlZiRnBhVFZaYVNHVkdaRlpOVmxwNlZteG9kMkZHU2xoVmJHUlhZbGhvYUZVd1dsZGtSMVpHV2tVNVYwMVdjRXBXUjNoaFV6SkdSazFWWkdwU1YyaFlWbTV3UjJWc1VuSlhiRTVUVFZWd2VsWXllRTloUlRCNVlVVTVWMVl6YUhKV1ZFWkdaVVphYzFwR1pHbGhlbFpaVmxkNGIySXhTWGhhU0VwWFlUTlNWMWxyV25kWFZuQkdZVWhrVjJKVmNFaFdNblJ2Vm14WmVtRkZkR0ZTUlZwTVZqRmFVMk14VW5OYVJtUlhZbXRLUmxadGVGTlNNVkYzVGxWa1ZHSnJOVlJaYTFwM1ZrWnNWVk50T1ZaTlZuQldWa2N3TlZaRk1WZFhiR2hYWWxoTk1WWkhlRXRqYkdSMVlrZEdVMUpVVmxGV2JGSkhXVlphYzFwSVNsVmlSbkJ3VlcxMGQySXhXbGRWYTA1UFVtdHdlVlJXV21GV1IwcEdZMFU1Vm1KWVVqTlZiWGhoVW14YWMxcEhjRTVXVm5BMlZsY3hORmxYUlhoVGJGcHFVbFJXVjFSVldtRmhSbFY0VjJ4a1YwMVdjSHBYYTFwWFZqSkZlR0V6YUZoaVJscFlWR3RhVjJNeFpITlhiR2hvWld0YWIxWlhjRTlWTVZGNFlrUmFVMkY2Vm5KVVZsWjNUVVpTYzFkcmRHaFdhM0I1VmpKd1lWWXlTa2RqUm1oV1lXdGFTRmw2Um1GWFYwNUlVbXhPVjJFelFsQldiR1EwWWpGVmVGSllhRmRpUmxwVVdWUk9VMVpXVWxaaFJ6bFRUVmQ0ZVZadGREQldiRXB6WTBab1drMUdXbWhXYkZwTFZqRmtkVk5zV2xkTk1taEpWbTB3ZUZNeFNuUldhMXBPVm1zMVdWVnRkSGRTVmxsNFYyeE9VazFyVmpSV1JtaHJZa1pLVjJOR1JsZGlSbG96Vm10YWMxWldSblJTYkVwT1ZtdHdTRlp0TUhoTlJsWjBVMnRhV0dKSFVsWlVWbHBoVjBaYVIxZHJkRmhXYkZwNVZrZDRZVll5U2tkV1dHaFhWbTFSZDFScldrdGpNV1IxVTJ4U2FWSlVWbGxYVmxKRFpERktjMWRyV2xkaVIxSnhWRlpXWVdWc1ZYaGhSemxYVW0xU1NWbFZXazlaVmxwMFlVaGFWMkpHY0ZoV2FrWmhZMnh3UjFkdGJGZGlTRUpaVm0xMFlXRXlUWGhWYkdSVFYwZFNjVlV3V2t0WlZscDBUVlpLVGxKdGVIbFdiVFZQWVd4WmQySkVWbHBoTVhBelZtcEJkMlZYUmtWWGJHUlRWakEwZWxkc1ZtdFVNVTVIVkc1V1VtRjZiRmxWYkZwM1pVWmtjMWRzWkdwTmJGcDZWa2Q0YjFReFdsVmlTRXBhWWtad1RGWXllRlpsVlRGWldrWndWMkpXU2toV1IzaFhWakZrZEZKdVNtaE5NbWhXVm14YWQwMHhXWGRXVkVaWFZtdGFlVmt3Wkc5aFYwVjNZMGhrVjFaRlduRlVWbHB6VjBaS2NtRkdWbWxoTUhCVVYxWlNTMDVIUmtkWFdHUlhZbTFTVDFscldtRlhSbXhXVm1zNWFHSkZjSGxWTW5oelZqQXhkVkZyYUZwV2JWSk1WbTF6TVZOV2NFZGpSbVJwVmxSQ05GWXlkR0ZXTURGSFUydG9WR0V4V21oVmFrSmhZMFpzY2xkdVdteFNiR3cwVmxkek5WWnJNWEpPVld4V1RWZG9lbFpFUmtwbFZsWjBZVVprVjFKWVFqSlhXSEJIVkcxV1NGSnJWbEppVjNoWVZGWldkMWRzV2tobFIzUnJUV3RXTkZVeGFITmlSa3BHWTBkR1dtSkhVVEJWYTFwVFZteGFjVkZzVWxOaVNFSmhWbFpqZUU1R1VuUlRhMlJZVjBkb1dWWnJWa3RrYkZZMlUydDBWRkpzV2pGV1YzaHJZVmRLUjJOSWJGZFdNMmhvVlhwS1RtVkdjRWxWYXpWWFZqRktVRlp0Y0VOa01VNXpWMnhrV21Wc1dsWlZiWGgzVTJ4YVYyRklUbGhTYkhBd1dWVldNRmRIUm5KalJsSldZa1pXTkZZd1pGZFNhekZZWWtaa1YxSnJhM2RXYWtaVFUyc3hWMVJZYkZSaE1taFZXVzE0WVZZeGJISlhiVVphVm14c00xWnROV3RoTVZwMFZXNXdXbFpXY0V4WlZFWmhaRWRTUlZac2NGZFdNbWhGVjFaYVlWTnRWa2RVYmtaWFlrZG9jRlZxUVhoT1JsbDRXa2h3YkZKc2JETlVWbFp6VmpKS1NWRnJPVnBpUjFKMlZGUkdhMWRIVWtoa1JscE9Za1p3V1ZkVVFtRmlNVkY0VTJ0b1ZtRXphRmRXYTFaM1pGWndSVkp1VGxkaVNFSktWa2N4TkdGRk1IaFRiRnBYVWpOb1ZGVlVTa2RXYXpGWlZXeGFhV0pHY0doWFZsSkxWVEZrUjFadVNtRlNXRkpWVlcxMGQwMVdhM2RhU0dScFVteHNOVmxWYUVkV2F6RllWR3BTVm1GcmNFaGFSVnBYWTIxR1NHSkdUbE5YUlVwMlZtMHdkMDFYUlhsVWEyUlZWMGRvVmxsWGN6RmlNVkpXWVVaT1ZHSkdjRmhaVlZaUFZsWlpkMk5JY0ZaTmJrSk1WakJrUjJOdFRrbFRiSEJzWVRGdmVsWnRNVFJWTWxKWFZXNU9hbEp0YUZSV2ExcFdaVlphV1dORlRscFdWRUkxVlcxNGIxWldaRWhsUnpsV1RVWndNMWt5ZUZOV01rWklaRWR3VTJGNlJUQldhMlIzVkRKR1JrMVZiRlpoTTBKWFZGWmtiMUpHV2tkYVJYUnFUVlUxZUZVeWVHOWhSMFY2VVc1c1dGZElRa2hhUkVaaFl6RldkVlpzVm1sVFJVcGFWbGQ0VTFack1YTldhbHBTWWxWYVQxUlhkR0ZYUm14eVYyMDVWMVl3V25sVk1qQTFWakF4UjJORVRscGxhMXB5VlcxNFUyTnRUa2hqUms1T1YwVktZVlp0ZEdwTlZteFlVbXhvVkdKcmNGQldhMVozV1Zac1ZWTnNUbGROV0VKSVYydFdNRlpHU2xWaVJteFZZa1paTUZaVVFYaFdNV1J4Vkd4a1ZGTkZTazFXTVZwclZUSlNSMVZ1VmxKaVYyaFVWV3hvUTJGR1duRlJiR1JxVFd0d2VsZHJXbXRXYkdSSVZXNUtWVlpXU25aVWJGcFhZekZXZEU5V2NGZGlSbXQ1Vm0wd01WTXhaRWRYYmxKb1VteEtZVlpzV2xwTlJuQkhWMnM1YTFJeFdrbFpNRlV4Vkd4YWRWRlVTbGROYmxKWVdXcEdVMlJHVm5OaFJsSm9UVzFvV1ZkWE1UUlpWMFpIVld4V1UyRXpVbkpaYTFwS1RXeFZlV1JIUm1oaVZWWTJWbFpTUjFkdFJYaFRia3BhVmtWd1RGWnRlR3RqVmxwelZXeGtWMDF0YUZGV2ExSkhWakpSZUZOcmFGTmhNbWhXV1ZST1EySXhiSFJOVnpsc1ZtMVNXRll5TURWWFIwVjZWR3BTV2xaV1dsUldhMXByVW14T2NrNVdXazVTYkhBMVZrZDRZVlF5VG5OVmJsSlFWbTVDVDFWcVRtOU9SbVJ6Vm0xMFRsSXdXa2hYYTFacllVVXdkMk5HYkZaaVJsVjRWWHBHY21ReFduRlZiRkpUVmtaYVIxZFhkRmROUmxaeVRWaFNhRk5GV2xkVVZtUlRUVEZTY2xwRmNHdE5SRVpZVm0xek5WWXdNVVZXYTNoWVZteHdjbFJWWkZkak1rcEhXa1phV0ZJeFNuWldSbFp2VlRGT1IyTkZWbFJpYXpWWFZtMXpNVkl4Vm5OaFJYUllVbXR3VjFSc1ZqQlhhekZIVjFSQ1ZrMUdjRmhXYkdSTFVtMVNSMU5yTldsV01tZzBWbXhTUjJFeVVYZE9WV2hXVjBkb1UxbHRjekZqYkZKWVRWUlNWVlpzY0ZaV1J6QTFZa2RLUjFkcmFGZFNNMmhNV1ZaVmVGZEhSa1pXYkZwT1ZtdHdNbGRXWkRSVE1VcFhWMjVTYWxKc1NsaFVWelZ2VGxaa1dXTkZkRlJOUkZaNVZGWldiMkV4U2xsaFJsSmFZbFJHVkZwRVJtRldiRnAwVDFaS2FFMHdOREJYVmxaWFZURmFSMXBGV2xSaGVsWlhWRlZhWVZJeFVuTlhhemxxWWtaS01GUXhXbmRVYkVsNllVUlNXR0pHV25aVlZFcEhWakZrV1dKR1ZsaFNXRUphVmxkNFZrMVdUWGhoTTJSWFZrWmFVRlp0ZUdGWFZsRjRXa2hrYVZKc2JEWldWbWh2VmpBeFYyTklTbGRXUlhCSFdsVmFTMWRYU2tobFJrNU9ZbGRvTkZacldsTlJiVlpJVlc1T1lWSldjRlpaVkU1VFkwWlNWMkZGVGxoaVJsWTFWR3hrUjFaV1duTmlSRkpXVFdwV2NsZFdXa3BsYkc5NlkwWndWMkpHYkROV2JYUnJWVzFXV0ZWcldteFNiRXBVVm1wT2JtVnNXbkpXYlhCc1VtdHNOVlZzYUc5aGJFcFhZMFphV21KWVRYaFhWbHBhWkRGYVZWSnJPV2xTVkVWNlZtcEtkMVF5UmtkWFdHUllZVEo0V0Zsc1VsZGxiR3hYV2taa1YxWnJjREZYYTFwM1lWWmFSbGR0T1ZoaE1sRjNWR3RhYTFJeFduVldiRXBwVjBaS2QxWlVRbXRWTWxGNFZtcGFVMkY2YkU5VVYzUlhUVEZ3UmxadVRsWmlSMUpIVlRKek1WZHRTa2RYYlVaaFVrVmFNMVZ0TVVkU2JVNUlZa1UxVjAxdGFFZFdiRkpLVFZkUmVWSnVVbFJpUm5CUVZtcE9RMVpXV25GVGFrNU9VbTE0ZVZadGNGTmhNVXB6VjJwQ1dsWlhVWGRXVkVGNFVqRmtXV0ZHYUZkU1YzY3dWbTF3UzFZeVVrZFdiazVvVWpOb1ZGVnNWbmRsUmxwSFYyMDVWazFyYkRSWGExWnJWbFphUmxkck9WWmhhMHBvVlRKNFlXUkZOVmRVYkdocFZsaENWMVp0TUhkT1ZtUnpWMjVTVmxkSVFtaFZiVEZUVlVaVmQxZHJkR3BXYTFvd1dWVmFTMVJyTVZaalNHaFhWa1ZhY2xreWMzaFdNa1Y2V2tkc1ZGSlZjSGxXVjNCUFlqRlNjMkpJVGxoaE0xSndWRlpvUTFJeFpISldiVVpvVFZac00xUnNVa05XTWtwVlZtcE9XbFpGV21GYVYzaDJaV3h3UjJOSGVHaE5WM2Q2VmpGYVYxbFhTWGhYYTFwUFZteGFVMWxzWkc5V1ZsWjBaVWhhYTAxV2JEUlhWRTVyVkd4WmQxZHJiRlppV0doMldWUkJkMlZHWkhSaFJtUk9VakZLTVZkclVrZGhNazE0WWtSYVUySllhSEJXYkZwM1YyeGFSVkp0T1ZkTlZrcElWbXhvZDFsV1RrWmpSbFpWVmxkU2RsWkVSbkprTVZweFZXMTBVMkV6UVhoV01uUnJaREZWZDAxV1pHbE5NbWhZVkZjMVUxVkdiSEZUYkVwclRXeEtTRlpYTVRCVWJVcHpVMnMxVjFZelFreFVWV1JTWlVaV2NtRkZOVmRsYlhoUVZsZHdRMlF4WkZkalJWWlVWa1phWVZadGVGcE5iRnAwVGxWMFdGSnNjREJaVlZwVFYyeGFWMWRVUW1GU2JIQlFXa1ZrVjFOSFRrWk9WVFZYWW10RmVWWnFTakJXTWtsNFZWaG9hVk5GTlhCVmJURlRWREZWZDFkdFJtaFNiRnA0VlcweFIxUXlTa2hWYkZwWFVqTlJkMWxYZUVwa01EVldZMFprVjJWc1drVlhWbHBXWlVkT1YxWnVWbUZTYkZwVVZteFNWMVpHWkZoalJYUlRUVlp3U1ZWc2FIZFdNa3BKVVd4b1ZWWnNXak5hVmxwaFZqRldjbVJGT1ZOTlJuQktWbXRhYjJReFdsZFhhbHBwVW01Q1YxWnJWa3ROTVhCSVpVZDBhazFyV2tkYVJXUXdZVVV3ZVdGR2NGZGlSMDQwVkd0a1IyTnJNVmxUYXpsWFVteHdhRlp0TUhoaU1VcEhWV3hhWVZKWFVsbFZiRkp6VjJ4YWRHVklUbFpoZWtaSldsVlNUMVl4U2xkWGJFSlhWbnBHUzFwV1dsTmtWa1owWVVVMVRsWnVRbTlXYlhCRFZqRk5kMDFJYUdGVFJUVmhXbGQwWVdJeFVsWmhSazVVVm0xNFZsWkhkRTlXVmxweVlrUlNWMkpZUWtoV01HUkdaVlpXY21GR1ZsZFdia0kyVm0xMFZrMVdaRmhUYTJoVFlrZG9WRlpyV2twTlJsbDRXa1JDYVUxV1ZqVldiVFZQVjJzd2VXVkdVbHBpUm5CTVZrZDRjMk14WkhOalIzaFhZbFpLTmxZeGFIZFNNVkp6VTFoa1QxSkZXbFpaYTJSdlVrWnNWVkpyY0d4U2JWSjRWVmQ0ZDJKSFJYaGlla3BZWVRGS1NGbHFSbUZTTVhCSFlVVTFWMWRIYUZSV1JscFhXVlV4YzFkWWJHdFNWR3h4V1d4YVMxZFdWblJrU0U1WFlsVndlbFV5TlVOV2JGcEdZMGhhV21WcldsUlZNRlY0VmpGU2RHRkdUazVXV0VKTFZteGtOR0l4V1hsU2JsSlVZa2RTV1ZsWGVIZGhSbFowVFZaS1RsSnNTbGRYYTFVeFlrWkplRk5yYkZwV1ZuQjZWbTB4VjJNeFpIVmpSbWhvVFdzME1GWnRjRXRWTVdSSFZtNUthVkpzV2xsVmJYaDNaR3hhY1ZGdFJsUk5hekUwV1d0b1QyRkdTbFZpUjBaYVYwaENTRlV3V2xOV2JVWkhXa2RvVjAxSVFsaFdha3AzVVRGa1NGTnJXazlYUjNoaFdsZDBTMDB4Vm5KYVJXUlVVakZLUjFwVldtRmlSMHBIWTBSS1YyRnJiM2RaVkVaV1pVWk9jbUZHVW1oTmJXaFZWMWN3TVZFeVRsZGpSbVJoVW5wc2IxbHJWVEZYVmxKWFdYcFdhRlpyYkROVWJGSkRWbFV4U0dGR1VsaFdiSEJMV2xWYWEyTldaSE5oUm1SVFZrWmFUbFl4VWtOaE1WRjRWR3hrVjJKc1dsTlpiR1EwVkRGc1dHVkhSbXBXYkZZMFYydG9UMkZ0U2xaTlZFNWFUVVphVkZsVldrOVRSMVpHVFZaa1dGTkZTbGxYVjNCSFkyMVJlVkpyV2xWaVYzaFVWRlZvUW1ReFduTlhiWEJQVm0xNFdGVnNhSE5oTVU1SVZXeGFWbUpIVWxSV2FrWjNVakZrZFZwR1VsTmhNMEkwVmxaa05HUXhXblJXYms1WVZrVmFXRlJYTlc5a2JGcEZVVmhvV0ZKck5YbFphMXBoWVZkS2NsTnNjRmRTYlZGM1YxWmtSbVZHVm5KaFJUbFhWa2Q0ZDFaWGNFSk5WVEZIWWtoS1lWSkdTbTlaYkZwaFZteGFkRTVYZEZwV2EzQlpWbGQ0YjFsV1NsaFZhemxoVmxkU1QxcFhlSGRTTWtwSFYyczFWMDB5WkROV2JHaDNVVEZSZUZadVVsUlhSM2hWV1ZSR1MySXhVbFZTYlVacFRWWldNMVl5ZERCVWJFcDBaVWhzVjFKNlFURlpWbHBMVjFkR1JWRnNaRmRsYTFveVYxWlNSMU50VVhoWGJrWlRZa2hDVDFsWGRHRlhWbVJ6V1ROb1ZrMVhVa2xXYlhSWFZXMUtXVkZyT1ZkTlJuQk1Xa2Q0V21ReFpISk9WVFZYVFZad05sZFVRbUZqTVZwSVUyNUtWR0pYYUZoVVZWcFhUa1pTVjFkdVRsZE5hMXBJVmtjeGMxVXdNVWxSYlVaWFlUSk9ORlY2UmxOak1VNTFVbXhLYUdFeGNHaFhWM2hUVWpGT1IyTkZXbGhpYlZKWVZXcENWMDVzV2toa1JFSldZWHBHTUZsVlVtRldiVlp5VjJzNVZWWnRVa2hWYWtwUFVtMUdSMWR0YUU1V1dFSXpWbXhrZDFFeGJGWk9XRTVvVFROQ2NGVnVjSE5aVmxKV1drUlNUbEp0ZUZkWGExSlRZVWRLVm1OR1dscFdWa3BFVmpCa1JtVldWbk5oUjBaWFRUSm9OVmRzWkRSVU1sSlhVbTVTYWxKc1NsUlpWRTVDWld4WmVGcElaRlJoZWtaWVdWUk9hMkZXVGtaVGJUbFZWa1ZGZUZaRldsZFdWazUwVDFVNVYyRjZSVEJXYTFwVFVqSkdSMU5ZWkU5V1dFSlhWbTV3UmsxR2JGZGFSWFJYVFZWd01WWXllSGRoUlRGRlZtcFdXRlpGU2xoVWExcFBVakZrYzJKR1pHbFdWbkJWVmtaV1lXTXdNSGhYV0doWVlYcFdUMVpxUm1GWFJtdDNWMjVPVjFZd1dubFdNalZEVm1zeFIyTkZlRlZpV0dob1ZHMTRUMk5zY0VoU2JFNVlVakprTkZadGRHdGtNVVY1VW14YVRsTkhVbkZWTUdSVFYxWnNjbHBIT1ZWTldFSklWMnRXYTFkR1duTlhha0poVmxkU2VsWXdXa3RXVmxwMVVXeGtVMkpHY0doWGExSkxVekZhZEZScmJGSmlWVnBQV1cxNFMxUnNXbGhPV0dScFRXeEdORlpYZEc5VWJGbzJZa1U1Vm1GclNqTldNVnAzVWxaT1ZWWnNjRmRpUm10NVZtMHdNVk14WkVkWGJsSm9VbXhLWVZac1dscE5SbkJIVjJzNWExSXhXa2xaTUZVeFZHeGFkVkZVU2xkTmJsSllXV3BHVW1WSFNrbFViV3hUWWxaS1VGWlVRbUZaVjA1WFZXeFdVMkV6VWs5WmEyUXdUbFpTVjJGRk9XaFdhMnd6Vkd0U1IxWlhTa2hoUlZKYVZrVmFTMXBWV210alZrWnpZMGQ0YUUxWE9IbFdNblJUVWpKSmVGZHJXazlXYlhoWVdXdG9RMWRHY0Zoa1IwWnNZa1paTWxWdGN6VlVhekZ5Vm1wT1lWSldXblpXVlZwUFVteE9jazVXY0dsU2JIQnZWMVJLTkdFeVRuTlhia3BRVmpOQ1QxWnFUbTlaVmxweVdYcEdhMDFXU2toVk1qVlhXVlpPUmxOdFJsZGlSMUpVVmpCYWQxWXhjRVprUlRsWFZrVmFXbGRyVm10U01XUkhVMnhXVjJKdGFGbFdhMVp6VGtac05sTnNTbXhXYkZwNVdWVmtjMVpHU25WUmJtUllWak5TZGxsVVNrOVNNVkpaWVVaV2FHRjZWblpXUmxadlZURk9jMVpZYUdoU1ZUVldWbXBDZDFZeFdYbGpSVGxZWVhwR1NWWlhlRzlaVmtwelkwUk9WbUV5VWtoVk1WcHJZMjFXUjFkck5XbGlSV3Q1Vm14U1MwMUdVWGxUV0d4V1lrWndjbFZ0ZUV0VlJscDFZMGhPYW1KR1dqRlpNRlpyWWtkS1JrMVVUbGhoTVhCb1dWUkdZV1JXUm5KaVJscHBWMFZLUlZacVNqUldNRFZ6VjI1R1YySkhhSEJWYWtwdlZWWmFSMWR0ZEZSTlZUVllWbTAxVjJGc1NuUmhSVGxhVmtWYU0xa3llR0ZTYkd0NldrVTFWMDFHY0VwV1ZFbzBZakZaZUZwRldsUmhlbFpYVm10V1lWTkdjRWhsU0Vwc1ZqQndTbFV5TVRCV01rcFpZVWRHVjFadFRYaFpWRVp6VmpGa2NWZHNaR2xoTTBKV1ZrWldhMVJ0VVhoaE0yUlhZV3hLVkZWdGVHRlhWbEY0V2toa2FWSnNiRFpXVm1odlZqQXhWMk5JV2xaV1JYQlRXbFZrVDFJeVJrWlBWbVJPVFZWd1QxWnNVa05XTWsxNVZWaG9WbUV4Y0ZaWmExWjNZMFpTVjFwSE9WTldiRlkwV1ZWYWEyRkhTbFpqUm1oWFRXNUNhRmRXV2t0a1JsWlZVV3hXVjFZeFNsRldSM2hXWlVaa1NGUnJhR2xTVkZadldXdGFXbVZzV25GU2JVWm9UV3N4TlZaWGVHdGhiRXAwWlVaV1dtSkdWWGhWZWtaelZqRndSVkZyTlZkaVZrcFpWMVpXVjFReVJYZE5WbXhTWWtkNFZsbHJaRkprTVZwR1YyczVVMkY2UmxwWGExcFhWVEZhVlZac1VsaFdNMEpNVmtSQk1WZEdTbGxqUm1ScFZqTm9VRmRXWkRSVE1ERnpWMWhrVjJGNmJGVlVWM1JoVFVaVmVXUkhPV2hXYTJ3MlZWY3dOVlpXV25SaFNFcGFUVVp3VkZWdE1VZFNNVTUwWTBaT1RsZEZTbWhXYTFwaFlXMVdTRkpZYUZoaGJIQllXVzEwWVdGR1ZuTmFSazVzWWtoQ1NWUldWakJoYkVweVYyNW9WbFl6VVRCV1YzTjRaRlpyZW1OR1drNWliRXBSVjFkd1IyTnRVWGxUYTJ4U1lYcHNXRlJYTlc5bFZscHhVVzFHVkdKV1JqUlphMmhIVmtaYVJsTnVTbFppUmtwSVZqQmFkMUpXVG5WVWJGWlRZa1pyZVZadE1YZFRNV1IwVTJ4b2JGTkdjRmxXYTFaTFpXeHdSbGRzVG10V2JFb3dXVlZhYTFSc1NrZFhWRVpYWVd0S1dGWkVSazlrUmxKWllVZHdWRkpzY0ZsWFZ6RTBXVlpzVjFWc1ZsTmhNMUp5VkZaa05HVkdWWGhWYTA1b1ZsUkdlbFV5ZEZkWGJVVjRVMjVLV2xaRldraFViWGhoWTFaU2MyTkZOV2hoTVhCYVZtdGFhMDVIVVhoYVJWcFBWbXhhVTFsclZURldSbEpYVjI1a1RsSnNiRFJXTWpBMVZqQXhjazFVVmxkV00xSlVWMVpWZDJReFRuTlNiRlpYVFRKbmVsWkdaRFJqYlZaWVUydG9VRlpVVm5CVmFrNXZXVlphVlZKdGRHaE5WMUo2VmpKMFYxVnRSbkpPVmxwaFZqTlNNMVZxUmxKa01WcFpZVVprVjAxVmNFcFhWbFpYVGtkS1IxcEZXazlXUlRWWFZGYzFVMVF4VWxkYVJXUlVVbXR3TVZaWGVFOWhSMHBHWTBVMVYxWkZTblpXVnpGWFVqSkZlbUpGTlZkU1ZGWlJWMWQwYTJJeFNsZFdXR3hPVWtaYWIxUldWVEZUUmxWNVkwVTVXR0Y2UWpaVlYzQkxXVlpKZWxWWWNHRldiSEF6VlRCa1IxTkhVa2RVYXpWWFlsaGplVlp0Y0VkWlYwbDVWRzVTVm1KSGFGVlphMlJ2Vmtac2RFMVVVbXBpUjNoNlZqSXhSMkpIU2tkVGEyeFZWbXhWTVZsVVNrdFdiVTVIVm14V1RsWnJjRTFXYTJRMFZqQTFkRk5yVmxWaVZWcFVXV3hhUzFSV1pGbGpSWFJUVFZkU1NGWlhlSE5YUjBwSlVXczVXbUpIVW5aYVIzaHJWbFpPV1dGR1RrNWhNVzkzVm14a01HSXhXWGxUYmxKc1UwVmFhRlpxVGtObGJHeHhVbTVLYTAxWVFrcFdSekYzWVZaT1JsTnRSbGhXYldneldYcEdVMk14WkhKYVJrNVlVak5vVjFadE5YZFNNVWw0Vld4V1VsWkZXbGhXYlhoTFRVWnJkMVpVVm1sU01GWTBXVEJvZDFZd01YVmhSbEpYVmpOTmVGWnRjekZYVmtweldrZHNWMDB5YUZGV01uaHFaVWRGZDA1V1pHRlRSa3BQVm14YWQxUXhVbFpWYTJSWVZteHdTRmxWYUd0WGJGcHpZa1JTV2xkSVFrUldNR1JMVjFaR2MxcEdjR2xTTVVwTVYyeGFZV0V5VWtaTlZtaHFVbFJXY0ZWdE1UTmxiRnB6Vm0xR1ZrMVZWalJaVkU1cllWWk9SMWRyT1ZaTlJscE1Wa2Q0YzJNeFpISmtSVFZwVWpObmQxWkdXbUZaVjBaV1RWWnNVbUpHV21GWlZFWkxaV3hhUmxkdGRGTldhM0F4VmxjeFIxVXlTbFpOVkZKWVZtMU9ORlpVUms5VFJrNXlZa1pvYVZZemFIWldiWGhYWkRKU2MxWnFXbEpoZW14eFZGVlNVMDVXV2xoa1JrNWFWbFJDTTFVeU5WTldNREZIWTBST1dtRnJXbmxhVm1STFVteFNkR1ZIYkZOV1dFSm9WakowVjFVeVRYaFdhMXBPVTBkU2NWVXdWVEZoUmxaeldrYzVXRkp1UWxoWGExWXdZV3hLY2xkcVJscE5SbFkwV1ZaYVdtVnNiM3BoUm1oWFlraENNbFpzWkhwT1ZsbDVVMnRrVm1KWWFGVlZNRlpMVFVaYWMxVnJkR2hOYkVZMFZsZHdZVlZ0U2xWaVNFSldZV3RGZUZSVldsSmxSbHB5WkVkb2FWSlhkekZYYTFaVFVqRmtjMWR1VWxWWFIyaGhWRlZrVTFaR1ZuSlhibHBzWWtWYWVsVlhjekZYUmtsNVdrUlNWMkV4V25aWk1uTXhVMFpLZFZOdGJGTldNMmhYVjFjeE5HUXlUbk5YV0dSWFltMVNjVlp0TVZObGJGcHpZVWM1YUZKcmJETlViRlozVm14YU5sWnJVbHBXYlZKTVZqQmFWMk14Y0VkYVJtUk9UVlZaTWxaclVrZFpWMUY0Vkd0a1ZHSnJXbE5aYTJoRFYwWlZkMVpyZEd0aVIxSldWVmN3TlZWck1YSk5WRlpXWWxob2RsWnNaRXRYUjBaSlUyeGFhR0V5T0hkV1JtUTBZekpTU0ZKcVdsZGlXRUpZVkZWU1JrMVdXa1ZTYlRsWFRWWmFSMVJXYUV0VU1XUkhZMFpzVjJKVVJuWldSVnAzVjBkV1NWcEdhRmRpUm5CWFYxZDBhMDFHWkVkVGJrcHFVa1ZLV0ZWclZrdFdSbEpXV2tWa1YwMXJjRWhaYTFwWFlWWmtTR0ZHUmxoV2JWRXdWV3BLVjJNeGNFbFViV2hVVWxSV1ZsWkdWbE5TTWxaellUTmtXR0pyTlZoVmFrSjNUVlpXV0UxRVZsZE5hM0F4VlZjMWQxWldXbk5qUmtKWFRVZFNVRlV4V210a1IxWklZVVUxVG1KWGFFaFdiWGhUVTJzeFdGVlliRk5pUm5CUFZUQmtiMWRXYkZobFIwWllWbXh3ZVZadE5XdFhSa3AxVVd4c1lWSlhhRkJaVjNoYVpEQTFWbUpHV2s1aWJFbDZWMVphWVZsV1dYbFVhMVpZWWtkb1dGUlVSa3RWUmxwSFYyMTBWazFWTlVoVk1qVlBZVVpLVldKR1ZsWmlXR2d6V2tkNGExZEZNVmxqUjNoVFRVUldTVll5ZEZkaE1WcFlVbTVLVDFaNmJGaFpWM1JMVFRGU1ZsZHNaR3RTVkZaWVZrZDRkMVl5U2xkVGEyaFhVbXh3ZGxWVVJtRldhekZaVm0xb1UxSnVRbWhXYlRFMFpERldSMVpZWkZoaVZWcHlWbXBDZDFOV2JISldWRVpXVFZad01GUXhVbUZXTURGWFkwZG9WMUpGV2xCYVJWcFRWMVp3U0dKR1VsTmlTRUpWVmpGamVFNUhVWGxVYkdSWFYwZFNXVmxzVm1Gak1XeHlXa1pPV0ZKdGVGZFdNbk0xWVVaYWNtTkdiR0ZXVjJoeVYxWmFTMUp0VGtsalJuQlhWbTVDVEZkc1ZtRmhNazVYVjI1T2FsSXllSEJXTUdSdlZGWlplR0ZJWkZKTmF6RTFWbGQwYTFkSFNuSlhiR1JhWWtkb1JGWnJXbE5XYkdSMVYyMTRVMkpIZHpGWGExWmhZVEpHY2sxWVRsUmlSMmhoVkZWa2IxWkdXbFpYYlVaclVqQmFTVlF4V210aFYwcHlVMnhzV0ZaRmJ6Qlpla3BQVmpGV2RWVnRjRk5OYldoWlZtcENhMkl4U25OWGJGWlVWMGRvVUZWdGN6Rk5SbFowWlVoT1dsWnJOVWRWTWpGSFZsWmFXRlZ1V2xkU1ZuQjZXVEo0ZDFJeFVuUmtSazVwVTBWR05GWnRNSGRsUlRGSFZsaG9XR0pyY0hGVk1HaERWMFpTV0dORlRrOVNiRnA0VlZab2IxZEdTbkpPV0d4YVlURndhRlpxUVhoa1YwWkdUMVprVjJKRmNFVlhhMUpMVlRKTmVHTkZiRlZpVjJoVVZqQmFTMlZXWkZoa1JscE9WbTFTV0ZaWE5VOVhhekI1WVVjNVYyRnJXbWhXYWtaelkyMUdTVnBHWkZOaVJ6aDVWbGN4TkZFeFdsZFhibEpXWWtWS2FGVnRlSGRWUm5CR1drWmtWRkl3Y0VsWmEyUnpWVEZrUmxOc2JGZGlXRUpJVjFaa1NtVkdVbGxpUmxKcFlYcFdlRlpYTUhoT1JsbDRWMjVHVkdGc1NsWlphMXBoVm14V1dFNVhkR2hpUm5Bd1dsVmFhMWRIUlhsaFJrSmFWak5PTkZZeFdrZGpiVTVIVjJzMWFHRXhWak5XTVZwaFlURkplRmR1VWxSaE1uaHhWVzE0UzFkR1VsaE9WemxYVW0xU1dGWXllR3RVTVVweVkwVm9WMUo2VmtoV1Z6RkxWMGRHUjFWc1ZsZGxiRm94Vmtaa05GWnRWa2RqUld4VllYcFdUMWxVUm5kWGJGcHpXa1JDYVUxV1draFdNbkJoVmpKS1dHRkdXbGRpYmtKWVdrZDRjMDVzU25OYVJtUlhZWHBXTkZac1kzaGlNVlYzVFZWV1UxWkZjRmhaVkVaM1kyeHNObEpzVGxkTlZYQmFWMnRrZDFaR1NuVlJiSEJZVmpOU2NsbHFSbE5TTWs1R1lVZDRVMVpIZUZwV1YzaFRWakZrVjFWc1pHRlRSVFZXV1d0V2QyVldhM2RWYXpsWVVqQldOVlpYTlhkV2F6RnhVbXM1WVZKRmNFeFZNVnBYWXpGYWRHSkhiRlJTVlc5NlZtcEdhbVZIVm5KTlZscE9WMFUxY0ZVd1ZuZGhSbFowWlVoa2FVMVdjSHBaVldNMVZURmFjMVpxVmxWaVJsVXhXVlZhWVZaV1NuRlJiR1JUWld4YVJWWnRlR0ZUTVZweVRsWmFiRkp1UWs5VmJYaDNUbXhrVlZGdGRGWmlWbHBaVlRKMGIxVXlTa1pPVlRsV1lsUkZlbHBYZUdGalZrcDBVbXhXVGxaVVZYZFdhMXB2WVRKR1YxUnJaRmhpUmxwaFdXdGtiMlJzYTNoWGJFNVhWbXR3TUZWdE1UUmhWazVHVTJ0b1dGWnNXbGRVVm1SSFVqRmtjMkpIYUZOV2JIQllWa1prZDFZeFZrZGFSbVJZWWxWYVVGbHJXbmROVmxwMFRWVmtWazFXYkRSVk1uQkhWMFphYzJOR2FGVmhNWEJNVldwR1UyUldWbk5SYkdST1VtNUNZVlpzWkRSaU1VWjBWbXhrV0dKSGFISlZhazVUWTFaU1ZsVnJaR3hXYlhoNVdWVldUMkZGTVVWU2FrSmhWbGRvUkZZeU1VdFNNV1IwWVVaV1YxWnVRbmxYV0hCSFZUSk9kRlJyYUdwU1ZGWlVWRlJLYTAweFduUmxSM0JzVWxSV1NWVnROVXRVYkdSR1kwWkNWMkV4Y0doWFZscGhaRVV4V0U5V1RsTmlSWEJZVmpKMFYyRXhaRWRUYkZacFVtNUNXRmxzYUZOTk1XeFdWMjEwVkZKc1dqRlhhMXB2VmpKS1IyTkliRmRpV0VKTVZtcEdhMUl4VW5OaVIwWlRZbFpLZGxkV1VrOVJNa2w0VjI1U1QxZEhVbGhaYkZwSFRrWnNWVlJ1WkdoV2EzQmFWVmMxUjFaV1dsaFZWRUpWVmxad2VsWnRlSGRTVmxaMFlVZHNWMWRGU2xoV01XUXdXVlpaZUZwRmFGUmhNbWh2Vld4b2IxbFdVbFpYYm1ST1RWWnNORll5ZUU5WFJrbDNZMFZrVlZac2NFeFdSM2hQVW14T1dXSkdaR2hoTWpoM1YxZHdSMVJ0VmxkV2JsWlZZa2RTV1ZVd1ZrdFhSbVJZVFZSU2EwMXJOVmhaYTJoUFdWWktSMU51UmxWV2JWRjNWRzE0YzJOc1duVmFSMmhvWld0YVNsZHNWbE5TTVZsNFYycGFVbFpGV21GV2ExWmhZVVpTZEdWRmRHdFdhMXA2V1RCa2MxWXhTbGRqUlhCWFRWWktSRmxVUms1bFJrNXlXa1pXYVZJemFGZFhWbEpQVVRKT1IxZHVUbGhpYlZKelZtMTRjMDVXY0VaWGJYUlhWbFJHZVZSV1VsTlhiVVY0WTBod1YySkhVa3hhUmxwSFkyMVNSMk5HWkdsV01tZzFWakZTUTFsWFJYaFhXR3hUWVRKU1ZsbFljRmRXUmxKV1ZXeGtUazFXY0ZaVmJUQTFWbFV4Vms1VVFsWk5hbFpNVm10a1MxWlhTa2hoUmxwcFVqRktWVmRyV21Gak1WbDRWMjVHVm1KRk5WUlpXSEJXWkRGa2MxWnRkRTlTYkhCSVZUSTFTMkZzVGtsUmJHeFhZbTVDUTFwVldtRlNWazV5VDFaU1UyRjZWbUZYVjNSV1RsWlZkMDFZVm1oU1ZHeFlWbTE0UzFKR2NFVlRhM0JzVWpCV05sZHJaRzlWTVZwVlZtNWtWMVl6UWtSYVJFRjRVakZrYzFwSFJsUlNWRlpYVm0weE1GWXdNSGhoTTJSb1VqQmFZVlp0ZEhkWFZscElZMFpPV0dKV1dubFZNalYzVjJzeFNGVnNUbUZXYlZKTVZUQmFTMk15UmtkVWJXeG9UVWM0ZVZadGNFZGhiVkYzVFZaa1YxZEhlRmhaYlhSM1kwWlZkMVpyZEdwaVJrcFpWRlpTVTJGVk1WZGlSRTVYVFc1UmQxbFhjM2hYUjFaSlkwWndWMVpzVmpSWFZsWmhXVlprV0ZKcldsZGlSbkJQV1ZkNFdtVnNXWGhYYlVab1RWVndNRlpIZEhOWlZrcDBZVWhDVm1GcmNIWldWVnByVmpGa2MxcEZPVk5oTTBKSlZtdGpNVll5Um5OVFdIQldZa1pLYUZadWNFWmxiRkpYVjIxMFYwMVhVakJhUlZwclZHMUtSMk5FVmxoV00xSjJWVlJLUm1Rd01WbFZiWGhVVWxWd1YxWnRjRTlSTVZwSFlUTmtXR0pGTlZSWmExcExaVlp3UmxwRVVtaFdhelZIVlRJeFIxWXlTa2hWYWs1V1lXdHdTRmw2Ums5ak1rcElZVVpTVTAxVmNHOVdNbmhyWldzeFYxZHJaR2xUUlhCb1ZXeG9VMk5zVm5SbFNHUk9WbTE0ZVZkcmFHdGhWa3B6WTBac1lWWldTbWhXYlhONFYwWlNjVlZzV21oaE0wSlJWbTF3UzFNeFNYbFRhMmhUWVhwV2NGWXdaRzlWUmxwelYyeE9VazFzU2pCV2JYUnJZVVV3ZVdWRk9WZGhNVlY0V1dwR1lXTXlSa2hQVms1WFlrWlpNVlpHV2xOUk1rWkhWMnhXVTJKdGFGaFpiRkpYVlVaYWNsZHNjR3hXTVVZMldUQmFkMVl5U2xkVGEyeFhZV3RLVjFSV1dtdFdNVXAxVlcxMFUyRXpRbEJXVjNCUFltc3hjMWRzVmxOaVdFSlBWbTE0UjA1V1ZYaGhSemxvVm10d01GcFZXbGRYYlVwSVlVaGFXbFpXY0ZoV2JGcEhaRlp3U0dGRk5WZGhNMEpKVm0xMGEwMUZNVWhTV0doVVlteEtjMVZ0TlVOV01WcDFZMFprYW1KSGVGZFdNakZIVkRKS1IyTkVSbGRpV0dnelZrZHplR1JYUmtabFJtUlRaV3RXTTFkWWNFdFVNazE0Vkc1V1ZHSkdTbkJWYkdoRFYxWmFkR1ZIUmxwV1ZGWjZWako0YjJGc1NsWk9WbEpWVm14YWFGcFhlR0ZUUjFaSVVteGFUbFl4U2toV1IzaGhZVEZhVjFkc1pGaGlWMmhYVm10V1lXRkdjRWRhUlhSVFZteGFlbGxWV2s5aFJURlpVV3hzVjAxWFVYZFpWRUY0VWpGV2MxcEdVbWxoTTBKYVYxWlNRazFXV1hoWGJsSnNVMGRTVjFWdGVHRmxWbHAwWTBaT1ZrMXJjRXBWVjNSclZtc3hkV0ZGZUZkaGEzQklWRzE0WVdOc1pITmFSazVYWWtoQ1dsWXhXbE5TTVVsNVZXdGtWV0pIZUdoVmJYaDNZMFpzVlZKdVpGZFNiVkpZVmpJd05XRlZNVmRXYWxKWFlsaG9jbFpxU2tabFZsWnpZVVphYVZkR1NtaFdSbHBoWkRGYWMxZHVVbEJXYkhCd1ZXMDFRMWRHV25GVFZFWm9UVlp3ZWxZeGFIZFdiVVkyWWtkR1lWWXpVbWhWZWtaM1VsWktjbVJIY0dsU2JHOTNWMnhXYTJJeFVuTlVhMXBVWVRGYVdGbFVSbUZYUmxweFVteHdiRkpyY0RGV1IzaFBZVlpLZFZGc2JGaFdiRXBJVlhwR1UyTXhXblZTYkZKcFVsUldWVlpYTVRSWlZtUkhWMjVTYW1Wc1dsZFVWVkpIVTJ4c1ZsWnRkRmhpVlZZMFZqSjBORll4V1hwaFIyaFhUVWRTV0ZWdGVHRmpNVnB6Vkd4a2FWTkZTVEZXYlhoaFlUQTFSMU5ZYUZoWFIyaHhWV3hhZDJGR1ZuTlZhMlJYVW14d01GcFZhR3RWTVVwelkwWm9WMDF1YUhKV2FrRjRWbXMxVmxwSFJsZFdiSEF5Vm0xNGExSnRVWGxVYTJSVllrZFNiMWxVUWxkT1JscFlaVWRHVmsxVmNIcFhhMmhMVlVaYWNtTklRbFppUm5BelZqRmFZV05zWkhSUFZsWk9WbXhaZWxaR1dsZFpWbVJJVWxoa1QxWnRVbUZXYWs1VFZFWldjVkp1VGs5aVJYQjZWMnRhYTJGV1NsbFJhbFpYWWtkU05sUldXbE5qTVU1elZteGthRTFZUWxsV1YzaGhXVlprUjJKR1ZsTmhNbEp4VkZaV2QyVnNXWGxsUjNSb1VsUkdWMWt3VlRWV01WbDZZVVpTVm1GcldrZGFWVnBoWXpGd1IxcEdhRk5OYldoV1ZteGtOR0l5U1hoVWEyUnBVMFZ3V0ZsVVRsTldNV3h5VjI1a1RsSnVRa2RaVldoclZqQXhjbU5GYUZkTmJsSjJWbTB4Um1WV1ZuTlJiRnBwVjBkb1VWZFVTalJrTVVweVRWWmtWV0pIVW5CVk1GWkxVbXhhZEdWSFJscFdiR3cwVmpGb2IxWlhTa2RqU0U1V1lrWndNMWxWV2xkak1WcDFXa1phVGxadVFYZFhiRlpyVWpGYVYxZHVUbFJoTWxKWVZGZHdWMVZHV2xoTlZYUlRZa2RTZWxsVlduZFdNVXBWVm14R1YySlVSVEJYVmxwaFl6RndTVk5zWkdsV1ZuQlpWbTB4TkdReFVsZFhiR2hxVWxVMVVGVnRkSGRsYkZsNVRsVjBWMUl3Y0VkWk1GcHZWakpLV1dGRVRsWk5ibWhvVlcxNFlXTXhjRWhoUlRWWFZtNUJNbFpzWTNoT1IwbDRWbGhzVTFkSGFGbFpXSEJYVmpGc2MxVnJXazVTYkZwV1ZXMTRhMVl3TVZoVmFrWldUV3BHTTFaSGVHRmtWa1p6WVVaa1YyVnJXWHBXYkZKSFZtMVdSMVJ1U21GU2JXaHZWRlpXZDFkR1pGaGtSbHBPVWxSR1NGWXllRzlpUmtwWVZXeG9XbUV4V2pOYVYzaFdaVmRXUm1SSGJGTmlWa3BLVjFaV1YwNUdXWGhYYms1cVVtMW9WMWxYZEdGVlJtdzJVbTVrVkZacldqQmFWVnBQVmpKS2NsTnNWbGRpVkVVd1ZtMXplRmRHU25KYVJscG9UVmhDV1ZkV1pEQlRNVlY0WWtoS1YySlZXbGhVVm1RelRXeGFTR042VmxkaGVrWkdWVzEwYTFZd01YVlZiRUpYWWxoT05GWXdXbGRqYkhCSFkwZDRhRTFZUWsxV01uUlRVakZOZVZSdVRsVmlhelZYV1d0YWQxUXhVbGhOVnpsVVZteHdlbFl5TVVkV01ERldZa1JTVjFJelVuSldWRXBMVWpGT2RWUnNXbWxTYmtGNlZteFNSMWxYVFhoWGJsSlRZa1pLVDFacVJrdFhiR1JZWkVaT1ZrMVdWalZWTW5SaFYwZEtTRlZzWkZwaVIyaFRWRlZhV21WVk1WZGFSbWhYVFVad1NGWkdXbUZaVmxsNVUydGthbEpYZUZoWlZFWmhZVVpXY1ZGVVJsaFNiSEI1VjJ0YVUyRldTbGxSYkd4WFlsaG9hRnBFUm1GU01XUnpXa2RvVkZKVVZsRldWekUwV1ZaT1IxWnVVbXhTTUZwWFZGZDBkMUl4YTNkWGJHUlhZa1p3UjFSc2FHRldiVlp5VjJ4b1YyRnJXbWhaTW5oM1VqRmFjMVJzYUZOTmJXaEtWbTB4TUdFd01VZFVXR2hYWW10d1QxWXdXbUZpTVZaelYyNWtWMkpHV25wV01qRkhZVzFLUjFkc2JHRldWbHB5Vm1wS1MxWnRUa1phUm5CT1VteFpNRlpzVWtkWGJWWkhWRzVLVm1KSFVsaFphMmhEWWpGYWRHTkZaRmhpVmtZMVZtMTBZVmRIU2toVmJUbFZWbGRvUkZacldtRmtSMVpJVW14a1RtSkdjRFpXYWtvMFZqRldkRkpZYkZaaVJrcFhXV3hTUjFaR2NGZFhiWFJYVm14S2VWUXhXbUZVYkZwMVVXeG9WMkZyYjNkV1JFWnJVakZrY2xkc1VtbGlSbkJvVjJ4a01GbFdVa2RYYmxKc1VsaFNjVmxyVlRGbGJGcElaVWRHVldGNlJqQlpWVnByVmpKS1IyTkhhRmRoYTFwVFdsWmFUMWRYUmtkVWJXeG9aV3hhYjFacldsTlJhekZYVjJ0a1dHSnJOVmhaYkZaaFZURlNWMWR1WkZOaVJsb3dWRlZTUjJGSFJqWlNiR1JhVFVad2NsWnRNVXRYVmxaeVpVWmtWMUpXY0ZoWGJHTjRVakZKZUZWdVRsaGlSMUp3VlcwMVExVnNXblJOVkZKYVZqQldORll5ZEc5V01rVjRZMFpzV21FeFdqTldNRnBoWXpGa2RWcEhlRk5pU0VJMFZsUkpNVlF4VVhoVGJrcHFVMGhDVjFsc2FHOWhSbHBWVTJ0YWJGSXdOVWRVYkZwaFlWWktjbU5FV2xkV2JFcElWbXBHWVZZeFVuVlZiRUpYWVROQ1VGWnRjRTlpTVZweldraE9WMkpIVW1GV2JYaGhaV3haZVdWSFJsaFNNSEJYVmpKNGMxWXlSbkppTTNCVlZsWndXRnBGWkZkU2JIQkhXa2RzVTFkRlNURldiWEJMWlcxV1IxWllhRmhoTW1oelZXeGFTMWRHV25SbFJYUlZVbXh3VmxVeWRHdGhiVXBYVjJ0a1YwMXVhSEpaVlZWNFUxWkdjMVZzWkdsWFJVcEZWakZhYTFReVRYaFdia3BZWWtkU2NGVnFSa3RXUm1SWVpFWmtXbFpzYkRSV01qVlBZVVpLVldKR2FGZGlSa3BJVldwR1dtVlhVa2RhUm1oVFRVaENWMVpYTVRSaE1XUjBWbTVLV0dFemFGaFpiR2h2VkVacmVXVkZPV3BOYXpWSFZHeGtjMVV3TUhsWk0yeFhZbGhvY2xScldscGxSazVaWVVaT2FXRjZWbFpYVjNSaFV6Sk5lRlp1VW10U1dGSlhWRlphZDJWc1duTlZhMlJvVFd0d1NGWXllSE5XVmxwMFZWaGtWMVl6VGpSVk1XUkhVbXh3UjFwSGJGaFNhM0JPVm0xNGEwNUdiRmhWYTJoWFlUSjRXVmxyV25kWFJsSllUbGR3YTAxV2NGbFVWbEpUVlRBeFYyTkljRlpOYWxaTVZqQmtSMDVzU25OVmJIQlhVbFp2ZWxaWGRHRlpWbVJZVkd0YWExSlViRlJaVkVaYVRVWmFXRTFVVWxaTmEzQklWVEo0YjJGR1NuSk9WbWhhWVRGd2FGbFZXbGRqVmtwMFVtMXdUbFpyY0RSV2JHUTBWVEZWZVZKWWFHcFNiV2hZVm01d1JrMUdXbFZTYlVaWVVteHdlbGxyWkc5Vk1rcEhZMFpvVjJKVVJUQlhWbHBQVWpGa2RWTnNaR2hpUlhCVlZrWmtNR1F4U1hoV1dHeHNVbFJzVmxsWWNFZFNNV3QzVm14a1dGSnNjREJXVm1oclZtc3hjVkpyT1dGV1ZuQlFXWHBHYTJNeFVuUmhSVFZVVWxWd1YxWnRNSGhPUjBWNFZWaHNWMkpyTlZoWmJYUmhWVEZzVlZOc1RsWk5WM2g1VjJ0U1UxZEdXbk5qUldoYVZsWlZNVlpxU2tkT2JFcHlXa1prVG1Kc1NsRldiWEJIWVRGT1NGVnFXbEppU0VKUFZXMDFRMU5XWkZWVGFsSlVUV3MxZWxadE5WTmlSa3B5VGxab1YwMUdXa3RVVlZwaFl6RmtkR1JIY0U1U1JscEpWbFJKTVZReFZYbFRhMlJxVW14S1lWWnJWbUZOTVd4V1YyeE9WMkpHY0RGV1J6RTBZVlpLYzJORVVsZFdiVkYzV1ZSR1YyUkdUbkphUjJ4VFVsUldXVmRYZEd0aU1WWkhWMjVLVjFkSGFGUlphMlJUWlZaYVNHVkhSbFZoZWtZeFYxUk9hMVl5UlhsVlZFSldZV3RhYUZsNlJrOWtWbEp6VTIxc1dGSXlhREpXYTFwWFlUQTFSazVZVGxoaVIyaHpWVzB4VTFaR1VsZFdiVVpzWWtad1NGbFZhRTlXTVZwMFZXdGtWV0pHY0ZoV2JGcGhWakZrZEdGR1dsZFNWbkJaVmtjeE5GSXlUbkpPVm1ocVVsUldXRmxyYUVOWFZscHpXVE5vVGxKck1UUldNalZQVjBkS1NGVnVRbFpOUjJoRVZtcEdjMWRIVWtaa1JsSlRZa1p3V2xkc1ZsZGtNa3BIVTI1T2FsSnVRbGhWYWs1dlkyeGFjVkp0UmxkTmF6VkhWbGQ0YTJGV1pFaGhSbXhZVm0xT05GWkhNVmRTTVZaellrZEdVMkY2Vm5aV1JsWnZVVEZaZUZwSVRsaGlWR3h3VkZaVmVFNUdXblJsUjNSWFRXdFdOVlpYZUdGWGJHUkpVV3RvVjJGcldsZGFWV1JIVW1zNVYxZHJOVmRpYTBwWlZtMXdTMDFHVVhoWGJsSlhZbXR3Y1ZWc1VuTlpWbkJZWkVkR1ZVMVlRa1pWYlhRd1lXMUtSazVZY0ZkV00wMTRWbFJHWVZKc1pGVlRiR1JwVjBkb2IxWnRjRWRUYlZaSFUyNVdWV0pIVW5CVmJUVkRWMnhhY1ZGc1drNVdiSEJJVmxkNFlWWXlTbFpYYkU1VlZteHdhRnBWV2xka1IxWklVbTFvYUdWcldsbFhWRUpoWVRGYWRGTnNiRlpoTTJoWVdWZDBZV0ZHV1hkYVJrNVVWakExU0ZkclpHOWhSVEZKVVd0d1YySkhVWGRaVkVaU1pVWk9kVlJ0Y0ZOV00yaHZWbGN4TUdReVNYaFhXR1JoVW5wc1ZWVnRlSGRYUmxsNVpVZDBWazFFUmxkWk1HaDNWakF4ZFdGR1VscGhNWEJNVmpCa1IxSXhVbk5hUjJ4VFlraENkbFp0TVRSWlZteFlWV3hvVkdFeFdsZFphMXAzVmtac1ZWSnVaRmhTYkhCWlZGWlNVMVZyTVZkalJtaFdZa2RvTTFsVldrdFhSMVpIV2taa2FWZEhhRzlXYWtKaFl6QTFjMU51U21GU00xSlVWRlZhZDFOR1duSmFTSEJzVW14V05GWXlOVTloYkVwWFUyeG9WMkpZYUROV01GcGhZMVpLZEdSSGNHbFdiSEJJVm1wSmVGSXhWWGhYYkd4U1lrWktXRmxzYUVOU1JtUlhWMnh3YkZKc1dubFdNbmhyWVVkRmQyTkdVbGhXTTFKWVYxWmFXbVZIUlhwalIzQlRWa2Q0V0ZkWGVGZFpWbVJ6WWtaYVYySllVbGhaYTFwM1pXeFplV1JIT1ZkTlZYQllXVEJvZDFaWFNraFZiR2hXWWxSR1dGVnFSazlqTVhCSFdrWmthV0V3Y0ZGV2JURTBXVmRKZVZSWVpFOVdWMUpZV1cxek1WWkdiSEpYYm1SWFVtMTRlVlp0Tld0V01VcDBaVVpvV2xaWFRURldhMXBoWXpGa2MyRkdaR2xYUmtwNVZtMTBZVk15VFhoVWJrNVhZbFZhV0ZacVJrdE5iRnB6V2tSU1dsWnNjSGxVYkZaWFZrZEtSMk5HYUZaaVJuQXlXbFphYTFkWFRrWmFSbEpPVm01Q05sWlVTVEZUTVZwSVUydGFUMVp0YUdGWmEyUnZWa1pTZEdWSFJsaFNNRFZIVmtkNFQxUnNXbGRqUkZwWVZqTlNhRmRXWkVkamF6RkpXa1U1VjJKV1NsZFdiWGhoV1ZkR1IxWnNWbE5pVlZwWlZtcENkMUpzV2xoTlZFSm9WbXR3V0Zrd1VsZFdNVm8yVWxoa1YxWkZjRXhWYWtaUFl6RmtkR05HVWxOTmJXaFpWbTB4ZDFNd01IZE5WV1JYWW14S2MxVnNaRk5YUm14eVZtNWtiRlpzYkRWYVZWVTFZVlpLZEZWcmJGcFdWbG96Vm1wR1lXTXlUa2RoUmxwb1lUTkNTVlpVUW1GVE1XUlhZMFZrVm1KSGFGUldhMXBoVjBaYWNsZHNaRmROVjNoWVZXeG9iMWRIUlhoWGJGSmFZVEZhTTFreFdsTldNVnAxVkdzMVRsWnNiM2RYYTFaclVqSkdSMWR1U21wU2JWSmhWRlZhUzFOR1duUmxSbkJzVmpGSk1sVlhlR0ZoVm1SSVlVVnNWMkpVUlRCVmVrcFBaRVphY2xwSGNGTk5NbWhhVmxkd1MySXhVWGhYYms1WVlsVmFXRlJXVm5OT1JscFlaRWQwVmsxclducFdNalZQVm0xS1dWVnFUbGRXUlZwb1dYcEdZV1JHU25OWGF6VlhZa2M1TTFZeFpEQlZNVlY0VjJ0a1ZHSnJjRmxaYTJSVFZqRnNjMkZHVG10aVIzaFhWakl4UjFZeVNsWmpSWEJhVFVad2NsWlVSa3RXYlU1R1lrWmtWMkpXUlhkV2JHTjRWVzFXUjFadVRtbFNiRnB3VlcxNGQxZFdXblJsUjBaclRWVndTRll5TlV0WFIwWTJZa1pDVm1KWWFFeFZNRnBYWkVkV1NGSnNaRmROU0VGM1YyeFdZVlF4V2xkWGExcHFVMFp3VjFsVVJuZFdSbFowWlVkR2FrMVlRa2hWTWpGelZURmFkVkZzYkZkaVZFSXpXbFZrU21WR1ZuTmFSbEpwVWpKb1dGZFdVa0pOVmxsNFYyNVNiRk5IVW5OWmExcDNaVlphZEdOR1RsWk5hM0JZVlRKMGExWnJNWFZoUlhoWFlXdGFjbFZ0YzNoV1ZtUnpXa1prYVZacmJ6SldhMlF3V1ZaTmVWUllhRlJpYXpWWldXdFZNV0l4VWxWVGJUbG9VbTFTZWxZeU1EVmhWVEZYVTJ4b1YySllhSEpXYWtwR1pWWldjMWRzV21sWFJrcG9Wa1phWVdReFduTmFTRXByVW14d2NGVnROVU5YUmxweFUycFNWVTFXY0RCVk1uaHZZVEpXY2xOc1pGVldWbkF6VlRCYVlXUkhWa1prUjNCcFZsWndTbGRXVm1GaE1WbDRWMWh3WVdWcmNGaFpiR2hUVmtaV1ZWSnJjR3hTYTNBeFZrZDRZVmRHU1hoVGJHUlhZV3RLVjFSV1dtRmpNV1IxVkd4a2FWWldjRlJXUmxwaFpERk9SMWRyYUdwU2F6VllWVzEwZDJWV1dYbGxSM1JYWWxWd1dsWlhOV0ZXTURGeFVtdG9WMDFYVWtoVmJYTTFWakZrYzFwSGJGTmlhMHBUVm0xMGEwMUdiRmRVV0doVVYwZG9jRlJVVGtOV2JHeHlWbFJHV0ZKc2NIcFdNalZyVlRGS2MyTkdiR0ZXVjFGM1ZsUktTMVpyTVZWVmJGcE9WakpvZVZac1VrdFNiVkY1Vkd0a2FWSnRVbkJWYWtaSFRURmtjMXBFVWxwV2JIQllWVzAxUzFsV1NuSmpTRUpXWWxob2VWcFZXbXRqTVZwMFQxWndWMkpHYjNkV1YzaHZZVEZrU0ZKWWFGaGlWMmhYV1Zkek1WWkdXa1pYYmtwc1VtMVNlVmRyWkhkVk1ERlhZMFZvVjJGcmJ6QlZla1phWlVaa2MxcEhjRk5XTW1oWlZtMDFkMVl5Vm5OVmJrcFlZWHBzVkZSV1ZuZGxiRmw1WlVVNWFGWnNiRFZaVldoaFZqRktjMWRzYUZwbGEzQllXWHBHYTJOc1duTlRiV2hPWWtWd1ZWWXhaREJaVmtsM1RsVmtWMWRIYUc5VmJGSnpWMFpXZEdWSVpGZE5WbXcxV2tWb1QxZEhTbFpqUm5CWFZqTlJNRmRXV2t0U2JHUnlZVVp3VGxJeFNsbFdWekUwWVRKTmVGUnVUbUZTYlZKWVdXMTBTMVZHV25SalJXUnBUV3N4TTFSc1ZtdFdiVVY1Vld4U1dtRXhjRE5XYTFwelZsWlNkRTlXV2s1WFJVcFpWMVpXYWs1V1duSk5WbVJZWWtkb1dGbHNhRk5qYkZwMFRWVjBVMkpWTlVwWGEyUkhWakZhYzJORVNsZGlSMUV3VjFaYVlXTXhjRWxUYld4VFltdEtkMVpYTVRSa01WSkhXa1pzYWxKWFVsZFpiRnBIVGtaVmVVNVZkRmRTTUhCSVZqSnpOVlp0U2xsVmJXaFZZbGhvYUZreWVHdGpNWEJIVkdzMVYxWnVRVEpXYlhoclRrWlZlVk5yWkZSaVIzaHZWVzF6TVZkR2JISlhiRnBzVW14S2VsWXllR3RXTVZwelUycENWVTFXY0V4V1IzaFBVMGRHUm1GR1pHbFdSVll6Vmxod1IxWXlUWGhhU0U1aFVtMW9jRmxVUm5kV01WcFlaVWRHV2xZd05YcFdiWGh2WWtaS1dGVnNhRlZXTTFJelZUQmFWbVZYVFhwaFJscE9WakZLU1ZaVVNqQlZNVmw0VjI1T2FsSnRhR2hXYWs1UFRURndWbGRyZEd0V2Exb3dXbFZhVDFZeVNuSlRiRlpYWWxSRk1GWnFSbk5XTVZaeldrZEdVMkpZYUhkV1YzUmhVekZhYzFadVVtdFNNRnBZVkZaYVlVMUdjRVpWYkU1WFlsVndXRll5ZUhkWGJGcFhZMFpDVjJKWWFHaFpla1pyWTIxR1IxcEdaRTVOYldoT1ZqRlNRMkV4V1hoVGJsSlRZVEpTVlZsclpGTlhSbHAwVGxWT1ZFMVdiRFJYYTFKVFZqQXhWazVVUWxkU2JXaDJWbTE0YTFOR1ZuTlZiSEJYVWxWdmVsWnRNVFJWTVZweldraEtZVkl6YUhCVmJUVkRVMVphZEUxVVFtaE5WbG93VlRKMGExWkhTa2RYYldoWFlrWndhRnBIZUdGWFIxWklVbXhrYVZJeFNqVlhWM1JoWWpGWmQwMVlWbHBOTWxKWVdWUktVazFHVm5GU2JVWnFUVlphTVZWdGVHRmhWa3BWVm14V1dGWXphSEpXVkVFeFl6RmtjMkZIZUZOaVZrcFZWa1phVjFsWFZuTldXR3hzVW5wc1dGWnRNVk5TTVZKelYyeE9WMVpzY0ZoV01qRnZWbXhhUmxkdFJtRldWbkJvV2tWa1QxTkhUa1pPVm1ScFVtMTNNbFp0ZUdwbFJURkhWRmhvV0dKc1NsaFphMlEwWWpGV2NsWnVaRmROVm5CNFZrZDRUMVpHU25OWGJteFlZVEZ3VUZsWE1VdFNhelZWVW14YWFWZEhhRTFYVmxaaFlURk9TRkpyV21oU2JWSllXV3RvUTFkV1dsaGpSV1JVVFdzeE5GWkhOVWRXTWtwWllVWlNWMkZyY0haV2ExcGhaRWRXUjFwR2NGZE5SM2N3VjFkMFlWWXhWblJTV0hCU1ltdGFWbFp0ZUhkVFJsSlZVbXhrYTFJeFNrZGFSVnByVmpGYVJsZHNhRmRXZWtGNFdrUkdZV05yTVZkYVJtaG9UVzFvV0ZaR1ZtdFZNVkpIWVROc2JGSlViSEpXYWtKM1UwWlZlVTFYT1ZoU2EydzFXVlZXYzFZeVNrZGpSMmhYWVd0YVMxcFZXbGRqYkhCSVlrWk9VMkpJUWpaV2JHUTBZakpKZUZaWWFGaGlhelZZV1d4V1lWWnNXblJsUjBaWVlrZDRlVlpYZUU5V01rcFdZMFZrVjAxdWFISldiVEZMVjFkR1JtVkdaRmRTV0VKSlZtcEdhMUl4U25SVGEyUllZa2RTY0ZWdE5VTlRiRnB6Vld0T2FFMVZOVEJXVm1odlZsZEtTR1ZHV2xwaE1YQXpWakJhWVdNeFpIVmFSazVUWWtoQ05sWnFTalJoTVdSSVUyeGFUbFpHU2xoV2FrNXZZVVphVlZOcldtdE5helZJVmpKNGExWXhTbFZXYWtwWFlURndhRlpxUmxwbFJtUjFVMnhDVjFaR1dsVlhWbEpIVjJzeGMxcEdaRmRpUjFKV1ZGWmFTMWRHVlhsbFIzUllVakJXTTFSc1dtdFdNa3BaWVVkb1YwMUdjSHBaTW5oaFkxWldjMVJ0YkZSU1ZYQkpWbXhTUzA1R1RYaFhXR1JPVmxkU2NWVnRkSGRYUmxaelYyMUdXRkpzU2xkV01uUnJZV3N4Vm1OSWNGZE5ha1l6V1d0a1IwNXNXbk5WYkdoWFlraENNbGRYY0VkVGJWWkhWMjVPWVZKdFVtOVVWM2hMVmpGYVdFMUlhRTVOUkVaWVdUQmFZVll5Um5OVGJHUmFZVEZ3TTFacVJscGxWMDE2WVVaa2FWSXhTa3BYYTJoM1VURlplRmRZY0doU1YyaFlXV3hvYjFSR2JEWlNhemxxVFZaS01GbFZXbTlWTURGMFlVVjRWMkpZYUdoWFZscGFaVVpPV1dGR1ZtaE5iV2hXVm1wQ2ExVXhXbGRYV0dSWFZrVmFXRlJXV25kbGJGcDBUVlZrVm1GNlJsaFpNRnB2VmpKS1dXRkVUbHBXTTA0MFZtcEdUMk14Y0VkWGJXeFlVbXR3VGxadE1UUlpWbHAwVm01U1UyRXhjSEJWYlhoM1YwWnNjbGR1WkZSV2JIQldWVmN4UjJGck1YSk9WV3hYWWxoU2FGWkVSbUZqYlU1SFlVWmthVkpyY0VoV1JsWmhXVlprU0ZWcmFGTmlWM2h3Vm14U1JrMUdXbFZUYWxKYVZteFdOVlZzYUd0aGJFcHpVMnhvV2xZelVtaFdNRnAzVjBkV1IxcEhjRmRoTVhBMVZqSjBZVk15UmxkVFdIQm9VbTFvV0Zsc2FHOWtiRnBGVW0xR2FtRjZSbGRXTW5odllVVXhSVlpzYkZkaGEwcHlWRlJCZUZJeVRrWmhSM2hUVmpGS2VGZFhkRmRrTWxaWFYyeG9UbFpHU2xkVVZscDNWMnhXV0dOR1RsZE5WbkF3VmxjMWQxWlhSWGhqUlhoYVpXdGFURmw2Um10ak1WSjBZVVUxV0ZKVmNGZFdha28wV1ZkSmVWTllhRlZpUjFKWVdXdGtVMWRHYkZWVGJFNXBUVlphZUZWWGVHdFVhekZYVm1wU1dsWldWVEZXYWtaaFZsWktjbHBHWkU1aWJFcFJWbTF3UjFNeFNuTlRiR3hoVW01Q2MxbFVSbmRWVmxwMFRWUlNWRTFyTlRCVmJYUnZZVEZKZVdGRk9WWk5SbHBMV2tSR1lXTnNXbk5hUm1ST1ZtMTNNRlpYTURGVU1WVjVVMnRrYWxKdGFHRlpWRXBUWkd4YVNHVkdaR3BOV0VKSVZrZDRTMVJzV25OalJteFhZbGhvZGxscVJtdFNNVTV6WWtkb1UxWXhTbTlXVjNoaFdWWlNSMWRzYUd4U01GcFpWbTE0UzFkc2EzZFhiVVpYVFVSR01WZFVUbXRXTVZvMlVsUkNWbUZyV21oWmVrWlBaRlpPZEdWR1RtbGhNSEEyVm0xd1EyRXlTWGhWYms1WVlrZFNXVmxyWkZOV1JsSlhWMnQwVkZKc1dqQlpNRnByWVZaS2NtTkliRnBOUm5CUVZtcEtTMUl4WkhSaFJtUlhVbFp3V1ZkclZtdFRNVXBYVm01T1ZtSkZOVzlVVm1oRFYxWmFjMWt6YUU1U01HdzBWakowYjFZeVNraGxSemxXWWtaS2VsWnFSbUZrUjFaSVVteGFVMkpZWTNsV1Z6RXdXVmRLUjFOdVVsQldSbkJZVldwT2IxVkdXbkZTYlVaWFRXczFSMVpYZUd0V01EQjVZVVpzV0ZadFRqUldSekZYVWpGU2MySkhSbE5oZWxaMlZrWldiMUV5UmtkWGJsSnFVbFJzVjFSV1ZuZFRSbHBZWkVkR1YwMVdjRWhXTW5oUFYyMUZlRmR0YUZkaGExcFRXbFZhYTJSSFVrZFdiR1JvVFRCS1lWWnRlR3ROUmxGNFYyNU9XR0V4Y0ZCV2JYaExWakZhY2xadFJtcGlSbHA1VjJ0YWExVXlTa2hWYm5CV1RXNW9jbFpxUm1Ga1ZrWnlZa1prYVZaRlZYZFdhMUpDVFZaSmVGVnVTbUZTYXpWd1ZXMDFRMVpXWkZoa1IwWlVUVmRTU0Zrd1dtdGhSa28yWWtaa1YySllhR2hXTUZwaFpFZFNTR1JHWkdsU1YzZDZWMVJDVjJFeFduSk5WbWhvVW10S1dGWnJWa2RPUmxaMFpVZDBhbUpHY0hwWk1HUnZWR3hhZFZGck5WZGlSa3BJVm1wQk1WSXhUblZVYkdocFlUTkNWbGRYZEZka01XUkhWMjVTYkZJd1dsQlphMlJUVjJ4cmQxWnJPVmRTVkVaWFZqSTFkMVp0U2xsaFNIQlhZa2RTUjFwRVFURlhWa3B6V2tkc1UySklRVEpXTW5oclRrWnNWMU5zWkZOaWEzQm9WVzEwZDJOR1ZuUmtSbkJPVW14c05Wa3dWVFZXVlRGWFZtcE9WVlpzV21oV01HUkdaVlpXYzFkc1dtaE5WbkJOVm10V1lWbFhUbGRTYmtaV1lrVTFjRlZ0TlVOT1ZscFZVMnBTVkUxV2JEUldNalZQWVd4S2RHRkdhRlppUm5Cb1ZqQmFjMVpXU25KYVIzQk9WbGhDTmxZeWRHRldNa1pZVWxoa2FsSnNTbGxXYlhoM1pHeHNjVkpyT1ZkTlZuQjZWMnRhYTJGRk1YTlRiRnBYVmpOb2RsbHFSazlTTVZwMVZXMTBVMWRHU2xoWFYzUmhaREpXVjFWdVRtaFNlbXhZV1d0a1UxTldjRWxqUlU1WFlYcEdNVmxWVm05V01ERkhZMFpTV2sxV2NISlpla1pQWkVkR1IyRkdUazVpVjJoWFZtMHhORmxXYkZkWFdHaFVWMGRvV1ZsVVNtOVdSbGwzV2taT1YySkdiRE5XYkZKSFZqRmFjMU5zWkZkaVZFWklWbXRWZUZZeVRrZGlSbkJPVW01Q2VWWnNaSHBsUms1WVVtdGFZVkp0VW5CV01GcExWRlphYzFwRVVscFdiR3cwVmpJMVYyRnNTblJoUm1oYVlURndNMVV4V21GV01YQkZWVzF3VGxadVFsbFdhMk14VXpGYVdGSnFXbE5pUmtwWVdWZDBZVlJHVm5KWGJVWlhUVmRTZWxkclpHOWhWbHBWVWxSQ1YySlVSVEJYVmxwV1pWWktXVnBIY0ZOaVZrcHZWbTB3ZUdJeVVuTlhiazVZWWtkU1dGUldXbmRsVm1SeVYyMTBWazFFUmtoWk1GWnZWakpGZUdOSVdsZFNSVnBYV2tSQmVGWnNaSE5oUjJoT1ZtNUNiMVl4WkRSaU1WVjRWbXRrVjJKSGFISlZhMXBMVmtac2NsZHVaR3hXYkZZMVdsVldNRll3TVZkalNIQmFUVVphYUZacVJrdFdNV1IxVTJ4d1YxSldjRWhYYkZaaFV6Sk5lRnBJVG1GU01taFBXV3RXZDFWR1duTmFSRkpwVFZaV05GVnNhRzlXTWtwSVZXeG9XbUpVVmtSWk1WcFRWakZhZFZSck5VNVdiRzkzVjJ0V1YwMUdXWGhUYms1cVUwaENXRmxzVWxkTk1WcDBUVlZrYW1KRk5YbFpWVnBoVmpBd2VXRkdSbGRpV0ZKeVZtcEdTMk14Y0VsVWJGSnBVakZLV1ZadE1ERlJNVTE0VjI1T1dHSlZXbFpVVlZKWFUwWlZlVTVWT1ZaTmEzQklXVEJhVTFkc1drWk9WVkpYVWpOb1dGbDZSbXRrUmtwelUyczFWMkpJUWxwV2JUQjNaVVV4UjFadVVsTlhTRUp2Vld4a1UxbFdiRlZTYlVaVlVteHdXVmw2VG10aVJrcHlUbGhzVjFZemFISldWRUY0WkZacmVscEdaRmRsYTFWM1ZsZHdSMWxYVFhoVWJsWlVZa2RvYjFwWE1UUmtiRnBIVm0xMFQxSlVWbnBXTWpWTFYwZEtTRlZzVWxWV2JGb3pWVEJhVm1WWFVraFNiR1JYWWxaS1NGWkhlR0ZXTVZsNVUydGtXR0pYYUZkV2ExWmhWMFpTZEdWRlpHcGlSMUl3V1RCVk1XRkhWbk5YYkd4WFlXdHZkMVpxUms1bFJscFpZVVpvYVZJemFIWldWM2hoV1ZaYWMxWnVUbGhpU0VKeVZGWmFZVmRXY0ZaV2JYUlhUV3R3V0ZVeWRHRldhekYxWVVWNFdtRXhjSEpWTUdSSFVtczFWMXBHWkdsVFJVbzFWakZhVTFJeFNuUldhMlJoVTBWd1YxbHNhRzlXUm14VlZHdE9WMUpzY0RCYVZWcHJWMnhhYzJOR2FGcE5SbHBZVmxjeFIwNXNXblZTYkZaWFlrWlpNRlpHVWtkV01sSklWV3RrVldKSFVuQldiRnBhVFZaYVJWSnRPV3ROVm5CNVZGWmFhMWRIUlhsVmJGcGFZVEZ3TTFaRlduSmxWMVpIV2tab1YySkZjRFpXYTJSNlRWWlZlRmR1VmxKaE1WcFlXV3RhUzFOR1duRlRiR1JyVW14S1dsbFZXbGRYUmtsNFUyeFdXRlo2UlhkYVJFWmhVakZXYzFkc2NHeGlSbkI2VjFkMFlXUXhTbk5XYkdoclVqTlNWMVJWVWtkV01WbDVaVWQwVjJKVmNFbFpWVnBEVmpGYVJsSnFVbFppV0doeVdUSjRVMk14Y0VkVWJFNVhWMFZLVmxacVJtOWtNVWw0Vlc1U1ZsZEhhRlZaYlhSM1ZsWnNjbGR0UmxWTlZscDZWakl4UjFReVNrZGpSbXhoVmxad2NsWlVRWGhXYlU1SlkwWmthVmRHU205V2JYaGhZVEZLY2s1V1pGZGlSMUp3VlcxNGQySXhXbFZTYlVaYVZtMVNTVlpIZEdGWlZrcHlUbFpTVjAxSFVuWlZNVnBoWTJ4d1JWRnNVazVXYkhBMlZtcEpNVk14WkVkWGExcFlZa2RTV0ZSVlpGSk5SbFkyVW01T1QySkZXakZXUnpFd1ZUSktWMU5ZYUZkV2JVNDBXWHBHVm1Rd01WZGFSbWhwWWxaS1dWWlhkRmRrTWxaelZtcGFWR0V5VWxWVmJYTXhaVlpzVmxwRVFsVmhla1pZV1RCb2ExWXlTbGxSYTNoVllURldORlpxUmxkamJVWkdUbFpvVTAxVmNEWldNVnBUVXpBMVNGVllhR3BTVmxwVldXMXpNV0l4YkZsalJXUnNVbTE0VmxaSE1EVlhSMFkyVW01b1ZtSllhRVJXTWpGR1pWWldjazlYUmxOU1ZuQlZWMnRhWVdFeVVraFRhMmhwVWpKNFZGWXdWa3BOYkZweFVtMXdhMDFFUmxoV2JUVlRWVEpLUjJOR1JsZE5SbFY0V1RKNFZtUXhaSFJTYlhCcFVtNUNORlpyWTNkT1YwcElVMnRvVm1FeWFGbFpWM014WTJ4YVYxZHRSbXRXTUZwR1ZXMTRVMVl3TUhsVlZFSlhVa1ZhYUZSclpGTldiVXBKVkdzMVYxSXphSEZYVnpGelV6RndTRmRzU2xGV1JFWnFXVzFzUzFwSFdsSlFWREZqWW1sS1pHWlJQVDFjYmlKZGZRPT1cbiJdfQ==\n"]}
